{"version":3,"sources":["webpack:///src/app/usage-stage/components/intermedial/intermedial.component.ts","webpack:///src/app/usage-stage/usage-stage.module.ts","webpack:///src/app/usage-stage/components/pass-step/pass-step.component.html","webpack:///src/app/usage-stage/components/pass-step/pass-step.component.ts","webpack:///src/app/usage-stage/usage-stage-routing.module.ts","webpack:///src/app/core/services/materials/materials.service.ts","webpack:///src/app/usage-stage/components/usage-stage/usage-stage.component.ts","webpack:///src/app/usage-stage/components/usage-stage/usage-stage.component.html","webpack:///src/app/usage-stage/components/intermedial/intermedial.component.html","webpack:///src/app/core/services/catalogs/catalogs.service.ts"],"names":["IntermedialComponent","router","materialsService","dialogRef","data","close","event","preventDefault","onNoClick","UsageStageModule","PassStepComponent","save","routes","path","component","UsageStageRoutingModule","MaterialsService","http","get","api_scheme_project","pipe","api_construction_stage","api_annual_consumption_required","api_electricity_consumption_deconstructive_process","api_materials","material","post","id","api_material_scheme_data","changes","put","schemeData","api_units","api_potetnial_types","api_standards","api_db_material","api_transports","api_potential_transport","api_source_information","api_source_information_data","api_type_energy","api_type_energy_data","UsageStageComponent","catalogsService","electricitConsumptionService","dialog","panelOpenFirst","panelOpenSecond","panelOpenThird","preferences","endSave","getEnergyUnits","subscribe","catalogoUnidades","map","unidad","name_energy_unit","push","console","log","catalogoUnidadEnergia","getTypeEnergy","tipoEnergiaElectrica","tipoEnergiaCombustible","tipo","name_type_energy","catalogoTipoEnergiaElectrica","catalogoTipoEnergiaCombustible","PDP","JSON","parse","sessionStorage","getItem","projectId","nameProject","name_project","unidadPanelesFotovoltaicos","unidadCombustible","unidadMixElectrico","cantidadMixElectrico","porcentajeMixElectrico","cantidad","cantidadCombustible","porcentajeCombustible","cantidadPanelesFotovoltaicos","porcentajePanelesFotovoltaicos","addACR","quantity","project_id","unit_id","addECD","undefined","percentage","annual_consumption_required_id","type","tipoCombustible","source","tipoMixElectrico","navigateByUrl","open","width","afterClosed","result","saveStepThree","getMaterialSchemeProyects","msp","schemaFilter","filter","schema","length","localStorage","setItem","toString","getConstructionStage","cse","getEDCP","edcp","CatalogsService","api_local_distances","api_exterternal_distances","api_uses","api_countries","api_type_project","api_useful_life","api_housing_scheme","api_bulk_units","api_energy_units","api_volume_units","api_states","api_cities","api_sections"],"mappings":"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AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACE;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AASF;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAEE;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAYF;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACE;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAUZ;;AAAA;;AACE;;AAAA;;AAAA;;AAAA;;AAEE;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAYM;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAEE;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAcF;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACE;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AASF;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAEE;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAYF;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACE;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AASZ;;AAAA;;AACE;;AAAA;;AAAA;;AAAA;;AACE;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAYM;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACE;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAUF;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAEE;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA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","file":"usage-stage-usage-stage-module-ngfactory-es5.js","sourcesContent":["import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { MaterialsService } from './../../../core/services/materials/materials.service';\n\n@Component({\n  selector: 'app-intermedial',\n  templateUrl: './intermedial.component.html',\n  styleUrls: ['./intermedial.component.scss'],\n})\nexport class IntermedialComponent implements OnInit {\n  constructor(\n    private router: Router,\n    private materialsService: MaterialsService,\n    public dialogRef: MatDialogRef<IntermedialComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: {}\n  ) {}\n\n  ngOnInit(): void {}\n\n  onNoClick() {\n    this.dialogRef.close(this.data);\n  }\n\n  continueStep(event: Event) {\n    event.preventDefault();\n    //\n    this.onNoClick();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { UsageStageRoutingModule } from './usage-stage-routing.module';\nimport { UsageStageComponent } from './components/usage-stage/usage-stage.component';\nimport { SharedModule } from '../shared/shared.module';\nimport { FormsModule } from '@angular/forms';\nimport { MaterialModule } from './../material/material.module';\nimport { IntermedialComponent } from './components/intermedial/intermedial.component';\nimport { PassStepComponent } from './components/pass-step/pass-step.component';\n\n@NgModule({\n  declarations: [UsageStageComponent, IntermedialComponent, PassStepComponent],\n  imports: [\n    CommonModule,\n    UsageStageRoutingModule,\n    SharedModule,\n    FormsModule,\n    MaterialModule,\n  ],\n  exports: [IntermedialComponent, PassStepComponent],\n  entryComponents: [IntermedialComponent, PassStepComponent],\n})\nexport class UsageStageModule {}\n","<div class=\"header-modal\">\n  <h1 mat-dialog-title class=\"title-standard-second-light\">\n    ¿Desea guardar los datos antes de continuar?\n  </h1>\n  <a (click)=\"onNoClick()\" class=\"close-modal\">\n    X\n  </a>\n</div>\n\n<div mat-dialog-actions class=\"center\">\n  <button mat-raised-button color=\"primary\" (click)=\"continueStep($event)\">Si</button>\n  <button mat-raised-button color=\"primary\" (click)=\"continueOnly($event)\">No</button>\n  <button mat-raised-button color=\"primary\" (click)=\"onNoClick()\">Cancelar</button>\n</div>","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-pass-step',\n  templateUrl: './pass-step.component.html',\n  styleUrls: ['./pass-step.component.scss'],\n})\nexport class PassStepComponent implements OnInit {\n  constructor(\n    public dialogRef: MatDialogRef<PassStepComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: { continue: boolean, save: boolean }\n  ) {}\n\n  ngOnInit(): void {}\n\n  onNoClick() {\n    this.data.continue = false;\n    this.data.save = false;\n    this.dialogRef.close(this.data);\n  }\n\n  continueStep(event: Event) {\n    event.preventDefault();\n    this.data.continue = true; \n    this.data.save = true;\n    this.dialogRef.close(this.data);\n  }\n\n  continueOnly(event: Event) {\n    event.preventDefault();\n    this.data.continue = true; \n    this.data.save = false;\n    this.dialogRef.close(this.data);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { UsageStageComponent } from './components/usage-stage/usage-stage.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UsageStageComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class UsageStageRoutingModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { tap } from 'rxjs/operators';\nimport { environment } from './../../../../environments/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MaterialsService {\n  constructor(private http: HttpClient) {}\n\n  getMaterialSchemeProyects() {\n    return this.http.get<any>(environment.api_scheme_project).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  getConstructionStage() {\n    return this.http.get<any>(environment.api_construction_stage).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  getACR() {\n    return this.http.get<any>(environment.api_annual_consumption_required).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  getEDCP() {\n    return this.http\n      .get<any>(environment.api_electricity_consumption_deconstructive_process)\n      .pipe(\n        tap((data) => {\n          return data;\n        })\n      );\n  }\n\n  getMaterials() {\n    return this.http.get<any>(environment.api_materials).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  searchMaterial(material) {\n    return this.http\n      .get<any>(environment.api_materials + '?search=' + material)\n      .pipe(\n        tap((data) => {\n          return data;\n        })\n      );\n  }\n\n  addMaterial(data: object) {\n    return this.http.post<any>(environment.api_materials, data).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  deleteMaterial(id: number) {\n    return this.http.delete(`${environment.api_materials}${id}/`).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  deleteMaterialSchemeData(id: number) {\n    return this.http\n      .delete(`${environment.api_material_scheme_data}${id}/`)\n      .pipe(\n        tap((data) => {\n          return data;\n        })\n      );\n  }\n\n  updateMaterial(id: string, changes) {\n    return this.http.put(`${environment.api_materials}${id}/`, changes).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  getfake() {\n    return this.http\n      .get<any>(\n        'http://127.0.0.1:8000/api-projects/material-scheme-data/'\n        //'https://evamed-rest-api.herokuapp.com/api-projects/material-scheme-data/',\n      )\n      .pipe(\n        tap((data) => {\n          return data;\n        })\n      );\n  }\n\n  deleteFake(id: number) {\n    return this.http\n      .delete(\n        `https://evamed-rest-api.herokuapp.com/api-projects/material-scheme-data/${id}/`\n      )\n      .pipe(\n        tap((data) => {\n          return data;\n        })\n      );\n  }\n\n  addFake(schemeData: object) {\n    return this.http\n      .post<any>(\n        'https://evamed-rest-api.herokuapp.com/api-projects/material-scheme-data/',\n        schemeData\n      )\n      .pipe(\n        tap((data) => {\n          return data;\n        })\n      );\n  }\n\n  getUnits() {\n    return this.http.get<any>(environment.api_units).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  addUnit(data: object) {\n    return this.http.post<any>(environment.api_units, data).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  updateUnit(id: string, changes) {\n    return this.http.put(`${environment.api_units}${id}/`, changes).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  deleteUnit(id: number) {\n    return this.http.delete(`${environment.api_units}${id}/`).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  getPotentialTypes() {\n    return this.http.get<any>(environment.api_potetnial_types).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  addPotentialTypes(data: object) {\n    return this.http.post<any>(environment.api_potetnial_types, data).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  updatePotentialTypes(id: string, changes) {\n    return this.http\n      .put(`${environment.api_potetnial_types}${id}/`, changes)\n      .pipe(\n        tap((data) => {\n          return data;\n        })\n      );\n  }\n\n  deletePotentialType(id: number) {\n    return this.http.delete(`${environment.api_potetnial_types}${id}/`).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  getStandards() {\n    return this.http.get<any>(environment.api_standards).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  getDbMaterials() {\n    return this.http.get<any>(environment.api_db_material).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  addDbMaterial(data: object) {\n    return this.http.post<any>(environment.api_db_material, data).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  updateDbMaterial(id: string, changes) {\n    return this.http.put(`${environment.api_db_material}${id}/`, changes).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  deleteDbMaterial(id: number) {\n    return this.http.delete(`${environment.api_db_material}${id}/`).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  getTransports() {\n    return this.http.get<any>(environment.api_transports).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  addTransport(data: object) {\n    return this.http.post<any>(environment.api_transports, data).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  updateTransport(id: string, changes) {\n    return this.http.put(`${environment.api_transports}${id}/`, changes).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  deleteTransport(id: number) {\n    return this.http.delete(`${environment.api_transports}${id}/`).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  getPotentialTransport() {\n    return this.http.get<any>(environment.api_potential_transport).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  addPotentialTransport(data: object) {\n    return this.http.post<any>(environment.api_potential_transport, data).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  updatePotentialTransport(id: string, changes) {\n    return this.http\n      .put(`${environment.api_potential_transport}${id}/`, changes)\n      .pipe(\n        tap((data) => {\n          return data;\n        })\n      );\n  }\n\n  deletePotentialTransport(id: number) {\n    return this.http\n      .delete(`${environment.api_potential_transport}${id}/`)\n      .pipe(\n        tap((data) => {\n          return data;\n        })\n      );\n  }\n\n  getMachinery() {\n    return this.http.get<any>(environment.api_source_information).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  addMachinery(data: object) {\n    return this.http.post<any>(environment.api_source_information, data).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  updateMachinery(id: string, changes) {\n    return this.http\n      .put(`${environment.api_source_information}${id}/`, changes)\n      .pipe(\n        tap((data) => {\n          return data;\n        })\n      );\n  }\n\n  deleteMachinery(id: number) {\n    return this.http.delete(`${environment.api_source_information}${id}/`).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  getMachineryPotential() {\n    return this.http.get<any>(environment.api_source_information_data).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  addMachineryPotential(data: object) {\n    return this.http\n      .post<any>(environment.api_source_information_data, data)\n      .pipe(\n        tap((data) => {\n          return data;\n        })\n      );\n  }\n\n  updateMachineryPotential(id: string, changes) {\n    return this.http\n      .put(`${environment.api_source_information_data}${id}/`, changes)\n      .pipe(\n        tap((data) => {\n          return data;\n        })\n      );\n  }\n\n  deleteMachineryPotential(id: number) {\n    return this.http\n      .delete(`${environment.api_source_information_data}${id}/`)\n      .pipe(\n        tap((data) => {\n          return data;\n        })\n      );\n  }\n\n  getTypeEnergy() {\n    return this.http.get<any>(environment.api_type_energy).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  addTypeEnergy(data: object) {\n    return this.http.post<any>(environment.api_type_energy, data).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  updateTypeEnergy(id: string, changes) {\n    return this.http.put(`${environment.api_type_energy}${id}/`, changes).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  deleteTypeEnergy(id: number) {\n    return this.http.delete(`${environment.api_type_energy}${id}/`).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  getTypeEnergyData() {\n    return this.http.get<any>(environment.api_type_energy_data).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  addTypeEnergyData(data: object) {\n    return this.http.post<any>(environment.api_type_energy_data, data).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  updateTypeEnergyData(id: string, changes) {\n    return this.http\n      .put(`${environment.api_type_energy_data}${id}/`, changes)\n      .pipe(\n        tap((data) => {\n          return data;\n        })\n      );\n  }\n\n  deleteTypeEnergyData(id: number) {\n    return this.http.delete(`${environment.api_type_energy_data}${id}/`).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { CatalogsService } from 'src/app/core/services/catalogs/catalogs.service';\nimport { MaterialsService } from 'src/app/core/services/materials/materials.service';\nimport { ElectricitConsumptionService } from './../../../core/services/electricity-consumption/electricit-consumption.service';\nimport { IntermedialComponent } from '../intermedial/intermedial.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport { PassStepComponent } from '../pass-step/pass-step.component';\n\n@Component({\n  selector: 'app-usage-stage',\n  templateUrl: './usage-stage.component.html',\n  styleUrls: ['./usage-stage.component.scss'],\n})\nexport class UsageStageComponent implements OnInit {\n  nameProject: string;\n  projectId: string;\n  cantidad: number;\n  unidad: number;\n\n  tipoMixElectrico: number;\n  cantidadMixElectrico: number;\n  porcentajeMixElectrico: number;\n  unidadMixElectrico: number;\n\n  tipoCombustible: number;\n  cantidadCombustible: number;\n  unidadCombustible: number;\n  porcentajeCombustible: number;\n\n  tipoPanelesFotovoltaicos: number;\n  cantidadPanelesFotovoltaicos: number;\n  unidadPanelesFotovoltaicos: number;\n  porcentajePanelesFotovoltaicos: number;\n\n  panelOpenFirst = false;\n  panelOpenSecond = false;\n  panelOpenThird = false;\n  selectedPreference: string;\n  preferences: string[] = ['cantidad', 'porcentaje'];\n  catalogoUnidadEnergia: any;\n  catalogoTipoEnergiaElectrica: any;\n  catalogoTipoEnergiaCombustible: any;\n  endSave: boolean = false;\n\n  constructor(\n    private materialsService: MaterialsService,\n    private catalogsService: CatalogsService,\n    private router: Router,\n    private electricitConsumptionService: ElectricitConsumptionService,\n    public dialog: MatDialog\n  ) {\n    this.catalogsService.getEnergyUnits().subscribe((data) => {\n      let catalogoUnidades = [];\n      data.map((unidad) => {\n        if (unidad.name_energy_unit === 'kWh') {\n          catalogoUnidades.push(unidad);\n        }\n      });\n      console.log(catalogoUnidades);\n      this.catalogoUnidadEnergia = catalogoUnidades;\n    });\n    this.catalogsService.getTypeEnergy().subscribe((data) => {\n      // this.catalogoTipoEnergia = data;\n      const tipoEnergiaElectrica = [];\n      const tipoEnergiaCombustible = [];\n      data.map((tipo) => {\n        /*if (\n          tipo.name_type_energy ===\n            'Energía eléctrica, Bajo voltaje (MX)-ECOINVENT3' ||\n          tipo.name_type_energy ===\n            'Energía eléctrica, Alto voltaje (MX)-ECOINVENT3' ||\n          tipo.name_type_energy ===\n            'Energía eléctrica, Medio voltaje (MX)-ECOINVENT3' ||\n          tipo.name_type_energy ===\n            'Energía eléctrica, Alto voltaje (MX)-MEXICANIUH' ||\n          tipo.name_type_energy ===\n            'Energía eléctrica, Medio voltaje (MX)-MEXICANIUH' ||\n          tipo.name_type_energy ===\n            'Energía eléctrica, Bajo voltaje (MX)-MEXICANIUH'\n        ) {\n        tipoEnergiaElectrica.push(tipo);\n        }*/\n\n        if (\n          tipo.name_type_energy ===\n          'Calefacción doméstica con gas natural (GLO)'\n        ) {\n          tipoEnergiaCombustible.push(tipo);\n        } else {\n          tipoEnergiaElectrica.push(tipo);\n        }\n      });\n\n      this.catalogoTipoEnergiaElectrica = tipoEnergiaElectrica;\n      this.catalogoTipoEnergiaCombustible = tipoEnergiaCombustible;\n    });\n  }\n\n  ngOnInit() {\n    const PDP = JSON.parse(sessionStorage.getItem('primaryDataProject'));\n    this.projectId = PDP.id;\n    this.nameProject = PDP.name_project;\n    this.unidadPanelesFotovoltaicos = 1;\n    this.unidad = 1;\n    this.unidadCombustible = 1;\n    this.unidadMixElectrico = 1;\n    console.log(this.catalogoUnidadEnergia);\n  }\n\n  changeCantidadME(cantidadMixElectrico) {\n    this.porcentajeMixElectrico = (cantidadMixElectrico * 100) / this.cantidad;\n  }\n\n  changePorcentajeME(porcentajeMixElectrico) {\n    this.cantidadMixElectrico = (porcentajeMixElectrico * this.cantidad) / 100;\n  }\n\n  changeCantidadC(cantidadCombustible) {\n    this.porcentajeCombustible = (cantidadCombustible * 100) / this.cantidad;\n  }\n\n  changePorcentajeC(porcentajeCombustible) {\n    this.cantidadCombustible = (porcentajeCombustible * this.cantidad) / 100;\n  }\n\n  changeCantidadPF(cantidadPanelesFotovoltaicos) {\n    this.porcentajePanelesFotovoltaicos =\n      (cantidadPanelesFotovoltaicos * 100) / this.cantidad;\n  }\n\n  changePorcentajePF(porcentajePanelesFotovoltaicos) {\n    this.cantidadPanelesFotovoltaicos =\n      (porcentajePanelesFotovoltaicos * this.cantidad) / 100;\n  }\n\n  async saveStepThree() {\n    await this.electricitConsumptionService\n      .addACR({\n        quantity: this.cantidad,\n        project_id: this.projectId,\n        unit_id: this.unidad,\n      })\n      .subscribe(async (data) => {\n        await this.electricitConsumptionService\n          .addECD({\n            quantity:\n              this.cantidadCombustible === undefined\n                ? 0\n                : this.cantidadCombustible,\n            percentage:\n              this.porcentajeCombustible === undefined\n                ? 0\n                : this.porcentajeCombustible,\n            annual_consumption_required_id: data.id,\n            unit_id:\n              this.unidadCombustible === undefined ? 1 : this.unidadCombustible,\n            type:\n              this.tipoCombustible === undefined ? 11 : this.tipoCombustible,\n            source: 'fuel',\n          })\n          .subscribe((data) => {\n            console.log('combustible!!!!!');\n            console.log(data);\n          });\n        await this.electricitConsumptionService\n          .addECD({\n            quantity:\n              this.cantidadMixElectrico === undefined\n                ? 0\n                : this.cantidadMixElectrico,\n            percentage:\n              this.porcentajeMixElectrico === undefined\n                ? 0\n                : this.porcentajeMixElectrico,\n            annual_consumption_required_id: data.id,\n            unit_id:\n              this.unidadMixElectrico === undefined\n                ? 1\n                : this.unidadMixElectrico,\n            type:\n              this.tipoMixElectrico === undefined ? 1 : this.tipoMixElectrico,\n            source: 'electric',\n          })\n          .subscribe((data) => {\n            console.log('Mix electrico');\n            console.log(data);\n          });\n        await this.electricitConsumptionService\n          .addECD({\n            quantity:\n              this.cantidadPanelesFotovoltaicos === undefined\n                ? 0\n                : this.cantidadPanelesFotovoltaicos,\n            percentage:\n              this.porcentajePanelesFotovoltaicos === undefined\n                ? 0\n                : this.porcentajePanelesFotovoltaicos,\n            annual_consumption_required_id: data.id,\n            unit_id:\n              this.unidadPanelesFotovoltaicos === undefined\n                ? 1\n                : this.unidadPanelesFotovoltaicos,\n            type: null,\n            source: 'panels',\n          })\n          .subscribe((data) => {\n            console.log('paneles fotovoltaicos');\n            console.log(data);\n          });\n        await this.router.navigateByUrl('end-life-stage');\n      });\n  }\n\n  goToMaterialStage() {\n    const dialogRef = this.dialog.open(PassStepComponent, {\n      width: '680px',\n      data: {},\n    });\n\n    dialogRef.afterClosed().subscribe((result) => {\n      if (result.continue) {\n        if (result.save) {\n          this.saveStepThree();\n        }\n        this.materialsService.getMaterialSchemeProyects().subscribe((msp) => {\n          const schemaFilter = msp.filter(\n            (schema) => schema.project_id === this.projectId\n          );\n\n          if (schemaFilter.length === 0) {\n            this.router.navigateByUrl('materials-stage');\n          } else {\n            localStorage.setItem(\n              'idProyectoConstrucción',\n              this.projectId.toString()\n            );\n            this.router.navigateByUrl('material-stage-update');\n          }\n        });\n      }\n    });\n  }\n\n  goToConstructionStage() {\n    const dialogRef = this.dialog.open(PassStepComponent, {\n      width: '680px',\n      data: {},\n    });\n\n    dialogRef.afterClosed().subscribe((result) => {\n      if (result.continue) {\n        if (result.save) {\n          this.saveStepThree();\n        }\n        this.materialsService.getConstructionStage().subscribe((cse) => {\n          const schemaFilter = cse.filter(\n            (schema) => schema.project_id === this.projectId\n          );\n\n          if (schemaFilter.length === 0) {\n            this.router.navigateByUrl('construction-stage');\n          } else {\n            localStorage.setItem(\n              'idProyectoConstrucción',\n              this.projectId.toString()\n            );\n            this.router.navigateByUrl('construction-stage-update');\n          }\n        });\n      }\n    });\n  }\n\n  goToUsageStage() {\n    this.router.navigateByUrl('usage-stage');\n  }\n\n  goToEndLife() {\n    const dialogRef = this.dialog.open(PassStepComponent, {\n      width: '680px',\n      data: {},\n    });\n\n    dialogRef.afterClosed().subscribe((result) => {\n      if (result.continue) {\n        if (result.save) {\n          this.saveStepThree();\n        }\n        this.materialsService.getEDCP().subscribe((edcp) => {\n          const schemaFilter = edcp.filter(\n            (schema) => schema.project_id === this.projectId\n          );\n\n          if (schemaFilter.length === 0) {\n            this.router.navigateByUrl('end-life-stage');\n          } else {\n            localStorage.setItem(\n              'idProyectoConstrucción',\n              this.projectId.toString()\n            );\n            this.router.navigateByUrl('update-end-life');\n          }\n        });\n      }\n    });\n  }\n\n  continue() {\n    this.saveStepThree();\n    this.materialsService.getEDCP().subscribe((edcp) => {\n      const schemaFilter = edcp.filter(\n        (schema) => schema.project_id === this.projectId\n      );\n\n      if (schemaFilter.length === 0) {\n        this.router.navigateByUrl('end-life-stage');\n      } else {\n        localStorage.setItem(\n          'idProyectoConstrucción',\n          this.projectId.toString()\n        );\n        this.router.navigateByUrl('update-end-life');\n      }\n    });\n  }\n}\n","<nav class=\"nav-redirect\">\r\n  <h2 class=\"proyecto-title\">{{nameProject}}</h2>\r\n  <a href=\"/\" class=\"a-redirect\">\r\n    < Regresar a proyectos </a>\r\n</nav>\r\n<!--Principal container-->\r\n<div class=\"principal-container container-total\">\r\n  <!--Navigation steps-->\r\n  <nav class=\"nav-steps\">\r\n    <div class=\"mdl-stepper-horizontal-alternative\">\r\n      <div class=\"mdl-stepper-step step-one-selected\">\r\n        <div class=\"mdl-stepper-circle\" (click)=\"goToMaterialStage()\"></div>\r\n        <div class=\"mdl-stepper-tag\"> Producción </div>\r\n        <div class=\"mdl-stepper-bar-left\"></div>\r\n        <div class=\"mdl-stepper-bar-right\"></div>\r\n      </div>\r\n      <div class=\"mdl-stepper-step step-two\">\r\n        <div class=\"mdl-stepper-circle\" (click)=\"goToConstructionStage()\"></div>\r\n        <div class=\"mdl-stepper-tag\"> Construcción </div>\r\n        <div class=\"mdl-stepper-bar-left\"></div>\r\n        <div class=\"mdl-stepper-bar-right\"></div>\r\n      </div>\r\n      <div class=\"mdl-stepper-step step-three\">\r\n        <div class=\"mdl-stepper-circle\"></div>\r\n        <div class=\"mdl-stepper-tag aux-yellow\"> Uso </div>\r\n        <div class=\"mdl-stepper-bar-left\"></div>\r\n        <div class=\"mdl-stepper-bar-right\"></div>\r\n      </div>\r\n      <div class=\"mdl-stepper-step step-four\">\r\n        <div class=\"mdl-stepper-circle\" (click)=\"goToEndLife()\"></div>\r\n        <div class=\"mdl-stepper-tag\"> Fin de vida </div>\r\n        <div class=\"mdl-stepper-bar-left\"></div>\r\n        <div class=\"mdl-stepper-bar-right\"></div>\r\n      </div>\r\n    </div>\r\n  </nav>\r\n  <!--Container actions of step 3-->\r\n  <section class=\"container-actions\">\r\n    <!--Section 1, consumo anual requerido-->\r\n    <section class=\"container-sheets\">\r\n      <div class=\"custom-global-data\">\r\n        <h3>1. Consumo anual requerido</h3>\r\n        <p>\r\n          Indica el consumo energético para la climatización del inmueble\r\n        </p>\r\n      </div>\r\n      <div class=\"custom-inputs-data\">\r\n        <div>\r\n          <label class=\"label-small-input\">\r\n            Cantidad\r\n          </label>\r\n          <mat-form-field>\r\n            <input class=\"input-general\" [(ngModel)]=\"cantidad\" name=\"cantidad\" matInput type=\"text\">\r\n          </mat-form-field>\r\n        </div>\r\n        <div>\r\n          <label class=\"label-small-input\">\r\n            Unidad\r\n          </label>\r\n          <mat-form-field appearance=\"outline\">\r\n            <mat-label>Seleccione una opción</mat-label>\r\n            <mat-select [(ngModel)]=\"unidad\" name=\"fuente\">\r\n              <mat-option *ngFor=\"let unidad of catalogoUnidadEnergia\" [value]=\"unidad.id\">\r\n                {{unidad.name_energy_unit}}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n    </section>\r\n    <!--Section 2, fuentes de consumo eléctrico-->\r\n    <section class=\"container-systems\">\r\n      <div>\r\n        <h3> 2. Fuentes de consumo eléctrico </h3>\r\n        <p>\r\n          Indica las fuentes del suministro de consumo para la simentación\r\n        </p>\r\n      </div>\r\n      <div class=\"container-options-3\">\r\n        <!--Mix electrico-->\r\n        <mat-accordion class=\"container-accordion\">\r\n          <mat-expansion-panel class=\"custom-expansion-panel\" (opened)=\"panelOpenFirst = true\"\r\n            (closed)=\"panelOpenFirst = false\">\r\n            <mat-expansion-panel-header class=\"custom-expansion-panel-header\">\r\n              <mat-panel-title class=\"custom-mat-panel-title\">\r\n                Red eléctrica nacional\r\n              </mat-panel-title>\r\n            </mat-expansion-panel-header>\r\n\r\n            <div class=\"Tab-container\">\r\n              <div class=\"Row top-0\">\r\n                <div class=\"Col principal\">\r\n                  <label class=\"label-small-input\">\r\n                    Tipo\r\n                  </label>\r\n                  <mat-form-field appearance=\"outline\" class=\"custom-formField\">\r\n                    <mat-label>Seleccione una opción</mat-label>\r\n                    <mat-select [(ngModel)]=\"tipoMixElectrico\" name=\"fuente\">\r\n                      <mat-option *ngFor=\"let tipo of catalogoTipoEnergiaElectrica\" [value]=\"tipo.id\">\r\n                        {{tipo.name_type_energy}}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"Row top-0\">\r\n                <div class=\"Col secundary\">\r\n                  <label class=\"label-small-input\">\r\n                    Cantidad\r\n                  </label>\r\n                  <mat-form-field>\r\n                    <input class=\"input-general\" [(ngModel)]=\"cantidadMixElectrico\"\r\n                      (ngModelChange)=\"changeCantidadME(cantidadMixElectrico)\" name=\"cantidad\" matInput type=\"text\">\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"Col secundary\">\r\n                  <label class=\"label-small-input\">\r\n                    Unidad\r\n                  </label>\r\n                  <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Seleccione una opción</mat-label>\r\n                    <mat-select [(ngModel)]=\"unidadMixElectrico\" name=\"fuente\">\r\n                      <mat-option *ngFor=\"let unidad of catalogoUnidadEnergia\" [value]=\"unidad.id\">\r\n                        {{unidad.name_energy_unit}}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"Col secundary\">\r\n                  <label class=\"label-small-input\">\r\n                    Porcentaje\r\n                  </label>\r\n                  <mat-form-field>\r\n                    <input class=\"input-general\" [(ngModel)]=\"porcentajeMixElectrico\"\r\n                      (ngModelChange)=\"changePorcentajeME(porcentajeMixElectrico)\" name=\"cantidad\" matInput type=\"text\">\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n          </mat-expansion-panel>\r\n        </mat-accordion>\r\n        <!--Combustible-->\r\n        <mat-accordion>\r\n          <mat-expansion-panel (opened)=\"panelOpenSecond = true\" (closed)=\"panelOpenSecond = false\"\r\n            class=\"custom-expansion-panel\">\r\n            <mat-expansion-panel-header class=\"custom-expansion-panel-header\">\r\n              <mat-panel-title class=\"custom-mat-panel-title\">\r\n                Combustible\r\n              </mat-panel-title>\r\n            </mat-expansion-panel-header>\r\n\r\n            <div class=\"Tab-container\">\r\n              <div class=\"Row top-0\">\r\n                <div class=\"Col principal\">\r\n                  <label class=\"label-small-input\">\r\n                    Tipo\r\n                  </label>\r\n                  <mat-form-field appearance=\"outline\" class=\"custom-formField\">\r\n                    <mat-label>Seleccione una opción</mat-label>\r\n                    <mat-select [(ngModel)]=\"tipoCombustible\" name=\"fuente\">\r\n                      <mat-option *ngFor=\"let tipo of catalogoTipoEnergiaCombustible\" [value]=\"tipo.id\">\r\n                        {{tipo.name_type_energy}}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"Row top-0\">\r\n                <div class=\"Col secundary\">\r\n                  <label class=\"label-small-input\">\r\n                    Cantidad\r\n                  </label>\r\n                  <mat-form-field>\r\n                    <input class=\"input-general\" [(ngModel)]=\"cantidadCombustible\"\r\n                      (ngModelChange)=\"changeCantidadC(cantidadCombustible)\" name=\"cantidad\" matInput type=\"text\">\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"Col secundary\">\r\n                  <label class=\"label-small-input\">\r\n                    Unidad\r\n                  </label>\r\n                  <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Seleccione una opción</mat-label>\r\n                    <mat-select [(ngModel)]=\"unidadCombustible\" name=\"fuente\">\r\n                      <mat-option *ngFor=\"let unidad of catalogoUnidadEnergia\" [value]=\"unidad.id\">\r\n                        {{unidad.name_energy_unit}}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"Col secundary\">\r\n                  <label class=\"label-small-input\">\r\n                    Porcentaje\r\n                  </label>\r\n                  <mat-form-field>\r\n                    <input class=\"input-general\" [(ngModel)]=\"porcentajeCombustible\"\r\n                      (ngModelChange)=\"changePorcentajeC(porcentajeCombustible)\" name=\"cantidad\" matInput type=\"text\">\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </mat-expansion-panel>\r\n        </mat-accordion>\r\n        <!--Páneles fotovoltaicos-->\r\n        <mat-accordion>\r\n          <mat-expansion-panel (opened)=\"panelOpenThird = true\" (closed)=\"panelOpenThird = false\">\r\n            <mat-expansion-panel-header class=\"custom-expansion-panel-header\">\r\n              <mat-panel-title class=\"custom-mat-panel-title\">\r\n                Paneles fotovoltaicos\r\n              </mat-panel-title>\r\n            </mat-expansion-panel-header>\r\n\r\n            <div class=\"Tab-container\">\r\n              <div class=\"Row top-0\">\r\n                <div class=\"Col secundary\">\r\n                  <label class=\"label-small-input\">\r\n                    Cantidad\r\n                  </label>\r\n                  <mat-form-field>\r\n                    <input class=\"input-general\" [(ngModel)]=\"cantidadPanelesFotovoltaicos\"\r\n                      (ngModelChange)=\"changeCantidadPF(cantidadPanelesFotovoltaicos)\" name=\"cantidad\" matInput\r\n                      type=\"text\">\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"Col secundary\">\r\n                  <label class=\"label-small-input\">\r\n                    Unidad\r\n                  </label>\r\n                  <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Seleccione una opción</mat-label>\r\n                    <mat-select [(ngModel)]=\"unidadPanelesFotovoltaicos\" name=\"fuente\">\r\n                      <mat-option *ngFor=\"let unidad of catalogoUnidadEnergia\" [value]=\"unidad.id\">\r\n                        {{unidad.name_energy_unit}}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"Col secundary\">\r\n                  <label class=\"label-small-input\">\r\n                    Porcentaje\r\n                  </label>\r\n                  <mat-form-field>\r\n                    <input class=\"input-general\" [(ngModel)]=\"porcentajePanelesFotovoltaicos\"\r\n                      (ngModelChange)=\"changePorcentajePF(porcentajePanelesFotovoltaicos)\" name=\"cantidad\" matInput\r\n                      type=\"text\">\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </mat-expansion-panel>\r\n        </mat-accordion>\r\n      </div>\r\n    </section>\r\n  </section>\r\n</div>\r\n\r\n<!--Section continue-->\r\n<div class=\"section-continue\">\r\n  <button mat-button class=\"yellow-button\" (click)=\"continue()\" [disabled]=\"endSave\">\r\n    Guardar y continuar\r\n  </button>\r\n</div>","<div class=\"header-modal\">\n  <h1 mat-dialog-title class=\"title-standard-second-light\">\n    Los datos han sido guardados\n  </h1>\n  <a (click)=\"onNoClick()\" class=\"close-modal\">\n    X\n  </a>\n</div>\n\n<div mat-dialog-content>\n  <p>Seleccione la etapa a la que desea subir datos</p>\n</div>\n\n<div mat-dialog-actions class=\"center\">\n  <button mat-raised-button color=\"primary\" (click)=\"continueStep($event)\" >Aceptar</button>\n</div>","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { tap } from 'rxjs/operators';\r\nimport { environment } from './../../../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CatalogsService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getLocalDistances() {\r\n    return this.http.get<any>(environment.api_local_distances).pipe(\r\n      tap((data) => {\r\n        return data;\r\n      })\r\n    );\r\n  }\r\n\r\n  getExternalDistances() {\r\n    return this.http.get<any>(environment.api_exterternal_distances).pipe(\r\n      tap((data) => {\r\n        return data;\r\n      })\r\n    );\r\n  }\r\n\r\n  usesCatalog() {\r\n    return this.http.get<any>(environment.api_uses).pipe(\r\n      tap((data) => {\r\n        return data;\r\n      })\r\n    );\r\n  }\r\n\r\n  countriesCatalog() {\r\n    return this.http.get<any>(environment.api_countries).pipe(\r\n      tap((data) => {\r\n        return data;\r\n      })\r\n    );\r\n  }\r\n\r\n  typeProjectCatalog() {\r\n    return this.http.get<any>(environment.api_type_project).pipe(\r\n      tap((data) => {\r\n        return data;\r\n      })\r\n    );\r\n  }\r\n\r\n  usefulLifeCatalog() {\r\n    return this.http.get<any>(environment.api_useful_life).pipe(\r\n      tap((data) => {\r\n        return data;\r\n      })\r\n    );\r\n  }\r\n\r\n  housingSchemeCatalog() {\r\n    return this.http.get<any>(environment.api_housing_scheme).pipe(\r\n      tap((data) => {\r\n        return data;\r\n      })\r\n    );\r\n  }\r\n\r\n  getSourceInformation() {\r\n    return this.http.get<any>(environment.api_source_information).pipe(\r\n      tap((data) => {\r\n        return data;\r\n      })\r\n    );\r\n  }\r\n\r\n  getBulkUnits() {\r\n    return this.http.get<any>(environment.api_bulk_units).pipe(\r\n      tap((data) => {\r\n        return data;\r\n      })\r\n    );\r\n  }\r\n\r\n  getEnergyUnits() {\r\n    return this.http.get<any>(environment.api_energy_units).pipe(\r\n      tap((data) => {\r\n        return data;\r\n      })\r\n    );\r\n  }\r\n\r\n  getVolumeUnits() {\r\n    return this.http.get<any>(environment.api_volume_units).pipe(\r\n      tap((data) => {\r\n        return data;\r\n      })\r\n    );\r\n  }\r\n\r\n  getTypeEnergy() {\r\n    return this.http.get<any>(environment.api_type_energy).pipe(\r\n      tap((data) => {\r\n        return data;\r\n      })\r\n    );\r\n  }\r\n\r\n  getStates() {\r\n    return this.http.get<any>(environment.api_states).pipe(\r\n      tap((data) => {\r\n        return data;\r\n      })\r\n    );\r\n  }\r\n\r\n  getCities() {\r\n    return this.http.get<any>(environment.api_cities).pipe(\r\n      tap((data) => {\r\n        return data;\r\n      })\r\n    );\r\n  }\r\n\r\n  getTransports() {\r\n    return this.http.get<any>(environment.api_transports).pipe(\r\n      tap((data) => {\r\n        return data;\r\n      })\r\n    );\r\n  }\r\n\r\n  getPotentialTypes() {\r\n    return this.http.get<any>(environment.api_potetnial_types).pipe(\r\n      tap((data) => {\r\n        return data;\r\n      })\r\n    );\r\n  }\r\n\r\n  getSections() {\r\n    return this.http.get<any>(environment.api_sections).pipe(\r\n      tap((data) => {\r\n        return data;\r\n      })\r\n    );\r\n  }\r\n}\r\n"]}