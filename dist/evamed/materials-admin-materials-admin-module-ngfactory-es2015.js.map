{"version":3,"sources":["./src/app/materials-admin/components/add-data-scheme/add-data-scheme.component.ts","./src/app/materials-admin/components/delete-material/delete-material.component.html","./src/app/materials-admin/components/delete-material/delete-material.component.ts","./src/app/materials-admin/components/update-material/update-material.component.html","./src/app/materials-admin/components/materials-admin/materials-admin.component.ts","./src/app/materials-admin/components/update-material/update-material.component.ts","./src/app/materials-admin/components/materials-admin/materials-admin.component.html","./src/app/materials-admin/components/delete-data-scheme/delete-data-scheme.component.ts","./node_modules/@angular/material/card/index.d.ts.MatCard.html","./node_modules/@angular/material/card/index.d.ts.MatCardHeader.html","./node_modules/@angular/material/card/index.d.ts.MatCardTitleGroup.html","./src/app/materials-admin/components/update-data-scheme/update-data-scheme.component.ts","./src/app/core/services/materials/materials.service.ts","./src/app/materials-admin/materials-admin.module.ts","./src/app/core/services/analisis/analisis.service.ts","./src/app/materials-admin/components/add-material/add-material.component.html","./src/app/materials-admin/components/add-data-scheme/add-data-scheme.component.html","./src/app/materials-admin/components/delete-data-scheme/delete-data-scheme.component.html","./src/app/materials-admin/components/add-material/add-material.component.ts","./src/app/materials-admin/materials-admin-routing.module.ts","./src/app/materials-admin/components/update-data-scheme/update-data-scheme.component.html"],"names":[],"mappings":"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","file":"materials-admin-materials-admin-module-ngfactory-es2015.js","sourcesContent":["import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MaterialsService } from './../../../core/services/materials/materials.service';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { AnalisisService } from '../../../core/services/analisis/analisis.service';\n\nexport interface DialogData {\n  id: number;\n  material_id: number;\n  potential_type_id: number;\n  standard_id: number;\n  unit_id: number;\n  value: string;\n}\n\n@Component({\n  selector: 'app-add-data-scheme',\n  templateUrl: './add-data-scheme.component.html',\n  styleUrls: ['./add-data-scheme.component.scss'],\n})\nexport class AddDataSchemeComponent implements OnInit {\n  form: FormGroup;\n\n  id: string;\n\n  material_id: number;\n\n  units: any;\n\n  ListSchemeData: any;\n\n  ListPotential: any;\n\n  ListStandards: any;\n\n  potential: any;\n\n  standard_id: number;\n\n  unit_id: number;\n\n  unit_name: string = 'Seleccione potencial de impacto ambiental';\n\n  constructor(\n    private materialsService: MaterialsService,\n    private analisisService: AnalisisService,\n    private formBuilder: FormBuilder,\n    public dialogRef: MatDialogRef<AddDataSchemeComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData\n  ) {\n    console.log('entra a este proceso!!!!!');\n    this.material_id = data.material_id;\n    this.buildForm();\n    this.materialsService.getUnits().subscribe((data) => {\n      this.units = data;\n    });\n    this.materialsService.getStandards().subscribe((data) => {\n      this.ListStandards = data;\n    });\n    this.materialsService.getPotentialTypes().subscribe((data) => {\n      this.ListPotential = data;\n    });\n  }\n\n  ngOnInit(): void {}\n\n  onNoClick() {\n    console.log('entra al onNoClick');\n    this.dialogRef.close(this.data);\n  }\n\n  private buildForm() {\n    console.log('entra al build form');\n    this.form = this.formBuilder.group({\n      potential_type_id: [null, Validators.required],\n      value: [null, Validators.required],\n    });\n  }\n\n  addScheme(event) {\n    console.log('addScheme');\n    event.preventDefault();\n    if (this.form.valid) {\n      const material = this.form.value;\n\n      this.analisisService\n        .addMaterialSchemeData({\n          ...material,\n          material_id: this.material_id,\n          standard_id: this.standard_id,\n          unit_id: this.unit_id,\n        })\n        .subscribe((newScheme) => {\n          this.onNoClick();\n        });\n    }\n  }\n\n  potentialSelected(potentialId) {\n    console.log('entra al potentialSelected');\n    const potentialData = this.ListPotential.filter(\n      (data) => data.id === potentialId\n    );\n\n    const unitData = this.units.filter(\n      (data) => data.name_unit == potentialData[0].unit_potential_type\n    );\n\n    try {\n      this.unit_id = unitData[0].id;\n      this.unit_name = unitData[0].name_unit;\n    } catch (e) {\n      this.unit_id = null;\n      this.unit_name = 'No se encontró coincidencia con unidades';\n    }\n  }\n}\n","<div class=\"header-modal\">\n  <h1 mat-dialog-title class=\"title-standard-second-light\">\n    Eliminar Material\n  </h1>\n  <a (click)=\"onNoClick()\" class=\"close-modal\">\n    X\n  </a>\n</div>\n\n<div mat-dialog-content>\n  <h1>¿Desea eliminar el material {{data.name_material}}?</h1>\n</div>\n\n<div mat-dialog-actions class=\"center\">\n  <button mat-raised-button color=\"primary\" (click)=\"deleteMaterial($event, data.id)\">Eliminar</button>\n</div>","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MaterialsService } from './../../../core/services/materials/materials.service';\n\nexport interface DialogData {\n  id: number;\n  name_material: string;\n}\n\n@Component({\n  selector: 'app-delete-transport',\n  templateUrl: './delete-material.component.html',\n  styleUrls: ['./delete-material.component.scss'],\n})\nexport class DeleteMaterialComponent implements OnInit {\n  constructor(\n    private materialsService: MaterialsService,\n    public dialogRef: MatDialogRef<DeleteMaterialComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData\n  ) {}\n\n  ngOnInit(): void {\n    console.log('On Init');\n    console.log(this.data);\n  }\n\n  onNoClick() {\n    this.dialogRef.close(this.data);\n  }\n\n  deleteMaterial(event: Event, id: number) {\n    event.preventDefault();\n    this.materialsService.deleteMaterial(id).subscribe(() => {\n      this.onNoClick();\n    });\n  }\n}\n","<form [formGroup]=\"form\" (ngSubmit)=\"saveMaterial($event)\">\n  <mat-card  class=\"custom-card\">\n    <mat-card-header>\n      <mat-card-title>Actualizar datos del material</mat-card-title>\n    </mat-card-header>\n    <mat-card-content>\n      <div class=\"Row\">\n        <div class=\"Col\">\n          <mat-form-field  appearance=\"outline\" >\n            <input matInput placeholder=\"Nombre\" formControlName=\"name_material\">\n            <mat-error *ngIf=\"form.controls['name_material'].hasError('required')\">\n              El nombre es <strong>requerido</strong>\n            </mat-error>\n          </mat-form-field>\n        </div>\n      </div>\n    </mat-card-content>\n    <mat-card-content>\n      <div class=\"Row\">\n        <div class=\"Col\">\n          <mat-form-field appearance=\"outline\">\n            <mat-select placeholder=\"Base de datos\" formControlName=\"database_from\">\n              <mat-option *ngFor=\"let data of ListDatabases\" [value]=\"data.name\">\n                {{ data.name }}\n              </mat-option>\n            </mat-select>\n            <mat-error *ngIf=\"form.controls['database_from'].hasError('required')\">\n              Base de datos es <strong>requiredo</strong>\n            </mat-error>\n          </mat-form-field>\n        </div>\n      </div>\n    </mat-card-content>\n    <mat-card-content>\n      <div class=\"Row\">\n        <div class=\"Col\">\n          <mat-form-field  appearance=\"outline\" >\n            <textarea matInput placeholder=\"Descripción\" formControlName=\"description\"></textarea>\n          </mat-form-field>\n        </div>\n      </div>\n    </mat-card-content>\n    <mat-card-content>\n      <div class=\"Row\">\n        <div class=\"Col\">\n          <mat-form-field appearance=\"outline\">\n            <mat-select placeholder=\"Unidad\" formControlName=\"unit_id\">\n              <mat-option *ngFor=\"let data of units\" [value]=\"data.id\">\n                {{ data.name_unit }}\n              </mat-option>\n            </mat-select>\n            <mat-error *ngIf=\"form.controls['unit_id'].hasError('required')\">\n              Unidad es un campo <strong>requerido</strong>\n            </mat-error>\n          </mat-form-field>\n        </div>\n      </div>\n    </mat-card-content> \n    <mat-card-actions>\n      <button mat-raised-button color=\"primary\" type=\"submit\">Editar Material</button>\n      <button\n      mat-raised-button\n        color=\"primary\"\n        (click)=\"goToAddScheme($event)\"\n      >\n        Agregar impactos ambientales\n      </button>\n      <button\n        mat-button\n        class=\"yellow-button\"\n        (click)=\"goToMaterialList()\"\n      >\n        Lista de materiales\n      </button>\n    </mat-card-actions>\n    <mat-card-content>\n\n      <table mat-table [dataSource]=\"ListSchemeData\" class=\"mat-elevation-z8\">\n\n        <ng-container matColumnDef=\"id\">\n          <th mat-header-cell *matHeaderCellDef> Id. </th>\n          <td mat-cell *matCellDef=\"let element\"> {{element.id}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"potential_type_id\">\n          <th mat-header-cell *matHeaderCellDef> Potencial </th>\n          <td mat-cell *matCellDef=\"let element\"> {{getPotential(element.potential_type_id)}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"standard_id\">\n          <th mat-header-cell *matHeaderCellDef> Estandar </th>\n          <td mat-cell *matCellDef=\"let element\"> {{getStandard(element.standard_id)}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"unit_id\">\n          <th mat-header-cell *matHeaderCellDef> Unidad </th>\n          <td mat-cell *matCellDef=\"let element\"> {{getUnit(element.unit_id)}} </td>\n        </ng-container>\n        \n        <ng-container matColumnDef=\"value\">\n          <th mat-header-cell *matHeaderCellDef> Valor </th>\n          <td mat-cell *matCellDef=\"let element\"> {{element.value}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"actions\">\n          <th mat-header-cell *matHeaderCellDef> Acciones </th>\n          <td mat-cell *matCellDef=\"let element\"> \n            <a \n              mat-raised-button \n              (click)=\"openModalSchema($event, element)\"\n            >Editar\n          </a>\n            <button mat-raised-button color=\"warn\" (click)=\"deleteSchema($event, element.id)\">Eliminar</button>\n          </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n      </table>\n\n    </mat-card-content>\n  </mat-card>\n</form>","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { MaterialsService } from './../../../core/services/materials/materials.service';\nimport { DeleteMaterialComponent } from '../delete-material/delete-material.component';\n\nexport interface Material {\n  id: number;\n  database_from: string;\n  description: string;\n  name_material: string;\n  unit_id: number;\n}\n\n@Component({\n  selector: 'app-materials-admin',\n  templateUrl: './materials-admin.component.html',\n  styleUrls: ['./materials-admin.component.scss'],\n})\nexport class MaterialsAdminComponent implements OnInit {\n  materialList: Material[];\n  displayedColumns: string[] = [\n    'id',\n    'database_from',\n    'name_material',\n    'description',\n    'unit_id',\n    'actions',\n  ];\n\n  filterSelected: any;\n\n  filters: any = [\n    {\n      id: 'a',\n      name: 'orden alfabético',\n    },\n    {\n      id: 'b',\n      name: 'más antiguo',\n    },\n    {\n      id: 'c',\n      name: 'más reciente',\n    },\n  ];\n\n  alpha: any;\n\n  orderMayorId: any;\n\n  orderMinorId: any;\n\n  inmutableList: any;\n\n  constructor(\n    private router: Router,\n    public dialog: MatDialog,\n    private materialsService: MaterialsService\n  ) {}\n\n  ngOnInit(): void {\n    this.materialsService.getMaterials().subscribe((data) => {\n      this.materialList = data;\n      this.inmutableList = data;\n    });\n    this.materialsService.getDbMaterials().subscribe((data) => {\n      data.map((db) => {\n        this.filters.push(db);\n      });\n    });\n  }\n\n  goToAddMaterial() {\n    this.router.navigateByUrl('admin-materials/add');\n  }\n\n  goToAdmin() {\n    this.router.navigateByUrl('admin');\n  }\n\n  deleteMaterial(event: Event, id, name_material) {\n    event.preventDefault();\n\n    const dialogRef = this.dialog.open(DeleteMaterialComponent, {\n      width: '680px',\n      data: { id, name_material },\n    });\n\n    dialogRef.afterClosed().subscribe((result) => {\n      this.ngOnInit();\n    });\n  }\n\n  SortArray(x, y) {\n    return x.name_material.localeCompare(y.name_material, 'fr', {\n      ignorePunctuation: true,\n    });\n  }\n\n  filterAlpha(materialList) {\n    return materialList.slice().sort(this.SortArray);\n  }\n\n  filterOrderMinorId(materialList) {\n    return materialList.slice().sort((a, b) => (a.id > b.id ? 1 : -1));\n  }\n\n  filterOrderMayorId(materialList) {\n    return materialList.slice().sort((a, b) => (a.id < b.id ? 1 : -1));\n  }\n\n  filterByDataBase(filter) {\n    return this.inmutableList.filter((res) => res.database_from === filter);\n  }\n\n  selectFilter(filter) {\n    let filterSelected = [];\n\n    if (filter === 'orden alfabético') {\n      filterSelected = this.filterAlpha(this.inmutableList);\n    } else if (filter === 'más antiguo') {\n      filterSelected = this.filterOrderMinorId(this.inmutableList);\n    } else if (filter === 'más reciente') {\n      filterSelected = this.filterOrderMayorId(this.inmutableList);\n    } else {\n      filterSelected = this.filterByDataBase(filter);\n    }\n\n    this.materialList = filterSelected;\n\n    console.log(filterSelected);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { MaterialsService } from './../../../core/services/materials/materials.service';\r\nimport { AnalisisService } from './../../../core/services/analisis/analisis.service';\r\nimport { UpdateDataSchemeComponent } from '../update-data-scheme/update-data-scheme.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { AddDataSchemeComponent } from '../add-data-scheme/add-data-scheme.component';\r\nimport { DeleteDataSchemeComponent } from '../delete-data-scheme/delete-data-scheme.component';\r\n\r\n@Component({\r\n  selector: 'app-update-material',\r\n  templateUrl: './update-material.component.html',\r\n  styleUrls: ['./update-material.component.scss'],\r\n})\r\nexport class UpdateMaterialComponent implements OnInit {\r\n  form: FormGroup;\r\n\r\n  id: string;\r\n\r\n  units: any;\r\n\r\n  ListSchemeData: any;\r\n\r\n  ListPotential: any;\r\n\r\n  ListStandards: any;\r\n\r\n  potential: any;\r\n\r\n  ListDatabases: any;\r\n\r\n  displayedColumns: string[] = [\r\n    'id',\r\n    'potential_type_id',\r\n    'standard_id',\r\n    'unit_id',\r\n    'value',\r\n    'actions',\r\n  ];\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private formBuilder: FormBuilder,\r\n    private activatedRoute: ActivatedRoute,\r\n    private materialsService: MaterialsService,\r\n    private analisisService: AnalisisService,\r\n    public dialog: MatDialog\r\n  ) {\r\n    this.buildForm();\r\n    this.materialsService.getUnits().subscribe((data) => {\r\n      this.units = data;\r\n    });\r\n    this.materialsService.getStandards().subscribe((data) => {\r\n      this.ListStandards = data;\r\n    });\r\n    this.materialsService.getPotentialTypes().subscribe((data) => {\r\n      this.ListPotential = data;\r\n    });\r\n\r\n    this.materialsService.getDbMaterials().subscribe((data) => {\r\n      this.ListDatabases = data;\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.activatedRoute.params.subscribe((params: Params) => {\r\n      this.materialsService.getMaterials().subscribe((data) => {\r\n        const materialFiltered = data.filter(\r\n          (material) => material.id === parseInt(params.id)\r\n        );\r\n\r\n        // Filtrado de Esquema de material\r\n        materialFiltered.map((material) => {\r\n          this.id = material.id;\r\n          this.form.patchValue(material);\r\n          this.ListSchemeData = [];\r\n          this.analisisService.getMaterialSchemeData().subscribe((msds) => {\r\n            const ListSchemeData = msds.filter(\r\n              (msd) => msd.material_id === material.id\r\n            );\r\n\r\n            this.ListSchemeData = ListSchemeData.sort((a, b) => {\r\n              if (a.potential_type_id === b.potential_type_id) {\r\n                return a.standard_id - b.standard_id;\r\n              }\r\n\r\n              return a.potential_type_id - b.potential_type_id;\r\n            });\r\n          });\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  private buildForm() {\r\n    this.form = this.formBuilder.group({\r\n      name_material: [null, Validators.required],\r\n      database_from: [null, Validators.required],\r\n      description: [null],\r\n      unit_id: [null, Validators.required],\r\n    });\r\n  }\r\n\r\n  saveMaterial(event: Event) {\r\n    event.preventDefault();\r\n    if (this.form.valid) {\r\n      const material = this.form.value;\r\n      this.materialsService\r\n        .updateMaterial(this.id, material)\r\n        .subscribe((newProduct) => {\r\n          this.ngOnInit();\r\n          this.router.navigate(['./admin-materials']);\r\n        });\r\n    }\r\n  }\r\n\r\n  goToMaterialList() {\r\n    this.router.navigateByUrl('admin-materials');\r\n  }\r\n\r\n  deleteSchema(event: Event, id: number) {\r\n    event.preventDefault();\r\n    const potentialSelected = this.ListSchemeData.filter(\r\n      (data) => data.id === id\r\n    );\r\n    const dialogRef = this.dialog.open(DeleteDataSchemeComponent, {\r\n      width: '680px',\r\n      data: potentialSelected,\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      this.ngOnInit();\r\n    });\r\n  }\r\n\r\n  getPotential(id: number) {\r\n    const potencial = this.ListPotential.filter(\r\n      (potencial) => potencial.id === id\r\n    );\r\n\r\n    return potencial[0].name_complete_potential_type;\r\n  }\r\n\r\n  getStandard(id: number) {\r\n    const standard = this.ListStandards.filter(\r\n      (standard) => standard.id === id\r\n    );\r\n\r\n    return standard[0].name_standard;\r\n  }\r\n\r\n  getUnit(id: number) {\r\n    const unit = this.units.filter((unit) => unit.id === id);\r\n\r\n    return unit[0].name_unit;\r\n  }\r\n\r\n  openModalSchema(event: Event, elem) {\r\n    event.preventDefault();\r\n    const dialogRef = this.dialog.open(UpdateDataSchemeComponent, {\r\n      width: '680px',\r\n      data: { ...elem },\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      this.ngOnInit();\r\n    });\r\n  }\r\n\r\n  goToAddScheme(event: Event) {\r\n    event.preventDefault();\r\n    console.log('entra a goToAddScheme');\r\n    const dialogRef = this.dialog.open(AddDataSchemeComponent, {\r\n      width: '680px',\r\n      data: { material_id: this.id },\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      console.log('entra a este proceso');\r\n      this.ngOnInit();\r\n    });\r\n  }\r\n}\r\n","<h1>Administrador de Materiales</h1>\n\n<div class=\"custom-container\">\n  <button mat-button class=\"yellow-button\" (click)=\"goToAddMaterial()\">\n    Agregar material\n  </button>\n  <button  mat-raised-button color=\"primary\" (click)=\"goToAdmin()\">\n    Regresar a Administrador\n  </button>\n  <mat-form-field appearance=\"outline\" class=\"select-general\">\n    <mat-label>Seleccione una opción</mat-label>\n    <mat-select [(ngModel)]=\"filterSelected\" (selectionChange)=\"selectFilter(filterSelected)\">\n      <mat-option *ngFor=\"let filter of filters\" [value]=\"filter.name\">\n        {{filter.name}}\n      </mat-option>\n    </mat-select>\n  </mat-form-field>\n\n</div>\n\n<table mat-table [dataSource]=\"materialList\" class=\"mat-elevation-z8\">\n\n  <ng-container matColumnDef=\"id\">\n    <th mat-header-cell *matHeaderCellDef> Id. </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.id}} </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"name_material\">\n    <th mat-header-cell *matHeaderCellDef> Nombre </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.name_material}} </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"database_from\">\n    <th mat-header-cell *matHeaderCellDef> Base de datos </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.database_from}} </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"description\">\n    <th mat-header-cell *matHeaderCellDef> Descripción </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.description}} </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"unit_id\">\n    <th mat-header-cell *matHeaderCellDef> Unidad </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.unit_id}} </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"actions\">\n    <th mat-header-cell *matHeaderCellDef> Acciones </th>\n    <td mat-cell *matCellDef=\"let element\"> \n      <a \n        mat-raised-button \n        [routerLink]=\"['update', element.id]\"\n      >Editar\n    </a>\n      <button mat-raised-button color=\"warn\" (click)=\"deleteMaterial($event, element.id, element.name_material)\">Eliminar</button>\n    </td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n</table>\n\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MaterialsService } from './../../../core/services/materials/materials.service';\n\nexport interface DialogData {\n  id: number;\n}\n@Component({\n  selector: 'app-delete-data-scheme',\n  templateUrl: './delete-data-scheme.component.html',\n  styleUrls: ['./delete-data-scheme.component.scss'],\n})\nexport class DeleteDataSchemeComponent implements OnInit {\n  constructor(\n    private materialsService: MaterialsService,\n    public dialogRef: MatDialogRef<DeleteDataSchemeComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData\n  ) {}\n\n  ngOnInit(): void {}\n\n  onNoClick() {\n    this.dialogRef.close(this.data);\n  }\n\n  deletePotential(event: Event, id: number) {\n    event.preventDefault();\n    this.materialsService.deleteMaterialSchemeData(id).subscribe((data) => {\n      this.onNoClick();\n    });\n  }\n}\n","<ng-content></ng-content>\n<ng-content select=\"mat-card-footer\"></ng-content>\n","<ng-content select=\"[mat-card-avatar], [matCardAvatar]\"></ng-content>\n<div class=\"mat-card-header-text\">\n  <ng-content\n      select=\"mat-card-title, mat-card-subtitle,\n      [mat-card-title], [mat-card-subtitle],\n      [matCardTitle], [matCardSubtitle]\"></ng-content>\n</div>\n<ng-content></ng-content>\n","<div>\n  <ng-content\n      select=\"mat-card-title, mat-card-subtitle,\n      [mat-card-title], [mat-card-subtitle],\n      [matCardTitle], [matCardSubtitle]\"></ng-content>\n</div>\n<ng-content select=\"img\"></ng-content>\n<ng-content></ng-content>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MaterialsService } from './../../../core/services/materials/materials.service';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { AnalisisService } from '../../../core/services/analisis/analisis.service';\n\nexport interface DialogData {\n  id: number;\n  material_id: number;\n  potential_type_id: number;\n  standard_id: number;\n  unit_id: number;\n  value: string;\n}\n\n@Component({\n  selector: 'app-update-data-scheme',\n  templateUrl: './update-data-scheme.component.html',\n  styleUrls: ['./update-data-scheme.component.scss'],\n})\nexport class UpdateDataSchemeComponent implements OnInit {\n  form: FormGroup;\n\n  id: string;\n\n  units: any;\n\n  ListSchemeData: any;\n\n  ListPotential: any;\n\n  ListStandards: any;\n\n  potential: any;\n\n  standard_id: number;\n\n  unit_id: number;\n\n  unit_name: string = 'Seleccione potencial de impacto ambiental';\n\n  loading: boolean = true;\n\n  constructor(\n    private materialsService: MaterialsService,\n    private analisisService: AnalisisService,\n    private formBuilder: FormBuilder,\n    public dialogRef: MatDialogRef<UpdateDataSchemeComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData\n  ) {\n    this.buildForm();\n    this.materialsService.getUnits().subscribe((data) => {\n      this.units = data;\n    });\n    this.materialsService.getStandards().subscribe((data) => {\n      this.ListStandards = data;\n    });\n    this.materialsService.getPotentialTypes().subscribe((data) => {\n      this.ListPotential = data;\n    });\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close(this.data);\n  }\n\n  ngOnInit(): void {\n    this.analisisService.getMaterialSchemeData().subscribe((data) => {\n      const schema = data.filter(\n        (schemaSelected) => schemaSelected.id === this.data.id\n      );\n      this.id = schema[0].id;\n      this.standard_id = schema[0].standard_id;\n      this.form.patchValue(schema[0]);\n      this.potentialSelected(schema[0].potential_type_id);\n\n      if (this.id) {\n        this.loading = false;\n      }\n    });\n  }\n\n  private buildForm() {\n    this.form = this.formBuilder.group({\n      potential_type_id: [null, Validators.required],\n      value: [null, Validators.required],\n    });\n  }\n\n  updateScheme(event) {\n    event.preventDefault();\n    if (this.form.valid) {\n      const scheme = this.form.value;\n      this.analisisService\n        .updateMaterialSchemeData(this.id, {\n          ...scheme,\n          standard_id: this.standard_id,\n          unit_id: this.unit_id,\n        })\n        .subscribe((newScheme) => {\n          console.log(newScheme);\n          this.onNoClick();\n        });\n    }\n  }\n\n  potentialSelected(potentialId) {\n    const potentialData = this.ListPotential.filter(\n      (data) => data.id === potentialId\n    );\n\n    const unitData = this.units.filter(\n      (data) => data.name_unit == potentialData[0].unit_potential_type\n    );\n\n    try {\n      this.unit_id = unitData[0].id;\n      this.unit_name = unitData[0].name_unit;\n    } catch (e) {\n      this.unit_id = null;\n      this.unit_name = 'No se encontró coincidencia con unidades';\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { tap } from 'rxjs/operators';\nimport { environment } from './../../../../environments/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MaterialsService {\n  constructor(private http: HttpClient) {}\n\n  getMaterialSchemeProyects() {\n    return this.http.get<any>(environment.api_scheme_project).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  getConstructionStage() {\n    return this.http.get<any>(environment.api_construction_stage).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  getACR() {\n    return this.http.get<any>(environment.api_annual_consumption_required).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  getEDCP() {\n    return this.http\n      .get<any>(environment.api_electricity_consumption_deconstructive_process)\n      .pipe(\n        tap((data) => {\n          return data;\n        })\n      );\n  }\n\n  getMaterials() {\n    return this.http.get<any>(environment.api_materials).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  searchMaterial(material) {\n    return this.http\n      .get<any>(environment.api_materials + '?search=' + material)\n      .pipe(\n        tap((data) => {\n          return data;\n        })\n      );\n  }\n\n  addMaterial(data: object) {\n    return this.http.post<any>(environment.api_materials, data).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  deleteMaterial(id: number) {\n    return this.http.delete(`${environment.api_materials}${id}/`).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  deleteMaterialSchemeData(id: number) {\n    return this.http\n      .delete(`${environment.api_material_scheme_data}${id}/`)\n      .pipe(\n        tap((data) => {\n          return data;\n        })\n      );\n  }\n\n  updateMaterial(id: string, changes) {\n    return this.http.put(`${environment.api_materials}${id}/`, changes).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  getfake() {\n    return this.http\n      .get<any>(\n        'http://127.0.0.1:8000/api-projects/material-scheme-data/'\n        //'https://evamed-rest-api.herokuapp.com/api-projects/material-scheme-data/',\n      )\n      .pipe(\n        tap((data) => {\n          return data;\n        })\n      );\n  }\n\n  deleteFake(id: number) {\n    return this.http\n      .delete(\n        `https://evamed-rest-api.herokuapp.com/api-projects/material-scheme-data/${id}/`\n      )\n      .pipe(\n        tap((data) => {\n          return data;\n        })\n      );\n  }\n\n  addFake(schemeData: object) {\n    return this.http\n      .post<any>(\n        'https://evamed-rest-api.herokuapp.com/api-projects/material-scheme-data/',\n        schemeData\n      )\n      .pipe(\n        tap((data) => {\n          return data;\n        })\n      );\n  }\n\n  getUnits() {\n    return this.http.get<any>(environment.api_units).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  addUnit(data: object) {\n    return this.http.post<any>(environment.api_units, data).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  updateUnit(id: string, changes) {\n    return this.http.put(`${environment.api_units}${id}/`, changes).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  deleteUnit(id: number) {\n    return this.http.delete(`${environment.api_units}${id}/`).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  getPotentialTypes() {\n    return this.http.get<any>(environment.api_potetnial_types).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  addPotentialTypes(data: object) {\n    return this.http.post<any>(environment.api_potetnial_types, data).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  updatePotentialTypes(id: string, changes) {\n    return this.http\n      .put(`${environment.api_potetnial_types}${id}/`, changes)\n      .pipe(\n        tap((data) => {\n          return data;\n        })\n      );\n  }\n\n  deletePotentialType(id: number) {\n    return this.http.delete(`${environment.api_potetnial_types}${id}/`).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  getStandards() {\n    return this.http.get<any>(environment.api_standards).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  getDbMaterials() {\n    return this.http.get<any>(environment.api_db_material).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  addDbMaterial(data: object) {\n    return this.http.post<any>(environment.api_db_material, data).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  updateDbMaterial(id: string, changes) {\n    return this.http.put(`${environment.api_db_material}${id}/`, changes).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  deleteDbMaterial(id: number) {\n    return this.http.delete(`${environment.api_db_material}${id}/`).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  getTransports() {\n    return this.http.get<any>(environment.api_transports).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  addTransport(data: object) {\n    return this.http.post<any>(environment.api_transports, data).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  updateTransport(id: string, changes) {\n    return this.http.put(`${environment.api_transports}${id}/`, changes).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  deleteTransport(id: number) {\n    return this.http.delete(`${environment.api_transports}${id}/`).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  getPotentialTransport() {\n    return this.http.get<any>(environment.api_potential_transport).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  addPotentialTransport(data: object) {\n    return this.http.post<any>(environment.api_potential_transport, data).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  updatePotentialTransport(id: string, changes) {\n    return this.http\n      .put(`${environment.api_potential_transport}${id}/`, changes)\n      .pipe(\n        tap((data) => {\n          return data;\n        })\n      );\n  }\n\n  deletePotentialTransport(id: number) {\n    return this.http\n      .delete(`${environment.api_potential_transport}${id}/`)\n      .pipe(\n        tap((data) => {\n          return data;\n        })\n      );\n  }\n\n  getMachinery() {\n    return this.http.get<any>(environment.api_source_information).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  addMachinery(data: object) {\n    return this.http.post<any>(environment.api_source_information, data).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  updateMachinery(id: string, changes) {\n    return this.http\n      .put(`${environment.api_source_information}${id}/`, changes)\n      .pipe(\n        tap((data) => {\n          return data;\n        })\n      );\n  }\n\n  deleteMachinery(id: number) {\n    return this.http.delete(`${environment.api_source_information}${id}/`).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  getMachineryPotential() {\n    return this.http.get<any>(environment.api_source_information_data).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  addMachineryPotential(data: object) {\n    return this.http\n      .post<any>(environment.api_source_information_data, data)\n      .pipe(\n        tap((data) => {\n          return data;\n        })\n      );\n  }\n\n  updateMachineryPotential(id: string, changes) {\n    return this.http\n      .put(`${environment.api_source_information_data}${id}/`, changes)\n      .pipe(\n        tap((data) => {\n          return data;\n        })\n      );\n  }\n\n  deleteMachineryPotential(id: number) {\n    return this.http\n      .delete(`${environment.api_source_information_data}${id}/`)\n      .pipe(\n        tap((data) => {\n          return data;\n        })\n      );\n  }\n\n  getTypeEnergy() {\n    return this.http.get<any>(environment.api_type_energy).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  addTypeEnergy(data: object) {\n    return this.http.post<any>(environment.api_type_energy, data).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  updateTypeEnergy(id: string, changes) {\n    return this.http.put(`${environment.api_type_energy}${id}/`, changes).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  deleteTypeEnergy(id: number) {\n    return this.http.delete(`${environment.api_type_energy}${id}/`).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  getTypeEnergyData() {\n    return this.http.get<any>(environment.api_type_energy_data).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  addTypeEnergyData(data: object) {\n    return this.http.post<any>(environment.api_type_energy_data, data).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  updateTypeEnergyData(id: string, changes) {\n    return this.http\n      .put(`${environment.api_type_energy_data}${id}/`, changes)\n      .pipe(\n        tap((data) => {\n          return data;\n        })\n      );\n  }\n\n  deleteTypeEnergyData(id: number) {\n    return this.http.delete(`${environment.api_type_energy_data}${id}/`).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MaterialsAdminRoutingModule } from './materials-admin-routing.module';\nimport { MaterialsAdminComponent } from './components/materials-admin/materials-admin.component';\nimport { SharedModule } from '../shared/shared.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MaterialModule } from '../material/material.module';\nimport { AddMaterialComponent } from './components/add-material/add-material.component';\nimport { UpdateMaterialComponent } from './components/update-material/update-material.component';\nimport { ChartsModule } from 'ng2-charts';\nimport { UpdateDataSchemeComponent } from './components/update-data-scheme/update-data-scheme.component';\nimport { AddDataSchemeComponent } from './components/add-data-scheme/add-data-scheme.component';\nimport { DeleteMaterialComponent } from './components/delete-material/delete-material.component';\nimport { DeleteDataSchemeComponent } from './components/delete-data-scheme/delete-data-scheme.component';\n\n@NgModule({\n  declarations: [\n    MaterialsAdminComponent,\n    AddMaterialComponent,\n    UpdateMaterialComponent,\n    UpdateDataSchemeComponent,\n    AddDataSchemeComponent,\n    DeleteMaterialComponent,\n    DeleteDataSchemeComponent,\n  ],\n  imports: [\n    CommonModule,\n    MaterialsAdminRoutingModule,\n    SharedModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MaterialModule,\n    ChartsModule,\n  ],\n  exports: [\n    MaterialsAdminComponent,\n    AddMaterialComponent,\n    UpdateMaterialComponent,\n    UpdateDataSchemeComponent,\n    AddDataSchemeComponent,\n    DeleteMaterialComponent,\n    DeleteDataSchemeComponent,\n  ],\n  entryComponents: [\n    UpdateDataSchemeComponent,\n    AddDataSchemeComponent,\n    DeleteMaterialComponent,\n    DeleteDataSchemeComponent,\n  ],\n})\nexport class MaterialsAdminModule {}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { tap } from 'rxjs/operators';\r\nimport { environment } from './../../../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AnalisisService {\r\n  proyectos = [];\r\n  constructor(private http: HttpClient) {\r\n    // this._getProjects().subscribe( data => {\r\n    //   this.proyectos = data;\r\n    // });\r\n  }\r\n\r\n  getECDP() {\r\n    return this.http\r\n      .get<any>(environment.api_electricity_consumption_deconstructive_process)\r\n      .pipe(\r\n        tap((data) => {\r\n          return data;\r\n        })\r\n      );\r\n  }\r\n\r\n  getUsefulLife() {\r\n    return this.http.get<any>(environment.api_useful_life).pipe(\r\n      tap((data) => {\r\n        return data;\r\n      })\r\n    );\r\n  }\r\n\r\n  //api_type_energy\r\n\r\n  getTypeEnergy() {\r\n    return this.http.get<any>(environment.api_type_energy).pipe(\r\n      tap((data) => {\r\n        return data;\r\n      })\r\n    );\r\n  }\r\n\r\n  getTypeEnergyData() {\r\n    return this.http.get<any>(environment.api_type_energy_data).pipe(\r\n      tap((data) => {\r\n        return data;\r\n      })\r\n    );\r\n  }\r\n\r\n  getElectricityConsumptionData() {\r\n    return this.http\r\n      .get<any>(environment.api_electricity_consumption_data)\r\n      .pipe(\r\n        tap((data) => {\r\n          return data;\r\n        })\r\n      );\r\n  }\r\n\r\n  getAnnualConsumptionRequired() {\r\n    return this.http.get<any>(environment.api_annual_consumption_required).pipe(\r\n      tap((data) => {\r\n        return data;\r\n      })\r\n    );\r\n  }\r\n\r\n  getSourceInformation() {\r\n    return this.http.get<any>(environment.api_source_information).pipe(\r\n      tap((data) => {\r\n        return data;\r\n      })\r\n    );\r\n  }\r\n\r\n  getSourceInformationData() {\r\n    return this.http.get<any>(environment.api_source_information_data).pipe(\r\n      tap((data) => {\r\n        return data;\r\n      })\r\n    );\r\n  }\r\n\r\n  getConstructiveSystemElement() {\r\n    return this.http.get<any>(environment.api_construction_stage).pipe(\r\n      tap((data) => {\r\n        return data;\r\n      })\r\n    );\r\n  }\r\n\r\n  getPotentialTypes() {\r\n    return this.http.get<any>(environment.api_potetnial_types).pipe(\r\n      tap((data) => {\r\n        return data;\r\n      })\r\n    );\r\n  }\r\n\r\n  getStandars() {\r\n    return this.http.get<any>(environment.api_standards).pipe(\r\n      tap((data) => {\r\n        return data;\r\n      })\r\n    );\r\n  }\r\n\r\n  getMaterialSchemeProyect() {\r\n    return this.http.get<any>(environment.api_scheme_project).pipe(\r\n      tap((data) => {\r\n        return data;\r\n      })\r\n    );\r\n  }\r\n\r\n  getMaterialSchemeData() {\r\n    return this.http.get<any>(environment.api_material_scheme_data).pipe(\r\n      tap((data) => {\r\n        return data;\r\n      })\r\n    );\r\n  }\r\n\r\n  updateMaterialSchemeData(id: string, changes) {\r\n    return this.http\r\n      .put(`${environment.api_material_scheme_data}${id}/`, changes)\r\n      .pipe(\r\n        tap((data) => {\r\n          return data;\r\n        })\r\n      );\r\n  }\r\n\r\n  addMaterialSchemeData(data: object) {\r\n    return this.http.post<any>(environment.api_material_scheme_data, data).pipe(\r\n      tap((data) => {\r\n        return data;\r\n      })\r\n    );\r\n  }\r\n\r\n  getSectionsList() {\r\n    return this.http.get<any>(environment.api_sections).pipe(\r\n      tap((data) => {\r\n        return data;\r\n      })\r\n    );\r\n  }\r\n\r\n  getMaterials() {\r\n    return this.http.get<any>(environment.api_materials).pipe(\r\n      tap((data) => {\r\n        return data;\r\n      })\r\n    );\r\n  }\r\n\r\n  getPotentialTransport() {\r\n    return this.http.get<any>(environment.api_potential_transport).pipe(\r\n      tap((data) => {\r\n        return data;\r\n      })\r\n    );\r\n  }\r\n\r\n  getConversion() {\r\n    return this.http.get<any>(environment.api_conversions).pipe(\r\n      tap((data) => {\r\n        return data;\r\n      })\r\n    );\r\n  }\r\n\r\n  getDB() {\r\n    return this.http.get<any>(environment.api_db_material).pipe(\r\n      tap((data) => {\r\n        return data;\r\n      })\r\n    );\r\n  }\r\n}\r\n","<form [formGroup]=\"addMaterialForm\" novalidate (ngSubmit)=\"onSubmit()\">\n  <mat-card  class=\"custom-card\">\n    <mat-card-header>\n      <mat-card-title>Ingresar datos del material</mat-card-title>\n    </mat-card-header>\n    <mat-card-content>\n      <div class=\"Row\">\n        <div class=\"Col\">\n          <mat-form-field  appearance=\"outline\" >\n            <input matInput placeholder=\"Nombre\" formControlName=\"name_material\">\n            <mat-error *ngIf=\"addMaterialForm.controls['name_material'].hasError('required')\">\n              El nombre es <strong>requerido</strong>\n            </mat-error>\n          </mat-form-field>\n        </div>\n      </div>\n    </mat-card-content>\n    <mat-card-content>\n      <div class=\"Row\">\n        <div class=\"Col\">\n          <mat-form-field appearance=\"outline\">\n            <mat-select placeholder=\"Base de datos\" formControlName=\"database_from\">\n              <mat-option *ngFor=\"let data of ListDatabases\" [value]=\"data.name\">\n                {{ data.name }}\n              </mat-option>\n            </mat-select>\n            <mat-error *ngIf=\"addMaterialForm.controls['database_from'].hasError('required')\">\n              Base de datos es <strong>requiredo</strong>\n            </mat-error>\n          </mat-form-field>\n        </div>\n      </div>\n    </mat-card-content>\n    <mat-card-content>\n      <div class=\"Row\">\n        <div class=\"Col\">\n          <mat-form-field  appearance=\"outline\" >\n            <textarea matInput placeholder=\"Descripción\" formControlName=\"description\"></textarea>\n          </mat-form-field>\n        </div>\n      </div>\n    </mat-card-content>\n    <mat-card-content>\n      <div class=\"Row\">\n        <div class=\"Col\">\n          <mat-form-field appearance=\"outline\">\n            <mat-select placeholder=\"Unidad\" formControlName=\"unit_id\">\n              <mat-option *ngFor=\"let data of units\" [value]=\"data.id\">\n                {{ data.name_unit }}\n              </mat-option>\n            </mat-select>\n            <mat-error *ngIf=\"addMaterialForm.controls['unit_id'].hasError('required')\">\n              Unidad es un campo <strong>requerido</strong>\n            </mat-error>\n          </mat-form-field>\n        </div>\n      </div>\n    </mat-card-content> \n    <mat-card-actions>\n      <button mat-raised-button color=\"primary\" type=\"submit\">Agregar material</button>\n      <button\n        mat-button\n        class=\"yellow-button\"\n        (click)=\"goToMaterialList()\"\n      >\n        Lista de materiales\n      </button>\n    </mat-card-actions>\n  </mat-card>\n</form>\n","\n<form [formGroup]=\"form\" (ngSubmit)=\"addScheme($event)\">\n  <div class=\"header-modal\">\n    <h1 mat-dialog-title class=\"title-standard-second-light\">\n      Agregar impactos ambientales\n    </h1>\n    <a (click)=\"onNoClick()\" class=\"close-modal\">\n      X\n    </a>\n  </div>\n\n  <div mat-dialog-content>\n    <mat-card  class=\"custom-card\">\n  \n      <mat-card-content>\n        <div class=\"Row\">\n          <div class=\"Col\">\n            <mat-form-field appearance=\"outline\">\n              <mat-select \n                placeholder=\"Potencial de impacto ambiental\" \n                formControlName=\"potential_type_id\" \n                (selectionChange)=\"potentialSelected($event.value)\" \n              >\n                <mat-option *ngFor=\"let potential of ListPotential\" [value]=\"potential.id\">\n                  {{ potential.name_complete_potential_type }}\n                </mat-option>\n              </mat-select>\n              <mat-error *ngIf=\"form.controls['potential_type_id'].hasError('required')\">\n                Potencial es un campo <strong>requerido</strong>\n              </mat-error>\n            </mat-form-field>\n          </div>\n        </div>\n      </mat-card-content>\n\n      <mat-card-content>\n        <div class=\"Row\">\n          <div class=\"Col\">\n            <h2>Unidad: {{ unit_name }}</h2>\n          </div>\n        </div>\n      </mat-card-content>\n  \n      <mat-card-content>\n        <div class=\"Row\">\n          <div class=\"Col\">\n            <mat-radio-group [(ngModel)]=\"standard_id\" [ngModelOptions]=\"{standalone: true}\" class=\"margin-left\" >\n              <mat-radio-button *ngFor=\"let data of ListStandards\" name=\"opciones\" [value]=\"data.id\"  style=\"margin: 10px\">\n                {{ data.name_standard }}\n              </mat-radio-button>\n            </mat-radio-group>\n          </div>\n        </div>\n      </mat-card-content>\n  \n      <mat-card-content>\n        <div class=\"Row\">\n          <div class=\"Col\">\n            <mat-form-field  appearance=\"outline\" >\n              <input matInput placeholder=\"Valor\" formControlName=\"value\">\n              <mat-error *ngIf=\"form.controls['value'].hasError('required')\">\n                El valor es <strong>requerido</strong>\n              </mat-error>\n            </mat-form-field>\n          </div>\n        </div>\n      </mat-card-content>\n  \n    </mat-card>\n  </div>\n\n  <div mat-dialog-actions class=\"center\">\n    <button mat-raised-button color=\"primary\" type=\"submit\">Agregar impacto ambiental</button>\n  </div>\n\n</form>","<div class=\"header-modal\">\n  <h1 mat-dialog-title class=\"title-standard-second-light\">\n    Eliminar potencial de impacto ambiental\n  </h1>\n  <a (click)=\"onNoClick()\" class=\"close-modal\">\n    X\n  </a>\n</div>\n\n<div mat-dialog-content>\n  <h1>¿Desea eliminar el potencial de impacto ambiental?</h1>\n</div>\n\n<div mat-dialog-actions class=\"center\">\n  <button mat-raised-button color=\"primary\" (click)=\"deletePotential($event, data[0].id)\">Eliminar</button>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MaterialsService } from './../../../core/services/materials/materials.service';\n\n@Component({\n  selector: 'app-add-material',\n  templateUrl: './add-material.component.html',\n  styleUrls: ['./add-material.component.scss'],\n})\nexport class AddMaterialComponent implements OnInit {\n  addMaterialForm: FormGroup;\n\n  units: any;\n\n  ListDatabases: any;\n\n  constructor(\n    private router: Router,\n    private fb: FormBuilder,\n    private materialsService: MaterialsService\n  ) {\n    this.buildForm();\n    this.materialsService.getUnits().subscribe((data) => {\n      this.units = data;\n    });\n    this.materialsService.getDbMaterials().subscribe((data) => {\n      this.ListDatabases = data;\n    });\n  }\n\n  ngOnInit(): void {}\n\n  private buildForm() {\n    this.addMaterialForm = this.fb.group({\n      name_material: [null, Validators.required],\n      database_from: [null, Validators.required],\n      description: [null],\n      unit_id: [null, Validators.required],\n    });\n  }\n\n  onSubmit() {\n    if (this.addMaterialForm.valid) {\n      const material = this.addMaterialForm.value;\n      this.materialsService.addMaterial(material).subscribe((data) => {\n        this.goToMaterialList();\n      });\n    }\n  }\n\n  goToMaterialList() {\n    this.router.navigateByUrl('admin-materials');\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MaterialsAdminComponent } from './components/materials-admin/materials-admin.component';\nimport { AddMaterialComponent } from './components/add-material/add-material.component';\nimport { UpdateMaterialComponent } from './components/update-material/update-material.component';\nconst routes: Routes = [\n  {\n    path: '',\n    component: MaterialsAdminComponent,\n  },\n  {\n    path: 'add',\n    component: AddMaterialComponent,\n  },\n  {\n    path: 'update/:id',\n    component: UpdateMaterialComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class MaterialsAdminRoutingModule {}\n","\n<form [formGroup]=\"form\" (ngSubmit)=\"updateScheme($event)\">\n  <div class=\"header-modal\">\n    <h1 mat-dialog-title class=\"title-standard-second-light\">\n      Actualizar impacto ambiental\n    </h1>\n    <a (click)=\"onNoClick()\" class=\"close-modal\">\n      X\n    </a>\n  </div>\n\n  <div mat-dialog-content *ngIf=\"loading === false\">\n    <mat-card  class=\"custom-card\">\n      <mat-card-content>\n        <div class=\"Row\">\n          <div class=\"Col\">\n            <mat-form-field appearance=\"outline\">\n              <mat-select \n                placeholder=\"Potencial de impacto ambiental\" \n                formControlName=\"potential_type_id\"\n                (selectionChange)=\"potentialSelected($event.value)\" \n              >\n                <mat-option *ngFor=\"let data of ListPotential\" [value]=\"data.id\">\n                  {{ data.name_complete_potential_type }}\n                </mat-option>\n              </mat-select>\n              <mat-error *ngIf=\"form.controls['potential_type_id'].hasError('required')\">\n                Potencial es un campo <strong>requerido</strong>\n              </mat-error>\n            </mat-form-field>\n          </div>\n        </div>\n      </mat-card-content>\n  \n      <mat-card-content>\n        <div class=\"Row\">\n          <div class=\"Col\">\n            <h2>Unidad: {{ unit_name }}</h2>\n          </div>\n        </div>\n      </mat-card-content>\n\n      <mat-card-content>\n        <div class=\"Row\">\n          <div class=\"Col\">\n            <mat-radio-group [(ngModel)]=\"standard_id\" [ngModelOptions]=\"{standalone: true}\" class=\"margin-left\" >\n              <mat-radio-button *ngFor=\"let data of ListStandards\" name=\"opciones\" [value]=\"data.id\"  style=\"margin: 10px\">\n                {{ data.name_standard }}\n              </mat-radio-button>\n            </mat-radio-group>\n          </div>\n        </div>\n      </mat-card-content>\n  \n      <mat-card-content>\n        <div class=\"Row\">\n          <div class=\"Col\">\n            <mat-form-field  appearance=\"outline\" >\n              <input matInput placeholder=\"Valor\" formControlName=\"value\">\n              <mat-error *ngIf=\"form.controls['value'].hasError('required')\">\n                El valor es <strong>requerido</strong>\n              </mat-error>\n            </mat-form-field>\n          </div>\n        </div>\n      </mat-card-content>\n  \n    </mat-card>\n  </div>\n\n  <div mat-dialog-content *ngIf=\"loading === true\">\n    <mat-card-header>\n      <mat-card-title>Cargando...</mat-card-title>\n    </mat-card-header>\n  </div>\n\n  <div mat-dialog-actions class=\"center\">\n    <button mat-raised-button color=\"primary\" type=\"submit\">Editar impacto ambiental</button>\n  </div>\n\n</form>"],"sourceRoot":"webpack:///"}