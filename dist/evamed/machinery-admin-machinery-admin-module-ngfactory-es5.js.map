{"version":3,"sources":["webpack:///src/app/machinery-admin/machinery-admin-routing.module.ts","webpack:///src/app/machinery-admin/components/potential/update-potential-machinery/update-potential-machinery.component.html","webpack:///src/app/machinery-admin/components/machinery-admin/machinery-admin.component.ts","webpack:///src/app/machinery-admin/components/update-machinery/update-machinery.component.ts","webpack:///src/app/machinery-admin/components/potential/add-potential-machinery/add-potential-machinery.component.ts","webpack:///node_modules/@angular/material/card/index.d.ts.MatCard.html","webpack:///node_modules/@angular/material/card/index.d.ts.MatCardHeader.html","webpack:///node_modules/@angular/material/card/index.d.ts.MatCardTitleGroup.html","webpack:///src/app/machinery-admin/components/add-machinery/add-machinery.component.html","webpack:///src/app/machinery-admin/components/delete-machinery/delete-machinery.component.html","webpack:///src/app/machinery-admin/components/machinery-admin/machinery-admin.component.html","webpack:///src/app/machinery-admin/components/delete-machinery/delete-machinery.component.ts","webpack:///src/app/machinery-admin/components/potential/delete-potential-machinery/delete-potential-machinery.component.html","webpack:///src/app/core/services/materials/materials.service.ts","webpack:///src/app/machinery-admin/machinery-admin.module.ts","webpack:///src/app/machinery-admin/components/potential/delete-potential-machinery/delete-potential-machinery.component.ts","webpack:///src/app/machinery-admin/components/add-machinery/add-machinery.component.ts","webpack:///src/app/machinery-admin/components/potential/add-potential-machinery/add-potential-machinery.component.html","webpack:///src/app/machinery-admin/components/potential/update-potential-machinery/update-potential-machinery.component.ts","webpack:///src/app/machinery-admin/components/update-machinery/update-machinery.component.html"],"names":["routes","path","component","MachineryAdminRoutingModule","MachineryAdminComponent","materialsService","dialog","router","displayedColumns","getMachinery","subscribe","data","machineryList","navigateByUrl","event","preventDefault","dialogRef","open","width","afterClosed","result","ngOnInit","unitId","machinerySelected","filter","id","UpdateMachineryComponent","formBuilder","activatedRoute","buildForm","getPotentialTypes","potentialTypeList","getUnits","units","params","machinaryFiltered","machinary","parseInt","map","form","patchValue","potentialList","getMachineryPotential","potential","sourceInformarion_id","console","log","group","name_source_information","required","valid","machinery","value","updateMachinery","newProduct","navigate","element","potentialId","potentialSelected","potencial","name_complete_potential_type","unit","name_unit","AddPotentialMachineryComponent","unit_name","ListPotential","close","potential_type_id","potentialData","unitData","unit_potential_type","unit_id","e","addMachineryPotential","newScheme","onNoClick","DeleteMachineryComponent","deleteMachinery","MaterialsService","http","get","api_scheme_project","pipe","api_construction_stage","api_annual_consumption_required","api_electricity_consumption_deconstructive_process","api_materials","material","post","api_material_scheme_data","changes","put","schemeData","api_units","api_potetnial_types","api_standards","api_db_material","api_transports","api_potential_transport","api_source_information","api_source_information_data","api_type_energy","api_type_energy_data","MachineryAdminModule","DeletePotentialMachineryComponent","deleteMachineryPotential","AddMachineryComponent","addMachinery","UpdatePotentialMachineryComponent","loading","schema","schemaSelected","scheme","updateMachineryPotential"],"mappings":"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","file":"machinery-admin-machinery-admin-module-ngfactory-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MachineryAdminComponent } from './components/machinery-admin/machinery-admin.component';\nimport { UpdateMachineryComponent } from './components/update-machinery/update-machinery.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MachineryAdminComponent,\n  },\n  {\n    path: 'update/:id',\n    component: UpdateMachineryComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class MachineryAdminRoutingModule {}\n","\n<form [formGroup]=\"form\" (ngSubmit)=\"updateScheme($event)\">\n  <div class=\"header-modal\">\n    <h1 mat-dialog-title class=\"title-standard-second-light\">\n      Actualizar impacto ambiental\n    </h1>\n    <a (click)=\"onNoClick()\" class=\"close-modal\">\n      X\n    </a>\n  </div>\n\n  <div mat-dialog-content>\n    <mat-card  class=\"custom-card\">\n  \n      <mat-card-content>\n        <div class=\"Row\">\n          <div class=\"Col\">\n            <mat-form-field appearance=\"outline\">\n              <mat-select \n                placeholder=\"Potencial de impacto ambiental\" \n                formControlName=\"potential_type_id\" \n                (selectionChange)=\"potentialSelected($event.value)\" \n              >\n                <mat-option *ngFor=\"let potential of ListPotential\" [value]=\"potential.id\">\n                  {{ potential.name_complete_potential_type }}\n                </mat-option>\n              </mat-select>\n              <mat-error *ngIf=\"form.controls['potential_type_id'].hasError('required')\">\n                Potencial es un campo <strong>requerido</strong>\n              </mat-error>\n            </mat-form-field>\n          </div>\n        </div>\n      </mat-card-content>\n\n      <mat-card-content>\n        <div class=\"Row\">\n          <div class=\"Col\">\n            <h2>Unidad: {{ unit_name }}</h2>\n          </div>\n        </div>\n      </mat-card-content>\n  \n      <mat-card-content>\n        <div class=\"Row\">\n          <div class=\"Col\">\n            <mat-form-field  appearance=\"outline\" >\n              <input matInput placeholder=\"Valor\" formControlName=\"value\">\n              <mat-error *ngIf=\"form.controls['value'].hasError('required')\">\n                El valor es <strong>requerido</strong>\n              </mat-error>\n            </mat-form-field>\n          </div>\n        </div>\n      </mat-card-content>\n  \n    </mat-card>\n  </div>\n\n  <div mat-dialog-actions class=\"center\">\n    <button mat-raised-button color=\"primary\" type=\"submit\">Actualizar</button>\n  </div>\n\n</form>","import { Component, OnInit } from '@angular/core';\nimport { MaterialsService } from 'src/app/core/services/materials/materials.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { AddMachineryComponent } from '../add-machinery/add-machinery.component';\nimport { DeleteMachineryComponent } from '../delete-machinery/delete-machinery.component';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-machinery-admin',\n  templateUrl: './machinery-admin.component.html',\n  styleUrls: ['./machinery-admin.component.scss'],\n})\nexport class MachineryAdminComponent implements OnInit {\n  machineryList: any;\n\n  displayedColumns: string[] = ['id', 'name_source_information', 'actions'];\n\n  constructor(\n    private materialsService: MaterialsService,\n    public dialog: MatDialog,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.materialsService.getMachinery().subscribe((data) => {\n      this.machineryList = data;\n    });\n  }\n\n  goToAdmin() {\n    this.router.navigateByUrl('admin');\n  }\n\n  addMachinery(event: Event) {\n    event.preventDefault();\n    const dialogRef = this.dialog.open(AddMachineryComponent, {\n      width: '680px',\n      data: {},\n    });\n\n    dialogRef.afterClosed().subscribe((result) => {\n      this.ngOnInit();\n    });\n  }\n\n  deleteMachinery(event: Event, unitId) {\n    event.preventDefault();\n    const machinerySelected = this.machineryList.filter(\n      (data) => data.id === unitId\n    );\n    const dialogRef = this.dialog.open(DeleteMachineryComponent, {\n      width: '680px',\n      data: machinerySelected,\n    });\n\n    dialogRef.afterClosed().subscribe((result) => {\n      this.ngOnInit();\n    });\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MaterialsService } from './../../../core/services/materials/materials.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { AddPotentialMachineryComponent } from '../potential/add-potential-machinery/add-potential-machinery.component';\nimport { UpdatePotentialMachineryComponent } from '../potential/update-potential-machinery/update-potential-machinery.component';\nimport { DeletePotentialMachineryComponent } from '../potential/delete-potential-machinery/delete-potential-machinery.component';\n\n@Component({\n  selector: 'app-update-machinery',\n  templateUrl: './update-machinery.component.html',\n  styleUrls: ['./update-machinery.component.scss'],\n})\nexport class UpdateMachineryComponent implements OnInit {\n  form: FormGroup;\n\n  units: any;\n\n  id: string;\n\n  potentialList: any;\n\n  potentialTypeList: any;\n\n  displayedColumns: string[] = [\n    'id',\n    'potential_type_id',\n    'unit_id',\n    'value',\n    'actions',\n  ];\n\n  constructor(\n    private router: Router,\n    private formBuilder: FormBuilder,\n    private activatedRoute: ActivatedRoute,\n    private materialsService: MaterialsService,\n    public dialog: MatDialog\n  ) {\n    this.buildForm();\n    this.materialsService.getPotentialTypes().subscribe((data) => {\n      this.potentialTypeList = data;\n    });\n    this.materialsService.getUnits().subscribe((data) => {\n      this.units = data;\n    });\n  }\n\n  ngOnInit(): void {\n    this.activatedRoute.params.subscribe((params: Params) => {\n      this.materialsService.getMachinery().subscribe((data) => {\n        const machinaryFiltered = data.filter(\n          (machinary) => machinary.id === parseInt(params.id)\n        );\n\n        machinaryFiltered.map((machinary) => {\n          this.id = machinary.id;\n          this.form.patchValue(machinary);\n          this.potentialList = [];\n          this.materialsService.getMachineryPotential().subscribe((data) => {\n            const potentialList = data.filter(\n              (potential) => potential.sourceInformarion_id === machinary.id\n            );\n            this.potentialList = potentialList;\n            console.log(this.potentialList);\n          });\n        });\n      });\n    });\n  }\n\n  private buildForm() {\n    this.form = this.formBuilder.group({\n      name_source_information: [null, Validators.required],\n    });\n  }\n\n  goToMachineryList() {\n    this.router.navigateByUrl('admin-machinery');\n  }\n\n  updateMachinery(event: Event) {\n    event.preventDefault();\n    if (this.form.valid) {\n      const machinery = this.form.value;\n      this.materialsService\n        .updateMachinery(this.id, machinery)\n        .subscribe((newProduct) => {\n          this.ngOnInit();\n          this.router.navigate(['./admin-machinery/']);\n        });\n    }\n  }\n\n  addPotential(event: Event) {\n    event.preventDefault();\n    const dialogRef = this.dialog.open(AddPotentialMachineryComponent, {\n      width: '680px',\n      data: { sourceInformarion_id: this.id },\n    });\n\n    dialogRef.afterClosed().subscribe((result) => {\n      this.ngOnInit();\n    });\n  }\n\n  updatePotential(event: Event, element: any) {\n    event.preventDefault();\n    const dialogRef = this.dialog.open(UpdatePotentialMachineryComponent, {\n      width: '680px',\n      data: { ...element },\n    });\n\n    dialogRef.afterClosed().subscribe((result) => {\n      this.ngOnInit();\n    });\n  }\n\n  deletePotential(event: Event, potentialId: number) {\n    event.preventDefault();\n    const potentialSelected = this.potentialList.filter(\n      (data) => data.id === potentialId\n    );\n    const dialogRef = this.dialog.open(DeletePotentialMachineryComponent, {\n      width: '680px',\n      data: potentialSelected,\n    });\n\n    dialogRef.afterClosed().subscribe((result) => {\n      this.ngOnInit();\n    });\n  }\n\n  getPotential(id: number) {\n    const potencial = this.potentialTypeList.filter(\n      (potencial) => potencial.id === id\n    );\n\n    return potencial[0].name_complete_potential_type;\n  }\n\n  getUnit(id: number) {\n    const unit = this.units.filter((unit) => unit.id === id);\n\n    return unit[0].name_unit;\n  }\n}\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MaterialsService } from './../../../../core/services/materials/materials.service';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\nexport interface DialogData {\n  id: number;\n  sourceInformarion_id: number;\n  potential_type_id: number;\n  unit_id: number;\n  value: string;\n}\n\n@Component({\n  selector: 'app-add-potential-machinery',\n  templateUrl: './add-potential-machinery.component.html',\n  styleUrls: ['./add-potential-machinery.component.scss'],\n})\nexport class AddPotentialMachineryComponent implements OnInit {\n  form: FormGroup;\n\n  id: string;\n\n  sourceInformarion_id: number;\n\n  units: any;\n\n  ListSchemeData: any;\n\n  ListPotential: any;\n\n  potential: any;\n\n  unit_id: number;\n\n  unit_name: string = 'Seleccione potencial de impacto ambiental';\n\n  constructor(\n    private materialsService: MaterialsService,\n    private formBuilder: FormBuilder,\n    public dialogRef: MatDialogRef<AddPotentialMachineryComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData\n  ) {\n    this.sourceInformarion_id = data.sourceInformarion_id;\n    this.buildForm();\n    this.materialsService.getUnits().subscribe((data) => {\n      this.units = data;\n    });\n    this.materialsService.getPotentialTypes().subscribe((data) => {\n      this.ListPotential = data;\n    });\n  }\n\n  ngOnInit(): void {}\n\n  onNoClick(): void {\n    this.dialogRef.close(this.data);\n  }\n\n  private buildForm() {\n    this.form = this.formBuilder.group({\n      potential_type_id: [null, Validators.required],\n      value: [null, Validators.required],\n    });\n  }\n\n  potentialSelected(potentialId) {\n    const potentialData = this.ListPotential.filter(\n      (data) => data.id === potentialId\n    );\n\n    const unitData = this.units.filter(\n      (data) => data.name_unit == potentialData[0].unit_potential_type\n    );\n\n    try {\n      this.unit_id = unitData[0].id;\n      this.unit_name = unitData[0].name_unit;\n    } catch (e) {\n      this.unit_id = null;\n      this.unit_name = 'No se encontró coincidencia con unidades';\n    }\n  }\n\n  addScheme(event) {\n    event.preventDefault();\n    if (this.form.valid) {\n      const potential = this.form.value;\n\n      this.materialsService\n        .addMachineryPotential({\n          ...potential,\n          sourceInformarion_id: this.sourceInformarion_id,\n          unit_id: this.unit_id,\n        })\n        .subscribe((newScheme) => {\n          this.onNoClick();\n        });\n    }\n  }\n}\n","<ng-content></ng-content>\n<ng-content select=\"mat-card-footer\"></ng-content>\n","<ng-content select=\"[mat-card-avatar], [matCardAvatar]\"></ng-content>\n<div class=\"mat-card-header-text\">\n  <ng-content\n      select=\"mat-card-title, mat-card-subtitle,\n      [mat-card-title], [mat-card-subtitle],\n      [matCardTitle], [matCardSubtitle]\"></ng-content>\n</div>\n<ng-content></ng-content>\n","<div>\n  <ng-content\n      select=\"mat-card-title, mat-card-subtitle,\n      [mat-card-title], [mat-card-subtitle],\n      [matCardTitle], [matCardSubtitle]\"></ng-content>\n</div>\n<ng-content select=\"img\"></ng-content>\n<ng-content></ng-content>\n","<form [formGroup]=\"form\" (ngSubmit)=\"addMachinery($event)\">\n  <div class=\"header-modal\">\n    <h1 mat-dialog-title class=\"title-standard-second-light\">\n      Agregar maquinaria\n    </h1>\n    <a (click)=\"onNoClick()\" class=\"close-modal\">\n      X\n    </a>\n  </div>\n\n  <div mat-dialog-content>\n    <mat-card  class=\"custom-card\">\n      <mat-card-content>\n        <div class=\"Row\">\n          <div class=\"Col\">\n            <mat-form-field  appearance=\"outline\" >\n              <input matInput placeholder=\"Nombre de maquinaria\" formControlName=\"name_source_information\">\n              <mat-error *ngIf=\"form.controls['name_source_information'].hasError('required')\">\n                Maquinaria es <strong>requerido</strong>\n              </mat-error>\n            </mat-form-field>\n          </div>\n        </div>\n      </mat-card-content>\n    </mat-card>\n  </div>\n\n  <div mat-dialog-actions class=\"center\">\n    <button mat-raised-button color=\"primary\" type=\"submit\">Agregar</button>\n  </div>\n</form>","<div class=\"header-modal\">\n  <h1 mat-dialog-title class=\"title-standard-second-light\">\n    Eliminar Maquinaria\n  </h1>\n  <a (click)=\"onNoClick()\" class=\"close-modal\">\n    X\n  </a>\n</div>\n\n<div mat-dialog-content>\n  <h1>¿Desea eliminar la maquinaria {{data[0].name_source_information}}?</h1>\n</div>\n\n<div mat-dialog-actions class=\"center\">\n  <button mat-raised-button color=\"primary\" (click)=\"deleteMachinery($event, data[0].id)\">Eliminar</button>\n</div>","<h1>Administrador de Maquinaria</h1>\n\n<div>\n  <button mat-button class=\"yellow-button\" (click)=\"addMachinery($event)\">\n    Agregar maquinaria\n  </button>\n  <button  mat-raised-button color=\"primary\" (click)=\"goToAdmin()\">\n    Regresar a Administrador\n  </button>\n</div>\n\n<table mat-table [dataSource]=\"machineryList\" class=\"mat-elevation-z8\">\n\n  <ng-container matColumnDef=\"id\">\n    <th mat-header-cell *matHeaderCellDef> Id. </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.id}} </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"name_source_information\">\n    <th mat-header-cell *matHeaderCellDef> Nombre de maquinaria </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.name_source_information}} </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"actions\">\n    <th mat-header-cell *matHeaderCellDef> Acciones </th>\n    <td mat-cell *matCellDef=\"let element\"> \n      <a \n        mat-raised-button \n        [routerLink]=\"['update', element.id]\"\n      >Editar </a>\n      <button mat-raised-button color=\"warn\" (click)=\"deleteMachinery($event, element.id)\">Eliminar</button>\n    </td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n</table>\n\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MaterialsService } from './../../../core/services/materials/materials.service';\n\nexport interface DialogData {\n  id: number;\n  name_transport: string;\n}\n\n@Component({\n  selector: 'app-delete-machinery',\n  templateUrl: './delete-machinery.component.html',\n  styleUrls: ['./delete-machinery.component.scss'],\n})\nexport class DeleteMachineryComponent implements OnInit {\n  constructor(\n    private materialsService: MaterialsService,\n    public dialogRef: MatDialogRef<DeleteMachineryComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData\n  ) {}\n\n  ngOnInit(): void {}\n\n  onNoClick(): void {\n    this.dialogRef.close(this.data);\n  }\n\n  deleteMachinery(event: Event, id: number) {\n    event.preventDefault();\n    this.materialsService.deleteMachinery(id).subscribe((data) => {\n      this.onNoClick();\n    });\n  }\n}\n","<div class=\"header-modal\">\n  <h1 mat-dialog-title class=\"title-standard-second-light\">\n    Eliminar potencial de impacto ambiental\n  </h1>\n  <a (click)=\"onNoClick()\" class=\"close-modal\">\n    X\n  </a>\n</div>\n\n<div mat-dialog-content>\n  <h1>¿Desea eliminar el potencial de impacto ambiental?</h1>\n</div>\n\n<div mat-dialog-actions class=\"center\">\n  <button mat-raised-button color=\"primary\" (click)=\"deletePotential($event, data[0].id)\">Eliminar</button>\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { tap } from 'rxjs/operators';\nimport { environment } from './../../../../environments/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MaterialsService {\n  constructor(private http: HttpClient) {}\n\n  getMaterialSchemeProyects() {\n    return this.http.get<any>(environment.api_scheme_project).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  getConstructionStage() {\n    return this.http.get<any>(environment.api_construction_stage).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  getACR() {\n    return this.http.get<any>(environment.api_annual_consumption_required).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  getEDCP() {\n    return this.http\n      .get<any>(environment.api_electricity_consumption_deconstructive_process)\n      .pipe(\n        tap((data) => {\n          return data;\n        })\n      );\n  }\n\n  getMaterials() {\n    return this.http.get<any>(environment.api_materials).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  searchMaterial(material) {\n    return this.http\n      .get<any>(environment.api_materials + '?search=' + material)\n      .pipe(\n        tap((data) => {\n          return data;\n        })\n      );\n  }\n\n  addMaterial(data: object) {\n    return this.http.post<any>(environment.api_materials, data).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  deleteMaterial(id: number) {\n    return this.http.delete(`${environment.api_materials}${id}/`).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  deleteMaterialSchemeData(id: number) {\n    return this.http\n      .delete(`${environment.api_material_scheme_data}${id}/`)\n      .pipe(\n        tap((data) => {\n          return data;\n        })\n      );\n  }\n\n  updateMaterial(id: string, changes) {\n    return this.http.put(`${environment.api_materials}${id}/`, changes).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  getfake() {\n    return this.http\n      .get<any>(\n        'http://127.0.0.1:8000/api-projects/material-scheme-data/'\n        //'https://evamed-rest-api.herokuapp.com/api-projects/material-scheme-data/',\n      )\n      .pipe(\n        tap((data) => {\n          return data;\n        })\n      );\n  }\n\n  deleteFake(id: number) {\n    return this.http\n      .delete(\n        `https://evamed-rest-api.herokuapp.com/api-projects/material-scheme-data/${id}/`\n      )\n      .pipe(\n        tap((data) => {\n          return data;\n        })\n      );\n  }\n\n  addFake(schemeData: object) {\n    return this.http\n      .post<any>(\n        'https://evamed-rest-api.herokuapp.com/api-projects/material-scheme-data/',\n        schemeData\n      )\n      .pipe(\n        tap((data) => {\n          return data;\n        })\n      );\n  }\n\n  getUnits() {\n    return this.http.get<any>(environment.api_units).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  addUnit(data: object) {\n    return this.http.post<any>(environment.api_units, data).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  updateUnit(id: string, changes) {\n    return this.http.put(`${environment.api_units}${id}/`, changes).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  deleteUnit(id: number) {\n    return this.http.delete(`${environment.api_units}${id}/`).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  getPotentialTypes() {\n    return this.http.get<any>(environment.api_potetnial_types).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  addPotentialTypes(data: object) {\n    return this.http.post<any>(environment.api_potetnial_types, data).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  updatePotentialTypes(id: string, changes) {\n    return this.http\n      .put(`${environment.api_potetnial_types}${id}/`, changes)\n      .pipe(\n        tap((data) => {\n          return data;\n        })\n      );\n  }\n\n  deletePotentialType(id: number) {\n    return this.http.delete(`${environment.api_potetnial_types}${id}/`).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  getStandards() {\n    return this.http.get<any>(environment.api_standards).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  getDbMaterials() {\n    return this.http.get<any>(environment.api_db_material).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  addDbMaterial(data: object) {\n    return this.http.post<any>(environment.api_db_material, data).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  updateDbMaterial(id: string, changes) {\n    return this.http.put(`${environment.api_db_material}${id}/`, changes).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  deleteDbMaterial(id: number) {\n    return this.http.delete(`${environment.api_db_material}${id}/`).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  getTransports() {\n    return this.http.get<any>(environment.api_transports).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  addTransport(data: object) {\n    return this.http.post<any>(environment.api_transports, data).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  updateTransport(id: string, changes) {\n    return this.http.put(`${environment.api_transports}${id}/`, changes).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  deleteTransport(id: number) {\n    return this.http.delete(`${environment.api_transports}${id}/`).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  getPotentialTransport() {\n    return this.http.get<any>(environment.api_potential_transport).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  addPotentialTransport(data: object) {\n    return this.http.post<any>(environment.api_potential_transport, data).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  updatePotentialTransport(id: string, changes) {\n    return this.http\n      .put(`${environment.api_potential_transport}${id}/`, changes)\n      .pipe(\n        tap((data) => {\n          return data;\n        })\n      );\n  }\n\n  deletePotentialTransport(id: number) {\n    return this.http\n      .delete(`${environment.api_potential_transport}${id}/`)\n      .pipe(\n        tap((data) => {\n          return data;\n        })\n      );\n  }\n\n  getMachinery() {\n    return this.http.get<any>(environment.api_source_information).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  addMachinery(data: object) {\n    return this.http.post<any>(environment.api_source_information, data).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  updateMachinery(id: string, changes) {\n    return this.http\n      .put(`${environment.api_source_information}${id}/`, changes)\n      .pipe(\n        tap((data) => {\n          return data;\n        })\n      );\n  }\n\n  deleteMachinery(id: number) {\n    return this.http.delete(`${environment.api_source_information}${id}/`).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  getMachineryPotential() {\n    return this.http.get<any>(environment.api_source_information_data).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  addMachineryPotential(data: object) {\n    return this.http\n      .post<any>(environment.api_source_information_data, data)\n      .pipe(\n        tap((data) => {\n          return data;\n        })\n      );\n  }\n\n  updateMachineryPotential(id: string, changes) {\n    return this.http\n      .put(`${environment.api_source_information_data}${id}/`, changes)\n      .pipe(\n        tap((data) => {\n          return data;\n        })\n      );\n  }\n\n  deleteMachineryPotential(id: number) {\n    return this.http\n      .delete(`${environment.api_source_information_data}${id}/`)\n      .pipe(\n        tap((data) => {\n          return data;\n        })\n      );\n  }\n\n  getTypeEnergy() {\n    return this.http.get<any>(environment.api_type_energy).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  addTypeEnergy(data: object) {\n    return this.http.post<any>(environment.api_type_energy, data).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  updateTypeEnergy(id: string, changes) {\n    return this.http.put(`${environment.api_type_energy}${id}/`, changes).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  deleteTypeEnergy(id: number) {\n    return this.http.delete(`${environment.api_type_energy}${id}/`).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  getTypeEnergyData() {\n    return this.http.get<any>(environment.api_type_energy_data).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  addTypeEnergyData(data: object) {\n    return this.http.post<any>(environment.api_type_energy_data, data).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  updateTypeEnergyData(id: string, changes) {\n    return this.http\n      .put(`${environment.api_type_energy_data}${id}/`, changes)\n      .pipe(\n        tap((data) => {\n          return data;\n        })\n      );\n  }\n\n  deleteTypeEnergyData(id: number) {\n    return this.http.delete(`${environment.api_type_energy_data}${id}/`).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MachineryAdminRoutingModule } from './machinery-admin-routing.module';\nimport { MachineryAdminComponent } from './components/machinery-admin/machinery-admin.component';\nimport { AddMachineryComponent } from './components/add-machinery/add-machinery.component';\nimport { UpdateMachineryComponent } from './components/update-machinery/update-machinery.component';\nimport { DeleteMachineryComponent } from './components/delete-machinery/delete-machinery.component';\nimport { UpdatePotentialMachineryComponent } from './components/potential/update-potential-machinery/update-potential-machinery.component';\nimport { AddPotentialMachineryComponent } from './components/potential/add-potential-machinery/add-potential-machinery.component';\nimport { DeletePotentialMachineryComponent } from './components/potential/delete-potential-machinery/delete-potential-machinery.component';\nimport { SharedModule } from '../shared/shared.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MaterialModule } from '../material/material.module';\nimport { ChartsModule } from 'ng2-charts';\n\n@NgModule({\n  declarations: [\n    MachineryAdminComponent,\n    AddMachineryComponent,\n    UpdateMachineryComponent,\n    DeleteMachineryComponent,\n    UpdatePotentialMachineryComponent,\n    AddPotentialMachineryComponent,\n    DeletePotentialMachineryComponent,\n  ],\n  imports: [\n    CommonModule,\n    MachineryAdminRoutingModule,\n    SharedModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MaterialModule,\n    ChartsModule,\n  ],\n  exports: [\n    MachineryAdminComponent,\n    AddMachineryComponent,\n    UpdateMachineryComponent,\n    DeleteMachineryComponent,\n    UpdatePotentialMachineryComponent,\n    AddPotentialMachineryComponent,\n    DeletePotentialMachineryComponent,\n  ],\n  entryComponents: [\n    AddMachineryComponent,\n    DeleteMachineryComponent,\n    UpdatePotentialMachineryComponent,\n    AddPotentialMachineryComponent,\n    DeletePotentialMachineryComponent,\n  ],\n})\nexport class MachineryAdminModule {}\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MaterialsService } from './../../../../core/services/materials/materials.service';\n\nexport interface DialogData {\n  id: number;\n}\n\n@Component({\n  selector: 'app-delete-potential-machinery',\n  templateUrl: './delete-potential-machinery.component.html',\n  styleUrls: ['./delete-potential-machinery.component.scss'],\n})\nexport class DeletePotentialMachineryComponent implements OnInit {\n  constructor(\n    private materialsService: MaterialsService,\n    public dialogRef: MatDialogRef<DeletePotentialMachineryComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData\n  ) {}\n\n  ngOnInit(): void {}\n\n  onNoClick(): void {\n    this.dialogRef.close(this.data);\n  }\n\n  deletePotential(event: Event, id: number) {\n    event.preventDefault();\n    this.materialsService.deleteMachineryPotential(id).subscribe((data) => {\n      this.onNoClick();\n    });\n  }\n}\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MaterialsService } from './../../../core/services/materials/materials.service';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\nexport interface DialogData {\n  name_source_information: string;\n}\n\n@Component({\n  selector: 'app-add-machinery',\n  templateUrl: './add-machinery.component.html',\n  styleUrls: ['./add-machinery.component.scss'],\n})\nexport class AddMachineryComponent implements OnInit {\n  form: FormGroup;\n\n  constructor(\n    private materialsService: MaterialsService,\n    private formBuilder: FormBuilder,\n    public dialogRef: MatDialogRef<AddMachineryComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData\n  ) {\n    this.buildForm();\n  }\n\n  ngOnInit(): void {}\n\n  onNoClick(): void {\n    this.dialogRef.close(this.data);\n  }\n\n  private buildForm() {\n    this.form = this.formBuilder.group({\n      name_source_information: [null, Validators.required],\n    });\n  }\n\n  addMachinery(event: Event) {\n    event.preventDefault();\n    if (this.form.valid) {\n      const machinery = this.form.value;\n      this.materialsService.addMachinery(machinery).subscribe((data) => {\n        this.onNoClick();\n      });\n    }\n  }\n}\n","\n<form [formGroup]=\"form\" (ngSubmit)=\"addScheme($event)\">\n  <div class=\"header-modal\">\n    <h1 mat-dialog-title class=\"title-standard-second-light\">\n      Agregar impactos ambientales\n    </h1>\n    <a (click)=\"onNoClick()\" class=\"close-modal\">\n      X\n    </a>\n  </div>\n\n  <div mat-dialog-content>\n    <mat-card  class=\"custom-card\">\n  \n      <mat-card-content>\n        <div class=\"Row\">\n          <div class=\"Col\">\n            <mat-form-field appearance=\"outline\">\n              <mat-select \n                placeholder=\"Potencial de impacto ambiental\" \n                formControlName=\"potential_type_id\" \n                (selectionChange)=\"potentialSelected($event.value)\" \n              >\n                <mat-option *ngFor=\"let potential of ListPotential\" [value]=\"potential.id\">\n                  {{ potential.name_complete_potential_type }}\n                </mat-option>\n              </mat-select>\n              <mat-error *ngIf=\"form.controls['potential_type_id'].hasError('required')\">\n                Potencial es un campo <strong>requerido</strong>\n              </mat-error>\n            </mat-form-field>\n          </div>\n        </div>\n      </mat-card-content>\n\n      <mat-card-content>\n        <div class=\"Row\">\n          <div class=\"Col\">\n            <h2>Unidad: {{ unit_name }}</h2>\n          </div>\n        </div>\n      </mat-card-content>\n  \n      <mat-card-content>\n        <div class=\"Row\">\n          <div class=\"Col\">\n            <mat-form-field  appearance=\"outline\" >\n              <input matInput placeholder=\"Valor\" formControlName=\"value\">\n              <mat-error *ngIf=\"form.controls['value'].hasError('required')\">\n                El valor es <strong>requerido</strong>\n              </mat-error>\n            </mat-form-field>\n          </div>\n        </div>\n      </mat-card-content>\n  \n    </mat-card>\n  </div>\n\n  <div mat-dialog-actions class=\"center\">\n    <button mat-raised-button color=\"primary\" type=\"submit\">Agregar</button>\n  </div>\n\n</form>","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MaterialsService } from './../../../../core/services/materials/materials.service';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\nexport interface DialogData {\n  id: number;\n  sourceInformarion_id: number;\n  potential_type_id: number;\n  unit_id: number;\n  value: string;\n}\n\n@Component({\n  selector: 'app-update-potential-machinery',\n  templateUrl: './update-potential-machinery.component.html',\n  styleUrls: ['./update-potential-machinery.component.scss'],\n})\nexport class UpdatePotentialMachineryComponent implements OnInit {\n  form: FormGroup;\n\n  id: string;\n\n  sourceInformarion_id: number;\n\n  units: any;\n\n  ListSchemeData: any;\n\n  ListPotential: any;\n\n  potential: any;\n\n  unit_id: number;\n\n  unit_name: string = 'Seleccione potencial de impacto ambiental';\n\n  loading: boolean = true;\n\n  constructor(\n    private materialsService: MaterialsService,\n    private formBuilder: FormBuilder,\n    public dialogRef: MatDialogRef<UpdatePotentialMachineryComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData\n  ) {\n    this.buildForm();\n    this.materialsService.getUnits().subscribe((data) => {\n      this.units = data;\n    });\n    this.materialsService.getPotentialTypes().subscribe((potential) => {\n      this.ListPotential = potential;\n    });\n  }\n\n  ngOnInit(): void {\n    this.materialsService.getMachineryPotential().subscribe((data) => {\n      const schema = data.filter(\n        (schemaSelected) => schemaSelected.id === this.data.id\n      );\n      this.id = schema[0].id;\n      this.form.patchValue(schema[0]);\n      this.potentialSelected(schema[0].potential_type_id);\n\n      if (this.id) {\n        this.loading = false;\n      }\n    });\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close(this.data);\n  }\n\n  private buildForm() {\n    this.form = this.formBuilder.group({\n      potential_type_id: [null, Validators.required],\n      value: [null, Validators.required],\n    });\n  }\n\n  updateScheme(event) {\n    event.preventDefault();\n    if (this.form.valid) {\n      const scheme = this.form.value;\n      this.materialsService\n        .updateMachineryPotential(this.id, {\n          ...scheme,\n          unit_id: this.unit_id,\n        })\n        .subscribe((newScheme) => {\n          console.log(newScheme);\n          this.onNoClick();\n        });\n    }\n  }\n\n  potentialSelected(potentialId) {\n    const potentialData = this.ListPotential.filter(\n      (data) => data.id === potentialId\n    );\n\n    const unitData = this.units.filter(\n      (data) => data.name_unit == potentialData[0].unit_potential_type\n    );\n\n    try {\n      this.unit_id = unitData[0].id;\n      this.unit_name = unitData[0].name_unit;\n    } catch (e) {\n      this.unit_id = null;\n      this.unit_name = 'No se encontró coincidencia con unidades';\n    }\n  }\n}\n","<form [formGroup]=\"form\" (ngSubmit)=\"updateMachinery($event)\">\n  <mat-card  class=\"custom-card\">\n    <mat-card-header>\n      <mat-card-title>Actualizar datos de Maquinaria</mat-card-title>\n    </mat-card-header>\n\n    <mat-card-content>\n      <div class=\"Row\">\n        <div class=\"Col\">\n          <mat-form-field  appearance=\"outline\" >\n            <input matInput placeholder=\"Nombre del transporte\" formControlName=\"name_source_information\">\n            <mat-error *ngIf=\"form.controls['name_source_information'].hasError('required')\">\n              Nombre de maquinaria es <strong>requerido</strong>\n            </mat-error>\n          </mat-form-field>\n        </div>\n      </div>\n    </mat-card-content>\n\n    <mat-card-actions>\n      <button mat-raised-button color=\"primary\" type=\"submit\">Editar Maquinaria</button>\n      <button\n        mat-button\n        class=\"yellow-button\"\n        (click)=\"goToMachineryList()\"\n      >\n        Lista de transportes\n      </button>\n    </mat-card-actions>\n\n    <h1>Administrador de potenciales de impacto ambiental</h1>\n\n    <div>\n      <button mat-button class=\"yellow-button\" (click)=\"addPotential($event)\">\n        Agregar potencial\n      </button>\n    </div>\n\n    <table mat-table [dataSource]=\"potentialList\" class=\"mat-elevation-z8\">\n\n      <ng-container matColumnDef=\"id\">\n        <th mat-header-cell *matHeaderCellDef> Id. </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.id}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"potential_type_id\">\n        <th mat-header-cell *matHeaderCellDef> Potencial de impacto ambiental </th>\n        <td mat-cell *matCellDef=\"let element\"> {{getPotential(element.potential_type_id)}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"unit_id\">\n        <th mat-header-cell *matHeaderCellDef> Unidad </th>\n        <td mat-cell *matCellDef=\"let element\"> {{getUnit(element.unit_id)}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"value\">\n        <th mat-header-cell *matHeaderCellDef> Valor </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.value}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"actions\">\n        <th mat-header-cell *matHeaderCellDef> Acciones </th>\n        <td mat-cell *matCellDef=\"let element\"> \n          <button mat-raised-button (click)=\"updatePotential($event, element)\">Editar</button>\n          <button mat-raised-button color=\"warn\" (click)=\"deletePotential($event, element.id)\">Eliminar</button>\n        </td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n\n  </mat-card>\n</form>"]}