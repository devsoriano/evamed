{"version":3,"sources":["webpack:///src/app/material-stage-update/material-stage-update-routing.module.ts","webpack:///src/app/material-stage-update/components/material-stage-update/material-stage-update.component.ts","webpack:///src/app/material-stage-update/components/intermedial/intermedial.component.html","webpack:///src/app/material-stage-update/components/intermedial/intermedial.component.ts","webpack:///src/app/material-stage-update/components/pass-step/pass-step.component.ts","webpack:///src/app/material-stage-update/components/pass-step/pass-step.component.html","webpack:///src/app/material-stage-update/material-stage-update.module.ts","webpack:///src/app/material-stage-update/components/material-stage-update/material-stage-update.component.html"],"names":["routes","path","component","MaterialStageUpdateRoutingModule","MaterialStageUpdateComponent","materialsService","projectsService","catalogsService","analisis","router","dialog","selectedOptionsRevit","selectedOptionsDynamo","selectedOptionsUsuario","panelOpenFirst","panelOpenSecond","panelOpenThird","allMaterials","SOR","SOD","SOU","IMGP","myControl","displayedColumns","getMaterials","subscribe","data","materialsList","options","EPDS","filter","res","database_from","EPIC","mexicaniuh","sort","a","b","name_material","EPiC","getMaterialSchemeProyect","listData2","map","item","project_id","parseInt","localStorage","getItem","push","countriesCatalog","catalogoPaises","getStates","catalogoEstados","getTransports","catalogoTransportesLocal","catalogoTransportesExtrangero","getProjectById","nameProject","name_project","usefulLifeCatalog","distances","distance","console","log","useful_life_id","id","vidaUtilSeleccionado","name_useful_life","vidaUtilSeleccionadoId","images","preload","filteredOptions","valueChanges","pipe","value","name","_filter","slice","selectedMaterial","showEPD","showMexican","showListEPIC","showListMaterials","sheetNames","showSearch","material","filterValue","toLowerCase","option","indexOf","array","i","length","Image","src","selectedSheet","indexSheet","ListGetSCRevit","ListGetSCDimano","origin_id","section_id","construction_system","ListSCRevit","Set","ListSCDynamo","undefined","event","x","posiciones","s","toString","l","decimalLength","numStr","substr","Number","sc","origin","stopPropagation","showMaterial","listMateriales","counterRevit","countDynamo","prevData","searchMaterial","material_id","materialData","comercial_name","trunc","quantity","replaces","transport_id_end","transport_id_origin","unit_text","description_material","city_id_origin","city_id_end","state_id_origin","distance_init","distance_end","distancia_end","dataMaterialSelected","materialSelectedDB","updateMaterialSchemeProject","material_scheme_project_id","provider_distance","distancia_1","distancia_2","reemplazos","transporte_1","transporte_2","ngOnInit","selectState","selected","getExternalDistances","typeTransport","region","catalogoCiudades","getCities","state_id","description","decription","AllData","getMaterialSchemeData","msds","msd","potential_type_id","standard_id","vidaUtil","Math","ceil","lifeTime","materialDB","materialFiltrado","returnMaterialData","registrationNumber","publicationDate","utilLife","navigateByUrl","dialogRef","open","width","afterClosed","result","getConstructionStage","cse","schemaFilter","schema","getACR","acr","getEDCP","edcp","IntermedialComponent","close","preventDefault","onNoClick","PassStepComponent","MaterialStageUpdateModule"],"mappings":"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;AAAA;;AAAA;;AAAA;;AAAA;;AAUF;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACE;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAgBF;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAEE;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAWF;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACE;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAeF;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAEE;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAWF;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACE;;AAAA;;AAAA;;AAAA;;AA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","file":"material-stage-update-material-stage-update-module-ngfactory-es5.js","sourcesContent":["import { MaterialStageUpdateComponent } from './components/material-stage-update/material-stage-update.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [{\n  path: '',\n  component: MaterialStageUpdateComponent\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class MaterialStageUpdateRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatListOption } from '@angular/material/list';\r\nimport { MaterialsService } from './../../../core/services/materials/materials.service';\r\nimport { ProjectsService } from './../../../core/services/projects/projects.service';\r\nimport { Router } from '@angular/router';\r\nimport { CatalogsService } from 'src/app/core/services/catalogs/catalogs.service';\r\nimport { FormControl } from '@angular/forms';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { AnalisisService } from 'src/app/core/services/analisis/analisis.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { IntermedialComponent } from '../intermedial/intermedial.component';\r\nimport { PassStepComponent } from '../pass-step/pass-step.component';\r\n\r\nexport interface Material {\r\n  id: number;\r\n  name_material: string;\r\n  unit_id: number;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-material-stage-update',\r\n  templateUrl: './material-stage-update.component.html',\r\n  styleUrls: ['./material-stage-update.component.scss'],\r\n})\r\nexport class MaterialStageUpdateComponent implements OnInit {\r\n  selectedSheet: any;\r\n  sheetNames: any;\r\n  contentData: any;\r\n  listData2: any;\r\n  indexSheet: number;\r\n  ListSCRevit: any;\r\n  ListSCDynamo: any;\r\n  ListSCUsuario: any;\r\n  listMateriales: any;\r\n  selectedOptionsRevit: string[] = [];\r\n  selectedOptionsDynamo: string[] = [];\r\n  selectedOptionsUsuario: string[] = [];\r\n  panelOpenFirst = false;\r\n  panelOpenSecond = false;\r\n  panelOpenThird = false;\r\n  allMaterials = [];\r\n  nameProject: string;\r\n  projectId: number;\r\n  SOR = [];\r\n  SOD = [];\r\n  SOU = [];\r\n  IMGP = [];\r\n  sectionRevit: boolean;\r\n  sectionDynamo: boolean;\r\n  selectedMaterial: boolean;\r\n  dataMaterialSelected: any;\r\n  showSearch: boolean;\r\n  catalogoTransportesExtrangero: any;\r\n  catalogoPaises: any;\r\n  catalogoCiudades: any;\r\n  catalogoEstados: any;\r\n  catalogoTransportesLocal: any;\r\n  vidaUtilSeleccionado: any;\r\n  vidaUtilSeleccionadoId: any;\r\n  dataProject: any;\r\n  materialsList: any;\r\n  showEPD: boolean;\r\n  EPDS: any;\r\n  showMaterial: boolean;\r\n  showListMaterials: boolean;\r\n  showMexican: boolean;\r\n  showListEPIC: boolean;\r\n  EPiC: any;\r\n  mexicaniuh: any;\r\n  description_material_selected: any\r\n\r\n  myControl = new FormControl();\r\n  options: Material[];\r\n  filteredOptions: Observable<Material[]>;\r\n\r\n  displayedColumns: string[] = ['Standard', 'Potencial', 'Valor', 'Unidad'];\r\n\r\n  constructor(\r\n    private materialsService: MaterialsService,\r\n    private projectsService: ProjectsService,\r\n    private catalogsService: CatalogsService,\r\n    private analisis: AnalisisService,\r\n    private router: Router,\r\n    public dialog: MatDialog\r\n  ) {\r\n    this.materialsService.getMaterials().subscribe((data) => {\r\n      this.materialsList = data;\r\n      this.options = this.materialsList;\r\n      const EPDS = data.filter((res) => res.database_from === 'EPDs');\r\n      const EPIC = data.filter((res) => res.database_from === 'EPiC');\r\n      const mexicaniuh = data.filter(\r\n        (res) => res.database_from === 'mexicaniuh'\r\n      );\r\n      this.EPDS = EPDS.sort((a, b) =>\r\n        a.name_material > b.name_material ? 1 : -1\r\n      );\r\n      this.EPiC = EPIC.sort((a, b) =>\r\n        a.name_material > b.name_material ? 1 : -1\r\n      );\r\n      this.mexicaniuh = mexicaniuh.sort((a, b) =>\r\n        a.name_material > b.name_material ? 1 : -1\r\n      );\r\n    });\r\n    this.projectsService.getMaterialSchemeProyect().subscribe((data) => {\r\n      const listData2 = [];\r\n      data.map((item) => {\r\n        if (\r\n          item.project_id ===\r\n          parseInt(localStorage.getItem('idProyectoConstrucción'), 10)\r\n        ) {\r\n          listData2.push(item);\r\n        }\r\n      });\r\n      this.listData2 = listData2;\r\n    });\r\n    this.catalogsService.countriesCatalog().subscribe((data) => {\r\n      this.catalogoPaises = data;\r\n    });\r\n    this.catalogsService.getStates().subscribe((data) => {\r\n      this.catalogoEstados = data;\r\n    });\r\n    this.catalogsService.getTransports().subscribe((data) => {\r\n      this.catalogoTransportesLocal = data;\r\n      this.catalogoTransportesExtrangero = data;\r\n    });\r\n\r\n    this.projectsService\r\n      .getProjectById(localStorage.getItem('idProyectoConstrucción'))\r\n      .subscribe((data: any) => {\r\n        this.nameProject = data.name_project;\r\n        this.catalogsService.usefulLifeCatalog().subscribe((distances) => {\r\n          distances.map((distance) => {\r\n            console.log(data.useful_life_id);\r\n            if (data.useful_life_id === distance.id) {\r\n              this.vidaUtilSeleccionado = parseInt(distance.name_useful_life);\r\n              this.vidaUtilSeleccionadoId = parseInt(distance.id);\r\n            }\r\n          });\r\n        });\r\n      });\r\n  }\r\n\r\n  ngOnInit() {\r\n    //carga de imagenes\r\n    let images = [\r\n      '../../../../assets/map/2.jpg',\r\n      '../../../../assets/map/4.jpg',\r\n      '../../../../assets/map/5.jpg',\r\n      '../../../../assets/map/6.jpg',\r\n      '../../../../assets/map/7.jpg',\r\n      '../../../../assets/map/8.jpg',\r\n      '../../../../assets/map/9.jpg',\r\n      '../../../../assets/map/10.jpg',\r\n      '../../../../assets/map/11.jpg',\r\n      '../../../../assets/map/12.jpg',\r\n      '../../../../assets/map/13.jpg',\r\n      '../../../../assets/map/14.jpg',\r\n    ];\r\n    this.preload(images);\r\n\r\n    // fragmento para autocompletado\r\n    this.filteredOptions = this.myControl.valueChanges.pipe(\r\n      startWith(''),\r\n      map((value) => (typeof value === 'string' ? value : value.name)),\r\n      map((name) => (name ? this._filter(name) : this.options.slice()))\r\n    );\r\n\r\n    this.selectedMaterial = false;\r\n    this.showEPD = false;\r\n    this.showMexican = false;\r\n    this.showListEPIC = false;\r\n    this.showListMaterials = true;\r\n\r\n    this.sheetNames = [\r\n      'Cimentación',\r\n      'Muros interiores',\r\n      'Muros exteriores',\r\n      'Pisos',\r\n      'Techos',\r\n      'Entrepiso',\r\n      'Estructura',\r\n      'Puertas',\r\n      'Ventanas',\r\n      'Inst. especiales',\r\n      'Otros',\r\n    ];\r\n\r\n    this.showSearch = false;\r\n  }\r\n\r\n  // Lógica para autocompletado\r\n  displayFn(material: Material): string {\r\n    return material && material.name_material ? material.name_material : '';\r\n  }\r\n\r\n  private _filter(name: string): Material[] {\r\n    const filterValue = name.toLowerCase();\r\n\r\n    return this.options.filter(\r\n      (option) => option.name_material.toLowerCase().indexOf(filterValue) === 0\r\n    );\r\n  }\r\n\r\n  preload(array) {\r\n    for (var i = 0; i < array.length; i++) {\r\n      this.IMGP[i] = new Image();\r\n      this.IMGP[i].src = array[i];\r\n    }\r\n  }\r\n  onGroupsChange(options: MatListOption[]) {\r\n    options.map((option) => {\r\n      this.selectedSheet = option.value;\r\n    });\r\n\r\n    this.indexSheet = this.sheetNames.indexOf(this.selectedSheet);\r\n\r\n    let ListGetSCRevit = [];\r\n    let ListGetSCDimano = [];\r\n    this.listData2.map((item) => {\r\n      if (item.origin_id === 1 && this.indexSheet + 1 === item.section_id) {\r\n        ListGetSCRevit.push(item.construction_system);\r\n      }\r\n      if (item.origin_id === 2 && this.indexSheet + 1 === item.section_id) {\r\n        ListGetSCDimano.push(item.construction_system);\r\n      }\r\n    });\r\n\r\n    this.ListSCRevit = [...new Set(ListGetSCRevit)];\r\n    this.ListSCDynamo = [...new Set(ListGetSCDimano)];\r\n\r\n    let i;\r\n    for (i = 0; i <= this.sheetNames.length; i++) {\r\n      if (this.indexSheet === i && this.SOR !== undefined) {\r\n        this.selectedOptionsRevit = this.SOR[i];\r\n      }\r\n      if (this.indexSheet === i && this.SOD !== undefined) {\r\n        this.selectedOptionsDynamo = this.SOD[i];\r\n      }\r\n      // this.indexSheet === i && this.SOU !== undefined ? this.selectedOptionsUsuario = this.SOU[i] : this.selectedOptionsUsuario;\r\n    }\r\n  }\r\n\r\n  onNgModelChangeRevit(event) {\r\n    let i;\r\n    for (i = 0; i <= this.sheetNames.length; i++) {\r\n      if (this.indexSheet === i) {\r\n        this.SOR[i] = this.selectedOptionsRevit;\r\n      }\r\n    }\r\n  }\r\n\r\n  onNgModelChangeDynamo(event) {\r\n    let i;\r\n    for (i = 0; i <= this.sheetNames.length; i++) {\r\n      if (this.indexSheet === i) {\r\n        this.SOD[i] = this.selectedOptionsDynamo;\r\n      }\r\n    }\r\n  }\r\n\r\n  onNgModelChangeUser(event) {\r\n    //  let i;\r\n    //  for ( i = 0; i <= this.sheetNames.length; i++ ) {\r\n    //    this.indexSheet === i ? this.SOU[i] = this.selectedOptionsUsuario : this.SOU[i];\r\n    //  }\r\n  }\r\n\r\n  onNgModelChangeMaterial(event) {\r\n    // console.log(this.selectedMaterial);\r\n  }\r\n\r\n  updateStepOne() {\r\n    //Lógica de editar\r\n    console.log('editar------------------');\r\n    console.log(this.listData2);\r\n    this.listData2.map((item) => console.log(item));\r\n  }\r\n\r\n  trunc(x, posiciones = 0) {\r\n    var s = x.toString();\r\n    var l = s.length;\r\n    var decimalLength = s.indexOf('.') + 1;\r\n    var numStr = s.substr(0, decimalLength + posiciones);\r\n    return Number(numStr);\r\n  }\r\n\r\n  showMaterials(event, sc, origin) {\r\n    event.stopPropagation();\r\n    this.selectedMaterial = false;\r\n    this.showSearch = false;\r\n    this.showMaterial = false;\r\n    // let originId = 1;\r\n    // origin === 'revit-user' ? originId = 1 : originId = 2;\r\n    const listMateriales = [];\r\n    let counterRevit = 1;\r\n    let countDynamo = 1;\r\n\r\n    this.listData2.map((item) => {\r\n      const prevData = [];\r\n      if (item.construction_system === sc && origin === 'revit-user') {\r\n        if (item.origin_id === 1 || item.origin_id === 3) {\r\n          this.materialsService\r\n            .searchMaterial(item.material_id)\r\n            .subscribe((material) => {\r\n              material.map((materialData) => {\r\n                if (\r\n                  item.material_id === materialData.id &&\r\n                  item.section_id === this.indexSheet + 1\r\n                ) {\r\n                  console.log('Material Data');\r\n                  // console.log(materialData);\r\n                  console.log(item);\r\n                  prevData['comercial_name'] = item.comercial_name;\r\n                  prevData['name_material'] = materialData.name_material;\r\n                  prevData['quantity'] = this.trunc(item.quantity, 2);\r\n                  prevData['origin_id'] = item.origin_id;\r\n                  prevData['material_id'] = item.material_id;\r\n                  prevData['reemplazos'] = item.replaces;\r\n                  prevData['transport_id_end'] = item.transport_id_end;\r\n                  prevData['transport_id_origin'] = item.transport_id_origin;\r\n                  prevData['vidaUtil'] = this.vidaUtilSeleccionado;\r\n                  prevData['unit_text'] = item.unit_text;\r\n                  prevData['description_material'] = item.description_material;\r\n                  prevData['material_scheme_project_id'] = item.id;\r\n                  prevData['construction_system'] = item.construction_system;\r\n                  prevData['project_id'] = item.project_id;\r\n                  prevData['section_id'] = item.section_id;\r\n                  prevData['city_id_origin'] = item.city_id_origin;\r\n                  prevData['city_id_end'] = item.city_id_end;\r\n                  prevData['state_id_origin'] = item.state_id_origin;\r\n                  prevData['transporte_1'] = item.transport_id_origin;\r\n                  prevData['transporte_2'] = item.transport_id_end;\r\n                  prevData['distancia_1'] = parseInt(item.distance_init);\r\n                  prevData['distancia_2'] = parseInt(item.distance_end);\r\n                  prevData['key'] = counterRevit++;\r\n                  listMateriales.push(prevData);\r\n                }\r\n              });\r\n            });\r\n        }\r\n      }\r\n      if (item.construction_system === sc && origin === 'dynamo') {\r\n        if (item.origin_id === 2) {\r\n          this.materialsService\r\n            .searchMaterial(item.material_id)\r\n            .subscribe((material) => {\r\n              material.map((materialData) => {\r\n                if (\r\n                  item.material_id === materialData.id &&\r\n                  item.section_id === this.indexSheet + 1\r\n                ) {\r\n                  console.log('Material Data');\r\n                  // console.log(materialData);\r\n                  console.log(item);\r\n                  prevData['comercial_name'] = item.comercial_name;\r\n                  prevData['name_material'] = materialData.name_material;\r\n                  prevData['quantity'] = this.trunc(item.quantity, 2);\r\n                  prevData['origin_id'] = item.origin_id;\r\n                  prevData['material_id'] = item.material_id;\r\n                  prevData['reemplazos'] = item.replaces;\r\n                  prevData['transport_id_end'] = item.transport_id_end;\r\n                  prevData['transport_id_origin'] = item.transport_id_origin;\r\n                  prevData['vidaUtil'] = this.vidaUtilSeleccionado;\r\n                  prevData['unit_text'] = item.unit_text;\r\n                  prevData['description_material'] = item.description_material;\r\n                  prevData['material_scheme_project_id'] = item.id;\r\n                  prevData['construction_system'] = item.construction_system;\r\n                  prevData['project_id'] = item.project_id;\r\n                  prevData['section_id'] = item.section_id;\r\n                  prevData['city_id_end'] = item.city_id_end;\r\n                  prevData['city_id_origin'] = item.city_id_origin;\r\n                  prevData['state_id_origin'] = item.state_id_origin;\r\n                  prevData['transporte_1'] = item.transport_id_origin;\r\n                  prevData['transporte_2'] = item.transport_id_end;\r\n                  prevData['distancia_1'] = parseInt(item.distance_init);\r\n                  prevData['distancia_2'] = parseInt(item.distancia_end);\r\n                  prevData['key'] = countDynamo++;\r\n\r\n                  listMateriales.push(prevData);\r\n                }\r\n              });\r\n            });\r\n        }\r\n      }\r\n    });\r\n    // Asign list materials\r\n    this.listMateriales = listMateriales;\r\n  }\r\n\r\n  updateMaterialSelected(dataMaterialSelected) {\r\n    console.log('información a actualizar!!!');\r\n\r\n    this.materialsService\r\n      .searchMaterial(dataMaterialSelected.materialSelectedDB)\r\n      .subscribe((material) => {\r\n        material.map((materialData) => {\r\n          if (\r\n            materialData.name_material ===\r\n            dataMaterialSelected.materialSelectedDB\r\n          ) {\r\n            console.log('IF DEFINITIVO!!!!');\r\n            console.log(dataMaterialSelected);\r\n            console.log(materialData);\r\n            this.projectsService\r\n              .updateMaterialSchemeProject(\r\n                dataMaterialSelected.material_scheme_project_id,\r\n                {\r\n                  comercial_name: dataMaterialSelected.comercial_name,\r\n                  construction_system: dataMaterialSelected.construction_system, // en duro\r\n                  provider_distance: 0,\r\n                  quantity: dataMaterialSelected.quantity,\r\n                  value: null,\r\n                  distance_init: parseInt(dataMaterialSelected.distancia_1, 10),\r\n                  distance_end: parseInt(dataMaterialSelected.distancia_2, 10),\r\n                  replaces: dataMaterialSelected.reemplazos,\r\n                  unit_text: dataMaterialSelected.unit_text,\r\n                  description_material:\r\n                    dataMaterialSelected.description_material,\r\n                  material_id: materialData.id,\r\n                  project_id: dataMaterialSelected.project_id,\r\n                  origin_id: parseInt(dataMaterialSelected.origin_id),\r\n                  section_id: dataMaterialSelected.section_id,\r\n                  state_id_origin: dataMaterialSelected.state_id_origin,\r\n                  city_id_origin: 2,\r\n                  city_id_end: 1,\r\n                  transport_id_origin: parseInt(\r\n                    dataMaterialSelected.transporte_1\r\n                  ),\r\n                  transport_id_end: parseInt(dataMaterialSelected.transporte_2),\r\n                }\r\n              )\r\n              .subscribe((data) => {\r\n                console.log(\r\n                  'Update data-----------------------------------------------'\r\n                );\r\n                console.log(data);\r\n                this.ngOnInit();\r\n              });\r\n          }\r\n        });\r\n      });\r\n  }\r\n\r\n  removeMaterial(event, sc, origin) {\r\n    event.stopPropagation();\r\n    console.log('entra a remove materials');\r\n  }\r\n\r\n  restoreMaterial(event, sc, origin) {\r\n    event.stopPropagation();\r\n    console.log('entra a restore material');\r\n  }\r\n\r\n  duplicateMaterial(event, sc, origin) {\r\n    event.stopPropagation();\r\n    console.log('entra a restore material');\r\n  }\r\n\r\n  onSelectedMaterial(event, value) {\r\n    this.selectState(value.selected[0]?.value.value.state_id_origin);\r\n    this.dataMaterialSelected = value.selected[0]?.value.value;\r\n    this.dataMaterialSelected.materialSelectedDB =\r\n      this.dataMaterialSelected.name_material;\r\n    this.selectedMaterial = true;\r\n  }\r\n\r\n  selectCountry(id) {\r\n    this.catalogsService.getExternalDistances().subscribe((data) => {\r\n      data.map((item) => {\r\n        let typeTransport = 'mar';\r\n        if (id === item.id + 1) {\r\n          switch (item.region) {\r\n            case 'PACIFICO' || 'ATLANTICO':\r\n              typeTransport = 'mar';\r\n              break;\r\n            case 'NORTE' || 'SUR':\r\n              typeTransport = 'terreste';\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n\r\n          this.catalogoTransportesExtrangero = [];\r\n          if (typeTransport === 'terreste') {\r\n            this.catalogsService.getTransports().subscribe((data) => {\r\n              data.map((item) => {\r\n                if (item.id >= 3) {\r\n                  this.catalogoTransportesExtrangero.push(item);\r\n                }\r\n              });\r\n            });\r\n          } else {\r\n            this.catalogsService.getTransports().subscribe((data) => {\r\n              data.map((item) => {\r\n                if (item.id < 3) {\r\n                  this.catalogoTransportesExtrangero.push(item);\r\n                }\r\n              });\r\n            });\r\n          }\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  selectState(id) {\r\n    this.catalogoCiudades = [];\r\n    this.catalogsService.getCities().subscribe((data) => {\r\n      data.map((item) => {\r\n        if (item.state_id === id) {\r\n          this.catalogoCiudades.push(item);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  showDetailEPD(event, material) {\r\n    console.log('Show------------------------------');\r\n    event.stopPropagation();\r\n    this.showEPD = true;\r\n    this.dataMaterialSelected.name = material.name_material;\r\n    this.dataMaterialSelected.id = material.id;\r\n    this.dataMaterialSelected.description = material.decription;\r\n    this.dataMaterialSelected.AllData = material;\r\n    this.analisis.getMaterialSchemeData().subscribe((msds) => {\r\n      let msd = msds.filter((msd) => msd.material_id === material.id);\r\n      msd = msd.sort((a, b) => {\r\n        if (a.potential_type_id === b.potential_type_id) {\r\n          return a.standard_id - b.standard_id;\r\n        }\r\n        return a.potential_type_id > b.potential_type_id ? 1 : -1;\r\n      });\r\n      this.dataMaterialSelected.msd = msd;\r\n    });\r\n  }\r\n\r\n  changeReplaces(vidaUtil) {\r\n    let replaces = 0;\r\n    replaces = parseInt(this.vidaUtilSeleccionado, 10) / parseInt(vidaUtil, 10);\r\n    this.dataMaterialSelected.reemplazos = Math.ceil(replaces) - 1;\r\n  }\r\n\r\n  changeLifeTime(reemplazos) {\r\n    let lifeTime = this.vidaUtilSeleccionado;\r\n    lifeTime =\r\n      parseInt(this.vidaUtilSeleccionado, 10) / (parseInt(reemplazos, 10) + 1);\r\n    this.dataMaterialSelected.vidaUtil = lifeTime;\r\n  }\r\n\r\n  onReturnListMaterials() {\r\n    this.selectedMaterial = false;\r\n    this.showSearch = false;\r\n    this.showMaterial = false;\r\n  }\r\n\r\n  returnMaterialData() {\r\n    if (this.dataMaterialSelected.materialDB !== undefined) {\r\n      this.dataMaterialSelected.materialSelectedDB =\r\n        this.dataMaterialSelected.materialDB.name_material;\r\n    }\r\n    this.selectedMaterial = true;\r\n    this.showSearch = false;\r\n  }\r\n\r\n  addElement() {\r\n    console.log('add element');\r\n  }\r\n\r\n  addSC() {\r\n    console.log('add SC');\r\n  }\r\n\r\n  goToSearchInfo() {\r\n    this.showSearch = true;\r\n    this.selectedMaterial = false;\r\n    this.showMaterial = false;\r\n    this.showEPD = false;\r\n  }\r\n\r\n  returnListEpds() {\r\n    this.showEPD = false;\r\n  }\r\n\r\n  onSelectMaterial(event, material) {\r\n    event.stopPropagation();\r\n    console.log('onselected material');\r\n    this.dataMaterialSelected.materialSelectedDB = material;\r\n    if (this.dataMaterialSelected.materialFiltrado !== undefined) {\r\n      this.dataMaterialSelected.materialFiltrado = undefined;\r\n    }\r\n    console.log(this.dataMaterialSelected.materialSelectedDB);\r\n    this.returnMaterialData();\r\n  }\r\n\r\n  showDetailMaterial(event, material) {\r\n    event.stopPropagation();\r\n    this.showListEPIC = false;\r\n    this.showMaterial = true;\r\n    this.dataMaterialSelected.name = material.name_material;\r\n    this.dataMaterialSelected.description = material.description;\r\n    this.dataMaterialSelected.registrationNumber = 'S-P-01927';\r\n    this.dataMaterialSelected.publicationDate = '202-04-01';\r\n    this.dataMaterialSelected.utilLife = '2025-04-01';\r\n\r\n    this.analisis.getMaterialSchemeData().subscribe((msds) => {\r\n      let msd = msds.filter((msd) => msd.material_id === material.id);\r\n      msd = msd.sort((a, b) => {\r\n        if (a.potential_type_id === b.potential_type_id) {\r\n          return a.standard_id - b.standard_id;\r\n        }\r\n        return a.potential_type_id > b.potential_type_id ? 1 : -1;\r\n      });\r\n      this.dataMaterialSelected.msd = msd;\r\n    });\r\n  }\r\n\r\n  showEPIC() {\r\n    this.showListMaterials = false;\r\n    this.showListEPIC = true;\r\n  }\r\n\r\n  showMexicanIuh() {\r\n    this.showListMaterials = false;\r\n    this.showListEPIC = false;\r\n    this.showMexican = true;\r\n  }\r\n\r\n  returnDatabaseList() {\r\n    this.showListMaterials = true;\r\n  }\r\n\r\n  returnListDB() {\r\n    this.showMaterial = false;\r\n  }\r\n\r\n  goToMaterialStage() {\r\n    this.router.navigateByUrl('material-stage');\r\n  }\r\n\r\n  goToConstructionStage() {\r\n    const dialogRef = this.dialog.open(PassStepComponent, {\r\n      width: '680px',\r\n      data: {},\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if (result.continue) {\r\n        this.materialsService.getConstructionStage().subscribe((cse) => {\r\n          const schemaFilter = cse.filter(\r\n            (schema) =>\r\n              schema.project_id == localStorage.getItem('idProyectoConstrucción')\r\n          );\r\n          console.log(schemaFilter);\r\n    \r\n          if (schemaFilter.length === 0) {\r\n            this.router.navigateByUrl('construction-stage');\r\n          } else {\r\n            this.router.navigateByUrl('construction-stage-update');\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  goToUsageStage() {\r\n    const dialogRef = this.dialog.open(PassStepComponent, {\r\n      width: '680px',\r\n      data: {},\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if (result.continue) {\r\n        this.materialsService.getACR().subscribe((acr) => {\r\n          const schemaFilter = acr.filter(\r\n            (schema) =>\r\n              schema.project_id == localStorage.getItem('idProyectoConstrucción')\r\n          );\r\n    \r\n          if (schemaFilter.length === 0) {\r\n            this.router.navigateByUrl('usage-stage');\r\n          } else {\r\n            this.router.navigateByUrl('usage-stage-update');\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  goToEndLife() {\r\n    const dialogRef = this.dialog.open(PassStepComponent, {\r\n      width: '680px',\r\n      data: {},\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if (result.continue) {\r\n        this.materialsService.getEDCP().subscribe((edcp) => {\r\n          const schemaFilter = edcp.filter(\r\n            (schema) =>\r\n              schema.project_id == localStorage.getItem('idProyectoConstrucción')\r\n          );\r\n    \r\n          if (schemaFilter.length === 0) {\r\n            this.router.navigateByUrl('end-life-stage');\r\n          } else {\r\n            this.router.navigateByUrl('update-end-life');\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  continue() {\r\n    this.materialsService.getConstructionStage().subscribe((cse) => {\r\n      const schemaFilter = cse.filter(\r\n        (schema) =>\r\n          schema.project_id == localStorage.getItem('idProyectoConstrucción')\r\n      );\r\n      console.log(schemaFilter);\r\n\r\n      if (schemaFilter.length === 0) {\r\n        this.router.navigateByUrl('construction-stage');\r\n      } else {\r\n        this.router.navigateByUrl('construction-stage-update');\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div class=\"header-modal\">\n  <h1 mat-dialog-title class=\"title-standard-second-light\">\n    Asegurese de guardar los cambios antes de continuar\n  </h1>\n  <a (click)=\"onNoClick()\" class=\"close-modal\">\n    X\n  </a>\n</div>\n\n<div mat-dialog-actions class=\"center\">\n  <button mat-raised-button color=\"primary\" (click)=\"continueStep($event)\">Etapa de construcción</button>\n</div>","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { MaterialsService } from './../../../core/services/materials/materials.service';\n\n@Component({\n  selector: 'app-intermedial',\n  templateUrl: './intermedial.component.html',\n  styleUrls: ['./intermedial.component.scss'],\n})\nexport class IntermedialComponent implements OnInit {\n  constructor(\n    private router: Router,\n    private materialsService: MaterialsService,\n    public dialogRef: MatDialogRef<IntermedialComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: {}\n  ) {}\n\n  ngOnInit(): void {}\n\n  onNoClick() {\n    this.dialogRef.close(this.data);\n  }\n\n  continueStep(event: Event) {\n    event.preventDefault();\n    this.materialsService.getConstructionStage().subscribe((cse) => {\n      const schemaFilter = cse.filter(\n        (schema) =>\n          schema.project_id == localStorage.getItem('idProyectoConstrucción')\n      );\n      console.log(schemaFilter);\n\n      if (schemaFilter.length === 0) {\n        this.router.navigateByUrl('construction-stage');\n      } else {\n        this.router.navigateByUrl('construction-stage-update');\n      }\n    });\n    this.onNoClick();\n  }\n}\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-pass-step',\n  templateUrl: './pass-step.component.html',\n  styleUrls: ['./pass-step.component.scss'],\n})\nexport class PassStepComponent implements OnInit {\n  constructor(\n    public dialogRef: MatDialogRef<PassStepComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: { continue: boolean  }\n  ) {}\n\n  ngOnInit(): void {}\n\n  onNoClick() {\n    this.data.continue = false;\n    this.dialogRef.close(this.data);\n  }\n\n\n  continueOnly(event: Event) {\n    event.preventDefault();\n    this.data.continue = true;\n    this.dialogRef.close(this.data);\n  }\n}\n","<div class=\"header-modal\">\n  <h1 mat-dialog-title class=\"title-standard-second-light\">\n    Asegurese de guardar los cambios antes de continuar\n  </h1>\n  <a (click)=\"onNoClick()\" class=\"close-modal\">\n    X\n  </a>\n</div>\n\n<div mat-dialog-actions class=\"center\">\n  <button mat-raised-button color=\"primary\" (click)=\"continueOnly($event)\">Continuar</button>\n  <button mat-raised-button color=\"primary\" (click)=\"onNoClick()\">Cancelar</button>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MaterialStageUpdateRoutingModule } from './material-stage-update-routing.module';\nimport { MaterialStageUpdateComponent } from './components/material-stage-update/material-stage-update.component';\nimport { SharedModule } from '../shared/shared.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MaterialModule } from './../material/material.module';\nimport { IntermedialComponent } from './components/intermedial/intermedial.component';\nimport { PassStepComponent } from './components/pass-step/pass-step.component';\n\n@NgModule({\n  declarations: [MaterialStageUpdateComponent, IntermedialComponent, PassStepComponent],\n  imports: [\n    CommonModule,\n    MaterialStageUpdateRoutingModule,\n    SharedModule,\n    FormsModule,\n    MaterialModule,\n    ReactiveFormsModule,\n  ],\n  exports: [MaterialStageUpdateComponent, IntermedialComponent, PassStepComponent],\n  entryComponents: [IntermedialComponent, PassStepComponent],\n})\nexport class MaterialStageUpdateModule {}\n","<nav class=\"nav-redirect\">\r\n  <h2 class=\"proyecto-title\">{{ nameProject }}</h2>\r\n  <a href=\"/\" class=\"a-redirect\">\r\n    < Regresar a proyectos </a>\r\n</nav>\r\n<!--Principal container-->\r\n<div class=\"principal-container container-total\">\r\n  <!--Navigation steps-->\r\n  <nav class=\"nav-steps\">\r\n    <div class=\"mdl-stepper-horizontal-alternative\">\r\n      <div class=\"mdl-stepper-step step-one-selected\">\r\n        <div class=\"mdl-stepper-circle\"></div>\r\n        <div class=\"mdl-stepper-tag aux-yellow\">Producción</div>\r\n        <div class=\"mdl-stepper-bar-left\"></div>\r\n        <div class=\"mdl-stepper-bar-right\"></div>\r\n      </div>\r\n      <div class=\"mdl-stepper-step step-two\">\r\n        <div class=\"mdl-stepper-circle\" (click)=\"goToConstructionStage()\"></div>\r\n        <div class=\"mdl-stepper-tag\">Construcción</div>\r\n        <div class=\"mdl-stepper-bar-left\"></div>\r\n        <div class=\"mdl-stepper-bar-right\"></div>\r\n      </div>\r\n      <div class=\"mdl-stepper-step step-three\">\r\n        <div class=\"mdl-stepper-circle\" (click)=\"goToUsageStage()\"></div>\r\n        <div class=\"mdl-stepper-tag\">Uso</div>\r\n        <div class=\"mdl-stepper-bar-left\"></div>\r\n        <div class=\"mdl-stepper-bar-right\"></div>\r\n      </div>\r\n      <div class=\"mdl-stepper-step step-four\">\r\n        <div class=\"mdl-stepper-circle\" (click)=\"goToEndLife()\"></div>\r\n        <div class=\"mdl-stepper-tag\">Fin de vida</div>\r\n        <div class=\"mdl-stepper-bar-left\"></div>\r\n        <div class=\"mdl-stepper-bar-right\"></div>\r\n      </div>\r\n    </div>\r\n  </nav>\r\n  <!--Container actions of step 2-->\r\n  <section class=\"container-actions\">\r\n    <!--Section sheets-->\r\n    <section class=\"container-sheets\">\r\n      <div class=\"tab-title-sections\">\r\n        <p>Elementos</p>\r\n        <button mat-icon-button (click)=\"addElement()\">\r\n          <mat-icon>add_circle</mat-icon>\r\n        </button>\r\n      </div>\r\n      <div class=\"container-image\" [ngSwitch]=\"selectedSheet\">\r\n        <img *ngSwitchCase=\"'Cimentación'\" src=\"../../../../assets/map/2.jpg\" class=\"image-element\" alt=\"\" />\r\n        <img *ngSwitchCase=\"'Muros interiores'\" src=\"../../../../assets/map/8.jpg\" class=\"image-element\" alt=\"\" />\r\n        <img *ngSwitchCase=\"'Muros exteriores'\" src=\"../../../../assets/map/9.jpg\" class=\"image-element\" alt=\"\" />\r\n        <img *ngSwitchCase=\"'Pisos'\" src=\"../../../../assets/map/7.jpg\" class=\"image-element\" alt=\"\" />\r\n        <img *ngSwitchCase=\"'Techos'\" src=\"../../../../assets/map/5.jpg\" class=\"image-element\" alt=\"\" />\r\n        <img *ngSwitchCase=\"'Entrepiso'\" src=\"../../../../assets/map/7.jpg\" class=\"image-element\" alt=\"\" />\r\n        <img *ngSwitchCase=\"'Estructura'\" src=\"../../../../assets/map/11.jpg\" class=\"image-element\" alt=\"\" />\r\n        <img *ngSwitchCase=\"'Puertas'\" src=\"../../../../assets/map/6.jpg\" class=\"image-element\" alt=\"\" />\r\n        <img *ngSwitchCase=\"'Ventanas'\" src=\"../../../../assets/map/4.jpg\" class=\"image-element\" alt=\"\" />\r\n        <img *ngSwitchCase=\"'Inst. especiales'\" src=\"../../../../assets/map/13.jpg\" class=\"image-element\" alt=\"\" />\r\n        <img *ngSwitchCase=\"'Otros'\" src=\"../../../../assets/map/14.jpg\" class=\"image-element\" alt=\"\" />\r\n        <img *ngSwitchDefault src=\"../../../../assets/map/12.jpg\" class=\"image-element\" alt=\"\" />\r\n      </div>\r\n      <div class=\"list-elements\">\r\n        <mat-selection-list #sheets [multiple]=\"false\"\r\n          (selectionChange)=\"onGroupsChange(sheets.selectedOptions.selected)\">\r\n          <mat-list-option *ngFor=\"let sheet of sheetNames\" [value]=\"sheet\" class=\"item-yellow-extend\">\r\n            {{ sheet }}\r\n          </mat-list-option>\r\n        </mat-selection-list>\r\n      </div>\r\n    </section>\r\n\r\n    <!--Section construction systems-->\r\n    <section class=\"container-systems\">\r\n      <div class=\"tab-title-sections\">\r\n        <p>Seleccione el sistema constructivo base a aplicar</p>\r\n        <button mat-icon-button>\r\n          <mat-icon>add_circle</mat-icon>\r\n        </button>\r\n      </div>\r\n      <mat-accordion *ngIf=\"indexSheet !== undefined\">\r\n        <mat-expansion-panel (opened)=\"panelOpenFirst = true\" (closed)=\"panelOpenFirst = false\" [expanded]=\"true\">\r\n          <!--List Revit or template-->\r\n          <mat-expansion-panel-header>\r\n            <mat-panel-title>\r\n              Registrados en REVIT y/o Template EVAMED\r\n            </mat-panel-title>\r\n          </mat-expansion-panel-header>\r\n          <mat-selection-list #sistemas_constructivos [(ngModel)]=\"selectedOptionsRevit\"\r\n            (ngModelChange)=\"onNgModelChangeRevit($event)\">\r\n            <mat-list-option *ngFor=\"let sc of ListSCRevit\" [value]=\"sc\" [disableRipple]=\"true\"\r\n              checkboxPosition=\"before\" class=\"item-list-option\" [selected]=\"true\">\r\n              <div style=\"\r\n                  display: flex;\r\n                  justify-content: space-between;\r\n                  align-items: center;\r\n                \">\r\n                <div style=\"display: flex; align-items: center; width: 65.8%\"\r\n                  (click)=\"showMaterials($event, sc, 'revit-user')\" class=\"item-by-list\">\r\n                  <div style=\"display: flex; flex-direction: column\">\r\n                    {{ sc }}\r\n                  </div>\r\n                </div>\r\n                <div class=\"container-options\">\r\n                  <button class=\"custom-button-icon\" mat-icon-button (click)=\"removeMaterial($event, sc, 'revit-user')\">\r\n                    <mat-icon class=\"custom-icon\">restore_from_trash</mat-icon>\r\n                  </button>\r\n                  <button class=\"custom-button-icon\" mat-icon-button\r\n                    (click)=\"restoreMaterial($event, sc, 'revit-user')\">\r\n                    <mat-icon class=\"custom-icon\">restore_page</mat-icon>\r\n                  </button>\r\n                  <button class=\"custom-button-icon\" mat-icon-button\r\n                    (click)=\"duplicateMaterial($event, sc, 'revit-user')\">\r\n                    <mat-icon class=\"custom-icon\">control_point_duplicate</mat-icon>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </mat-list-option>\r\n          </mat-selection-list>\r\n        </mat-expansion-panel>\r\n      </mat-accordion>\r\n\r\n      <mat-accordion *ngIf=\"indexSheet !== undefined\">\r\n        <mat-expansion-panel (opened)=\"panelOpenSecond = true\" (closed)=\"panelOpenSecond = false\" [expanded]=\"true\">\r\n          <mat-expansion-panel-header>\r\n            <mat-panel-title> Opciones EVAMED </mat-panel-title>\r\n          </mat-expansion-panel-header>\r\n\r\n          <mat-selection-list #sistemas_constructivos [(ngModel)]=\"selectedOptionsDynamo\"\r\n            (ngModelChange)=\"onNgModelChangeDynamo($event)\">\r\n            <mat-list-option *ngFor=\"let sc of ListSCDynamo\" [value]=\"sc\" [disableRipple]=\"true\"\r\n              checkboxPosition=\"before\" class=\"item-list-option\" [selected]=\"true\">\r\n              <div style=\"\r\n                  display: flex;\r\n                  justify-content: space-between;\r\n                  align-items: center;\r\n                \">\r\n                <div style=\"display: flex; align-items: center; width: 65.8%\"\r\n                  (click)=\"showMaterials($event, sc, 'dynamo')\" class=\"item-by-list\">\r\n                  <div style=\"display: flex; flex-direction: column\">\r\n                    {{ sc }}\r\n                  </div>\r\n                </div>\r\n                <div class=\"container-options\">\r\n                  <button class=\"custom-button-icon\" mat-icon-button (click)=\"removeMaterial($event, sc, 'dynamo')\">\r\n                    <mat-icon class=\"custom-icon\">restore_from_trash</mat-icon>\r\n                  </button>\r\n                  <button class=\"custom-button-icon\" mat-icon-button (click)=\"restoreMaterial($event, sc, 'dynamo')\">\r\n                    <mat-icon class=\"custom-icon\">restore_page</mat-icon>\r\n                  </button>\r\n                  <button class=\"custom-button-icon\" mat-icon-button (click)=\"duplicateMaterial($event, sc, 'dynamo')\">\r\n                    <mat-icon class=\"custom-icon\">control_point_duplicate</mat-icon>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </mat-list-option>\r\n          </mat-selection-list>\r\n        </mat-expansion-panel>\r\n      </mat-accordion>\r\n\r\n      <mat-accordion *ngIf=\"indexSheet !== undefined\">\r\n        <mat-expansion-panel (opened)=\"panelOpenThird = true\" (closed)=\"panelOpenThird = false\" [expanded]=\"true\">\r\n          <mat-expansion-panel-header>\r\n            <mat-panel-title> Creados por el usuario </mat-panel-title>\r\n          </mat-expansion-panel-header>\r\n          <mat-selection-list #sistemas_constructivos [(ngModel)]=\"selectedOptionsUsuario\"\r\n            (ngModelChange)=\"onNgModelChangeUser($event)\">\r\n            <mat-list-option *ngFor=\"let sc of ListSCUsuario\" [value]=\"sc\" [disableRipple]=\"true\"\r\n              checkboxPosition=\"before\">\r\n              <div style=\"\r\n                  display: flex;\r\n                  justify-content: space-between;\r\n                  align-items: center;\r\n                \">\r\n                <div style=\"display: flex; align-items: center; width: 65.8%\"\r\n                  (click)=\"showMaterials($event, sc, 'user')\">\r\n                  <div style=\"display: flex; flex-direction: column\">\r\n                    {{ sc }}\r\n                  </div>\r\n                </div>\r\n                <div>\r\n                  <button class=\"custom-button-icon\" mat-icon-button (click)=\"removeMaterial($event, sc, 'user')\">\r\n                    <mat-icon class=\"custom-icon\">restore_from_trash</mat-icon>\r\n                  </button>\r\n                  <button class=\"custom-button-icon\" mat-icon-button (click)=\"restoreMaterial($event, sc, 'user')\">\r\n                    <mat-icon class=\"custom-icon\">restore_page</mat-icon>\r\n                  </button>\r\n                  <button class=\"custom-button-icon\" mat-icon-button (click)=\"duplicateMaterial($event, sc, 'user')\">\r\n                    <mat-icon class=\"custom-icon\">control_point_duplicate</mat-icon>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </mat-list-option>\r\n          </mat-selection-list>\r\n        </mat-expansion-panel>\r\n      </mat-accordion>\r\n    </section>\r\n\r\n    <!--Materials section-->\r\n    <section class=\"container-details\">\r\n      <div class=\"tab-title-sections\">\r\n        <p>Materiales</p>\r\n        <button mat-icon-button>\r\n          <mat-icon>add_circle</mat-icon>\r\n        </button>\r\n      </div>\r\n\r\n      <!--Contenedor de condicionales-->\r\n      <div class=\"conditional-section\">\r\n        <!--Listado de materiales-->\r\n        <mat-selection-list #materials [multiple]=\"false\" (selectionChange)=\"\r\n            onSelectedMaterial($event, materials.selectedOptions)\r\n          \" *ngIf=\"selectedMaterial === false && showSearch === false\">\r\n          <mat-list-option *ngFor=\"let material of listMateriales | keyvalue\" [value]=\"material\">\r\n            <div class=\"table-materials\">\r\n              <div class=\"col-key\">{{ material.value.key }}.</div>\r\n              <div class=\"col-material\">\r\n                {{ material.value.name_material }}\r\n              </div>\r\n              <div class=\"col-cantidad\">\r\n                {{ material.value.quantity | number: '1.2-2' }}\r\n              </div>\r\n              <div class=\"col-unidad\">\r\n                {{ material.value.unit_text }}\r\n              </div>\r\n              <div class=\"col-icon\">\r\n                <div class=\"col-unidad\">\r\n                  <mat-icon class=\"custom-icon\" style=\"color:#a8d024\">check_circle</mat-icon>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </mat-list-option>\r\n        </mat-selection-list>\r\n\r\n        <!--Form material-->\r\n        <div class=\"container-details\" *ngIf=\"selectedMaterial === true\">\r\n          <!-- <a class=\"return\" (click)=\"onReturnListMaterials()\"> < </a> -->\r\n          <div class=\"header-form\">\r\n            <span class=\"return\" (click)=\"onReturnListMaterials()\">\r\n              < </span>\r\n                <span class=\"title\">Edición de material</span>\r\n          </div>\r\n          <div class=\"form-update-material\">\r\n            <div class=\"Row\">\r\n              <div class=\"Col\">\r\n                <div class=\"label-general\">Nombre comercial</div>\r\n                <div>\r\n                  <mat-form-field>\r\n                    <textarea class=\"input-general-renuew\" [(ngModel)]=\"dataMaterialSelected.comercial_name\" matInput\r\n                      type=\"text\">\r\n                    </textarea>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"Row\">\r\n              <div class=\"Col select-middle\">\r\n                <div class=\"label-general\">Cantidad</div>\r\n                <div>\r\n                  <mat-form-field>\r\n                    <input class=\"input-general-renuew width-90\" [(ngModel)]=\"dataMaterialSelected.quantity\" matInput\r\n                      type=\"text\" />\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"Col select-middle\">\r\n                <div class=\"label-general\">Unidad</div>\r\n                <div>\r\n                  <mat-form-field>\r\n                    <input class=\"input-general-renuew width-90\" [(ngModel)]=\"dataMaterialSelected.unit_text\" matInput\r\n                      type=\"text\" />\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"Row\">\r\n              <div class=\"Col\">\r\n                <div class=\"label-general\">Comentarios</div>\r\n                <div>\r\n                  <mat-form-field>\r\n                    <textarea class=\"input-general-renuew\" [(ngModel)]=\"dataMaterialSelected.description_material\"\r\n                      matInput type=\"text\">\r\n                    </textarea>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"Row\">\r\n              <div class=\"Col\">\r\n                <div class=\"subtitle\">Transporte 1</div>\r\n              </div>\r\n            </div>\r\n            <div class=\"Row\">\r\n              <div class=\"Col select-middle\">\r\n                <div class=\"label-general\">Tipo de transporte</div>\r\n                <div>\r\n                  <mat-form-field appearance=\"outline\" class=\"select-general\">\r\n                    <mat-label>Seleccione una opción</mat-label>\r\n                    <mat-select [(ngModel)]=\"dataMaterialSelected.transporte_1\">\r\n                      <mat-option *ngFor=\"let transporte of catalogoTransportesLocal\" [value]=\"transporte.id\">\r\n                        {{ transporte.name_transport }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"Col select-middle\">\r\n                <div class=\"label-general\">distancia (KM)</div>\r\n                <div>\r\n                  <mat-form-field>\r\n                    <input class=\"input-general-renuew width-90\" [(ngModel)]=\"dataMaterialSelected.distancia_1\" matInput\r\n                      type=\"text\" />\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"Row\">\r\n              <div class=\"Col\">\r\n                <div class=\"subtitle\">Transporte 2</div>\r\n              </div>\r\n            </div>\r\n            <div class=\"Row\">\r\n              <div class=\"Col select-middle\">\r\n                <div class=\"label-general\">Tipo de transporte</div>\r\n                <div>\r\n                  <mat-form-field appearance=\"outline\" class=\"select-general\">\r\n                    <mat-label>Seleccione una opción</mat-label>\r\n                    <mat-select [(ngModel)]=\"dataMaterialSelected.transporte_2\">\r\n                      <mat-option *ngFor=\"let transporte of catalogoTransportesExtrangero\" [value]=\"transporte.id\">\r\n                        {{ transporte.name_transport }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"Col select-middle\">\r\n                <div class=\"label-general\">distancia (KM)</div>\r\n                <div>\r\n                  <mat-form-field>\r\n                    <input class=\"input-general-renuew width-90\" [(ngModel)]=\"dataMaterialSelected.distancia_2\" matInput\r\n                      type=\"text\" />\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"Row\">\r\n              <div class=\"Col\">\r\n                <div class=\"subtitle\">Tiempo de vida del material</div>\r\n              </div>\r\n            </div>\r\n            <div class=\"Row\">\r\n              <div class=\"Col select-middle\">\r\n                <div class=\"label-general\">Tiempo de vida</div>\r\n                <div>\r\n                  <mat-form-field>\r\n                    <input class=\"input-general-renuew width-90\" [(ngModel)]=\"dataMaterialSelected.vidaUtil\"\r\n                      (ngModelChange)=\"\r\n                        changeReplaces(dataMaterialSelected.vidaUtil)\r\n                      \" matInput type=\"text\" />\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"Col select-middle\">\r\n                <div class=\"label-general\">Reemplazos</div>\r\n                <div>\r\n                  <mat-form-field>\r\n                    <input class=\"input-general-renuew width-90\" [(ngModel)]=\"dataMaterialSelected.reemplazos\" matInput\r\n                      (ngModelChange)=\"\r\n                        changeLifeTime(dataMaterialSelected.reemplazos)\r\n                      \" type=\"text\" />\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"Row\">\r\n              <div class=\"Col\">\r\n                <div class=\"subtitle\">\r\n                  Fuente de información de impacto ambiental\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"Row\">\r\n              <div class=\"Col\">\r\n                <div class=\"button-read\" (click)=\"goToSearchInfo()\">\r\n                  {{ dataMaterialSelected.materialSelectedDB }}\r\n                  <mat-icon>edit</mat-icon>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"Row\">\r\n              <div class=\"Col\">\r\n                <button mat-button class=\"yellow-button custom-continue custom-update\"\r\n                  (click)=\"updateMaterialSelected(this.dataMaterialSelected)\">\r\n                  Actualizar\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!--Form search -->\r\n        <div class=\"container-details\" *ngIf=\"showSearch === true\">\r\n          <div class=\"form-search\">\r\n            <div class=\"Row\">\r\n              <div class=\"Col\">\r\n                <span class=\"return\" (click)=\"returnMaterialData()\">\r\n                  < </span>\r\n                    <h3>Realiza tu búsqueda</h3>\r\n              </div>\r\n            </div>\r\n            <div class=\"Row\">\r\n              <div class=\"Col\">\r\n                <form class=\"example-form\">\r\n                  <mat-form-field class=\"example-full-width\">\r\n                    <input class=\"input-general-renuew\" type=\"text\" matInput [formControl]=\"myControl\"\r\n                      [matAutocomplete]=\"auto\" [(ngModel)]=\"dataMaterialSelected.materialDB\" />\r\n                    <mat-autocomplete #auto=\"matAutocomplete\" [displayWith]=\"displayFn\">\r\n                      <mat-option *ngFor=\"let option of filteredOptions | async\" [value]=\"option\">\r\n                        {{ option.name_material }}\r\n                      </mat-option>\r\n                    </mat-autocomplete>\r\n                  </mat-form-field>\r\n                </form>\r\n              </div>\r\n            </div>\r\n            <div class=\"Row\">\r\n              <div class=\"Col\">\r\n                <mat-tab-group mat-align-tabs=\"start\">\r\n                  <mat-tab label=\"EPD's\">\r\n                    <div *ngIf=\"!showEPD\">\r\n                      <div *ngFor=\"let item of EPDS\">\r\n                        <div (click)=\"showDetailEPD($event, item)\" class=\"item-material\">\r\n                          {{ item.name_material }}\r\n                          <img src=\"../../../../assets/logos/EPD.png\" class=\"logoList\" alt=\"\" />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div class=\"material-target\" *ngIf=\"showEPD\">\r\n                      <span class=\"return\" (click)=\"returnListEpds()\">\r\n                        < </span>\r\n                          <h2 class=\"title\">{{ dataMaterialSelected.name }}</h2>\r\n                          <p>\r\n                            <button mat-button class=\"yellow-button custom-continue\" (click)=\"\r\n                            onSelectMaterial($event, dataMaterialSelected.name)\r\n                          \">\r\n                              Seleccionar\r\n                            </button>\r\n                          </p>\r\n\r\n                          <p class=\"description\">\r\n                            {{ dataMaterialSelected.AllData.description }}\r\n                          </p>\r\n\r\n                          <table mat-table [dataSource]=\"this.dataMaterialSelected.msd\"\r\n                            class=\"mat-elevation-z8 data-info\">\r\n                            <ng-container matColumnDef=\"Standard\">\r\n                              <th mat-header-cell *matHeaderCellDef>Impacto</th>\r\n                              <td mat-cell *matCellDef=\"let element\">\r\n                                <ng-container *ngIf=\"element.standard_id === 1\">\r\n                                  A1 - A3\r\n                                </ng-container>\r\n                                <ng-container *ngIf=\"element.standard_id === 2\">\r\n                                  A1\r\n                                </ng-container>\r\n                                <ng-container *ngIf=\"element.standard_id === 3\">\r\n                                  A2\r\n                                </ng-container>\r\n                                <ng-container *ngIf=\"element.standard_id === 4\">\r\n                                  A3\r\n                                </ng-container>\r\n                              </td>\r\n                            </ng-container>\r\n\r\n                            <ng-container matColumnDef=\"Potencial\">\r\n                              <th mat-header-cell *matHeaderCellDef>\r\n                                Categoría de impacto ambiental\r\n                              </th>\r\n                              <td mat-cell *matCellDef=\"let element\">\r\n                                <ng-container *ngIf=\"element.potential_type_id === 1\">\r\n                                  Agotamiento de Recursos Abióticos Minerales\r\n                                </ng-container>\r\n                                <ng-container *ngIf=\"element.potential_type_id === 2\">\r\n                                  Agotamiento de Recursos Abióticos Fósiles\r\n                                </ng-container>\r\n                                <ng-container *ngIf=\"element.potential_type_id === 3\">\r\n                                  Calentamiento Global\r\n                                </ng-container>\r\n                                <ng-container *ngIf=\"element.potential_type_id === 4\">\r\n                                  Agotamiento de la Capa de Ozono\r\n                                </ng-container>\r\n                                <ng-container *ngIf=\"element.potential_type_id === 5\">\r\n                                  Oxidación Fotoquímica\r\n                                </ng-container>\r\n                                <ng-container *ngIf=\"element.potential_type_id === 6\">\r\n                                  Acidificación\r\n                                </ng-container>\r\n                                <ng-container *ngIf=\"element.potential_type_id === 7\">\r\n                                  Eutrofización\r\n                                </ng-container>\r\n                                <ng-container *ngIf=\"element.potential_type_id === 8\">\r\n                                  Escasez de agua\r\n                                </ng-container>\r\n                                <ng-container *ngIf=\"element.potential_type_id === 9\">\r\n                                  Formación de Ozono Troposférico\r\n                                </ng-container>\r\n                                <ng-container *ngIf=\"element.potential_type_id === 10\">\r\n                                  Agotamiento de recursos energéticos no renovables\r\n                                </ng-container>\r\n                                <ng-container *ngIf=\"element.potential_type_id === 11\">\r\n                                  Human toxicity\r\n                                </ng-container>\r\n                                <ng-container *ngIf=\"element.potential_type_id === 12\">\r\n                                  Fresh water aquatic ecotox\r\n                                </ng-container>\r\n                                <ng-container *ngIf=\"element.potential_type_id === 13\">\r\n                                  Marine aquatic ecotoxicity\r\n                                </ng-container>\r\n                                <ng-container *ngIf=\"element.potential_type_id === 14\">\r\n                                  Terrestrial ecotoxicity\r\n                                </ng-container>\r\n                              </td>\r\n                            </ng-container>\r\n\r\n                            <ng-container matColumnDef=\"Valor\">\r\n                              <th mat-header-cell *matHeaderCellDef>Potencial</th>\r\n                              <td mat-cell *matCellDef=\"let element\">\r\n                                {{ element.value | slice: 0:9 }}\r\n                              </td>\r\n                            </ng-container>\r\n\r\n                            <ng-container matColumnDef=\"Unidad\">\r\n                              <th mat-header-cell *matHeaderCellDef>Unidad</th>\r\n                              <td mat-cell *matCellDef=\"let element\">\r\n                                <ng-container *ngIf=\"element.unit_id === 1\">\r\n                                  Pz\r\n                                </ng-container>\r\n                                <ng-container *ngIf=\"element.unit_id === 2\">\r\n                                  Kg\r\n                                </ng-container>\r\n                                <ng-container *ngIf=\"element.unit_id === 3\">\r\n                                  m³\r\n                                </ng-container>\r\n                                <ng-container *ngIf=\"element.unit_id === 4\">\r\n                                  Ton\r\n                                </ng-container>\r\n                                <ng-container *ngIf=\"element.unit_id === 5\">\r\n                                  m²\r\n                                </ng-container>\r\n                                <ng-container *ngIf=\"element.unit_id === 6\">\r\n                                  kg SB eq\r\n                                </ng-container>\r\n                                <ng-container *ngIf=\"element.unit_id === 7\">\r\n                                  m\r\n                                </ng-container>\r\n                                <ng-container *ngIf=\"element.unit_id === 8\">\r\n                                  m3 eq\r\n                                </ng-container>\r\n                                <ng-container *ngIf=\"element.unit_id === 9\">\r\n                                  kg CFC-11 eq\r\n                                </ng-container>\r\n                                <ng-container *ngIf=\"element.unit_id === 10\">\r\n                                  kg Nox, kg O3, o kg etano\r\n                                </ng-container>\r\n                                <ng-container *ngIf=\"element.unit_id === 11\">\r\n                                  kg C2H4\r\n                                </ng-container>\r\n                                <ng-container *ngIf=\"element.unit_id === 12\">\r\n                                  MJ\r\n                                </ng-container>\r\n                                <ng-container *ngIf=\"element.unit_id === 13\">\r\n                                  kg N eq\r\n                                </ng-container>\r\n                                <ng-container *ngIf=\"element.unit_id === 14\">\r\n                                  kg SO2 eq\r\n                                </ng-container>\r\n                                <ng-container *ngIf=\"element.unit_id === 15\">\r\n                                  Pza\r\n                                </ng-container>\r\n                                <ng-container *ngIf=\"element.unit_id === 16\">\r\n                                  kg PO4 eq\r\n                                </ng-container>\r\n                                <ng-container *ngIf=\"element.unit_id === 17\">\r\n                                  kg CO2 eq\r\n                                </ng-container>\r\n                                <ng-container *ngIf=\"element.unit_id === 18\">\r\n                                  kg 1,4-DB eq\r\n                                </ng-container>\r\n                                <ng-container *ngIf=\"element.unit_id === 19\">\r\n                                  kg\r\n                                </ng-container>\r\n                              </td>\r\n                            </ng-container>\r\n\r\n                            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                            <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n                          </table>\r\n                    </div>\r\n                  </mat-tab>\r\n\r\n                  <mat-tab label=\"Base de datos\">\r\n                    <div *ngIf=\"showListMaterials\">\r\n                      <div class=\"item-material\" (click)=\"showMexicanIuh()\">\r\n                        mexicaniuh\r\n                      </div>\r\n                      <div class=\"item-material\" (click)=\"showEPIC()\">EPiC</div>\r\n                    </div>\r\n\r\n                    <div *ngIf=\"showListEPIC\">\r\n                      <span class=\"return\" (click)=\"returnDatabaseList()\">\r\n                        < </span>\r\n                          <div *ngFor=\"let item of EPiC\">\r\n                            <div (click)=\"showDetailMaterial($event, item)\" class=\"item-material\">\r\n                              {{ item.name_material }} -\r\n                              <span class=\"epic\">EPiC</span>\r\n                            </div>\r\n                          </div>\r\n                    </div>\r\n\r\n                    <div *ngIf=\"showMexican && !showMaterial && !showListMaterials\">\r\n                      <span class=\"return\" (click)=\"returnDatabaseList()\">\r\n                        < </span>\r\n                          <div *ngFor=\"let item of mexicaniuh\">\r\n                            <div (click)=\"showDetailMaterial($event, item)\" class=\"item-material\">\r\n                              {{ item.name_material }} -\r\n                              <span class=\"epic\">mexicaniuh</span>\r\n                            </div>\r\n                          </div>\r\n                    </div>\r\n\r\n                    <div class=\"material-target\" *ngIf=\"showMaterial\">\r\n                      <span class=\"return\" (click)=\"returnListDB()\">\r\n                        < </span>\r\n                          <h2 class=\"title\">{{ dataMaterialSelected.name }}</h2>\r\n                          <button mat-button class=\"yellow-button custom-continue\" (click)=\"\r\n                          onSelectMaterial($event, dataMaterialSelected.name)\r\n                        \">\r\n                            Seleccionar\r\n                          </button>\r\n                          <p class=\"description\">\r\n                            {{ dataMaterialSelected.description }}\r\n                          </p>\r\n                          <table mat-table [dataSource]=\"this.dataMaterialSelected.msd\"\r\n                            class=\"mat-elevation-z8 data-info\">\r\n                            <ng-container matColumnDef=\"Standard\">\r\n                              <th mat-header-cell *matHeaderCellDef>Impacto</th>\r\n                              <td mat-cell *matCellDef=\"let element\">\r\n                                <ng-container *ngIf=\"element.standard_id === 1\">\r\n                                  A1 - A3\r\n                                </ng-container>\r\n                                <ng-container *ngIf=\"element.standard_id === 2\">\r\n                                  A1\r\n                                </ng-container>\r\n                                <ng-container *ngIf=\"element.standard_id === 3\">\r\n                                  A2\r\n                                </ng-container>\r\n                                <ng-container *ngIf=\"element.standard_id === 4\">\r\n                                  A3\r\n                                </ng-container>\r\n                              </td>\r\n                            </ng-container>\r\n\r\n                            <ng-container matColumnDef=\"Potencial\">\r\n                              <th mat-header-cell *matHeaderCellDef>\r\n                                Categoría de impacto ambiental\r\n                              </th>\r\n                              <td mat-cell *matCellDef=\"let element\">\r\n                                <ng-container *ngIf=\"element.potential_type_id === 1\">\r\n                                  Agotamiento de Recursos Abióticos Minerales\r\n                                </ng-container>\r\n                                <ng-container *ngIf=\"element.potential_type_id === 2\">\r\n                                  Agotamiento de Recursos Abióticos Fósiles\r\n                                </ng-container>\r\n                                <ng-container *ngIf=\"element.potential_type_id === 3\">\r\n                                  Calentamiento Global\r\n                                </ng-container>\r\n                                <ng-container *ngIf=\"element.potential_type_id === 4\">\r\n                                  Agotamiento de la Capa de Ozono\r\n                                </ng-container>\r\n                                <ng-container *ngIf=\"element.potential_type_id === 5\">\r\n                                  Oxidación Fotoquímica\r\n                                </ng-container>\r\n                                <ng-container *ngIf=\"element.potential_type_id === 6\">\r\n                                  Acidificación\r\n                                </ng-container>\r\n                                <ng-container *ngIf=\"element.potential_type_id === 7\">\r\n                                  Eutrofización\r\n                                </ng-container>\r\n                                <ng-container *ngIf=\"element.potential_type_id === 8\">\r\n                                  Escasez de agua\r\n                                </ng-container>\r\n                                <ng-container *ngIf=\"element.potential_type_id === 9\">\r\n                                  Formación de Ozono Troposférico\r\n                                </ng-container>\r\n                                <ng-container *ngIf=\"element.potential_type_id === 10\">\r\n                                  Agotamiento de recursos energéticos no renovables\r\n                                </ng-container>\r\n                                <ng-container *ngIf=\"element.potential_type_id === 11\">\r\n                                  Human toxicity\r\n                                </ng-container>\r\n                                <ng-container *ngIf=\"element.potential_type_id === 12\">\r\n                                  Fresh water aquatic ecotox\r\n                                </ng-container>\r\n                                <ng-container *ngIf=\"element.potential_type_id === 13\">\r\n                                  Marine aquatic ecotoxicity\r\n                                </ng-container>\r\n                                <ng-container *ngIf=\"element.potential_type_id === 14\">\r\n                                  Terrestrial ecotoxicity\r\n                                </ng-container>\r\n                              </td>\r\n                            </ng-container>\r\n\r\n                            <ng-container matColumnDef=\"Valor\">\r\n                              <th mat-header-cell *matHeaderCellDef>Potencial</th>\r\n                              <td mat-cell *matCellDef=\"let element\">\r\n                                {{ element.value | slice: 0:9 }}\r\n                              </td>\r\n                            </ng-container>\r\n\r\n                            <ng-container matColumnDef=\"Unidad\">\r\n                              <th mat-header-cell *matHeaderCellDef>Unidad</th>\r\n                              <td mat-cell *matCellDef=\"let element\">\r\n                                <ng-container *ngIf=\"element.unit_id === 1\">\r\n                                  Pz\r\n                                </ng-container>\r\n                                <ng-container *ngIf=\"element.unit_id === 2\">\r\n                                  Kg\r\n                                </ng-container>\r\n                                <ng-container *ngIf=\"element.unit_id === 3\">\r\n                                  m³\r\n                                </ng-container>\r\n                                <ng-container *ngIf=\"element.unit_id === 4\">\r\n                                  Ton\r\n                                </ng-container>\r\n                                <ng-container *ngIf=\"element.unit_id === 5\">\r\n                                  m²\r\n                                </ng-container>\r\n                                <ng-container *ngIf=\"element.unit_id === 6\">\r\n                                  kg SB eq\r\n                                </ng-container>\r\n                                <ng-container *ngIf=\"element.unit_id === 7\">\r\n                                  m\r\n                                </ng-container>\r\n                                <ng-container *ngIf=\"element.unit_id === 8\">\r\n                                  m3 eq\r\n                                </ng-container>\r\n                                <ng-container *ngIf=\"element.unit_id === 9\">\r\n                                  kg CFC-11 eq\r\n                                </ng-container>\r\n                                <ng-container *ngIf=\"element.unit_id === 10\">\r\n                                  kg Nox, kg O3, o kg etano\r\n                                </ng-container>\r\n                                <ng-container *ngIf=\"element.unit_id === 11\">\r\n                                  kg C2H4\r\n                                </ng-container>\r\n                                <ng-container *ngIf=\"element.unit_id === 12\">\r\n                                  MJ\r\n                                </ng-container>\r\n                                <ng-container *ngIf=\"element.unit_id === 13\">\r\n                                  kg N eq\r\n                                </ng-container>\r\n                                <ng-container *ngIf=\"element.unit_id === 14\">\r\n                                  kg SO2 eq\r\n                                </ng-container>\r\n                                <ng-container *ngIf=\"element.unit_id === 15\">\r\n                                  Pza\r\n                                </ng-container>\r\n                                <ng-container *ngIf=\"element.unit_id === 16\">\r\n                                  kg PO4 eq\r\n                                </ng-container>\r\n                                <ng-container *ngIf=\"element.unit_id === 17\">\r\n                                  kg CO2 eq\r\n                                </ng-container>\r\n                                <ng-container *ngIf=\"element.unit_id === 18\">\r\n                                  kg 1,4-DB eq\r\n                                </ng-container>\r\n                                <ng-container *ngIf=\"element.unit_id === 19\">\r\n                                  kg\r\n                                </ng-container>\r\n                              </td>\r\n                            </ng-container>\r\n\r\n                            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                            <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n                          </table>\r\n                    </div>\r\n                  </mat-tab>\r\n                </mat-tab-group>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  </section>\r\n</div>\r\n\r\n<!--Section continue-->\r\n<div class=\"section-continue\">\r\n  <button mat-button class=\"yellow-button custom-continue\" (click)=\"continue()\">\r\n    Continuar\r\n  </button>\r\n</div>"]}