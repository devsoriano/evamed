{"version":3,"sources":["webpack:///src/app/materials-admin/components/add-data-scheme/add-data-scheme.component.ts","webpack:///src/app/materials-admin/components/delete-material/delete-material.component.html","webpack:///src/app/materials-admin/components/delete-material/delete-material.component.ts","webpack:///src/app/materials-admin/components/update-material/update-material.component.html","webpack:///src/app/materials-admin/components/materials-admin/materials-admin.component.ts","webpack:///src/app/materials-admin/components/update-material/update-material.component.ts","webpack:///src/app/materials-admin/components/materials-admin/materials-admin.component.html","webpack:///src/app/materials-admin/components/delete-data-scheme/delete-data-scheme.component.ts","webpack:///node_modules/@angular/material/card/index.d.ts.MatCard.html","webpack:///node_modules/@angular/material/card/index.d.ts.MatCardHeader.html","webpack:///node_modules/@angular/material/card/index.d.ts.MatCardTitleGroup.html","webpack:///src/app/materials-admin/components/update-data-scheme/update-data-scheme.component.ts","webpack:///src/app/core/services/materials/materials.service.ts","webpack:///src/app/materials-admin/materials-admin.module.ts","webpack:///src/app/core/services/analisis/analisis.service.ts","webpack:///src/app/materials-admin/components/add-material/add-material.component.html","webpack:///src/app/materials-admin/components/add-data-scheme/add-data-scheme.component.html","webpack:///src/app/materials-admin/components/delete-data-scheme/delete-data-scheme.component.html","webpack:///src/app/materials-admin/components/add-material/add-material.component.ts","webpack:///src/app/materials-admin/materials-admin-routing.module.ts","webpack:///src/app/materials-admin/components/update-data-scheme/update-data-scheme.component.html"],"names":["AddDataSchemeComponent","materialsService","analisisService","formBuilder","dialogRef","data","unit_name","console","log","material_id","buildForm","getUnits","subscribe","units","getStandards","ListStandards","getPotentialTypes","ListPotential","close","form","group","potential_type_id","required","value","event","preventDefault","valid","material","addMaterialSchemeData","standard_id","unit_id","newScheme","onNoClick","potentialId","potentialData","filter","id","unitData","name_unit","unit_potential_type","e","DeleteMaterialComponent","deleteMaterial","MaterialsAdminComponent","router","dialog","displayedColumns","filters","name","getMaterials","materialList","inmutableList","getDbMaterials","map","db","push","navigateByUrl","name_material","open","width","afterClosed","result","ngOnInit","x","y","localeCompare","ignorePunctuation","slice","sort","SortArray","a","b","res","database_from","filterSelected","filterAlpha","filterOrderMinorId","filterOrderMayorId","filterByDataBase","UpdateMaterialComponent","activatedRoute","ListDatabases","params","materialFiltered","parseInt","patchValue","ListSchemeData","getMaterialSchemeData","msds","msd","description","updateMaterial","newProduct","navigate","potentialSelected","potencial","name_complete_potential_type","standard","name_standard","unit","elem","DeleteDataSchemeComponent","deleteMaterialSchemeData","UpdateDataSchemeComponent","loading","schema","schemaSelected","scheme","updateMaterialSchemeData","MaterialsService","http","get","api_scheme_project","pipe","api_construction_stage","api_annual_consumption_required","api_electricity_consumption_deconstructive_process","api_materials","post","api_material_scheme_data","changes","put","schemeData","api_units","api_potetnial_types","api_standards","api_db_material","api_transports","api_potential_transport","api_source_information","api_source_information_data","api_type_energy","api_type_energy_data","MaterialsAdminModule","AnalisisService","proyectos","api_useful_life","api_electricity_consumption_data","api_sections","api_conversions","AddMaterialComponent","fb","addMaterialForm","addMaterial","goToMaterialList","routes","path","component","MaterialsAdminRoutingModule"],"mappings":"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","file":"materials-admin-materials-admin-module-ngfactory-es5.js","sourcesContent":["import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MaterialsService } from './../../../core/services/materials/materials.service';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { AnalisisService } from '../../../core/services/analisis/analisis.service';\n\nexport interface DialogData {\n  id: number;\n  material_id: number;\n  potential_type_id: number;\n  standard_id: number;\n  unit_id: number;\n  value: string;\n}\n\n@Component({\n  selector: 'app-add-data-scheme',\n  templateUrl: './add-data-scheme.component.html',\n  styleUrls: ['./add-data-scheme.component.scss'],\n})\nexport class AddDataSchemeComponent implements OnInit {\n  form: FormGroup;\n\n  id: string;\n\n  material_id: number;\n\n  units: any;\n\n  ListSchemeData: any;\n\n  ListPotential: any;\n\n  ListStandards: any;\n\n  potential: any;\n\n  standard_id: number;\n\n  unit_id: number;\n\n  unit_name: string = 'Seleccione potencial de impacto ambiental';\n\n  constructor(\n    private materialsService: MaterialsService,\n    private analisisService: AnalisisService,\n    private formBuilder: FormBuilder,\n    public dialogRef: MatDialogRef<AddDataSchemeComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData\n  ) {\n    console.log('entra a este proceso!!!!!');\n    this.material_id = data.material_id;\n    this.buildForm();\n    this.materialsService.getUnits().subscribe((data) => {\n      this.units = data;\n    });\n    this.materialsService.getStandards().subscribe((data) => {\n      this.ListStandards = data;\n    });\n    this.materialsService.getPotentialTypes().subscribe((data) => {\n      this.ListPotential = data;\n    });\n  }\n\n  ngOnInit(): void {}\n\n  onNoClick() {\n    console.log('entra al onNoClick');\n    this.dialogRef.close(this.data);\n  }\n\n  private buildForm() {\n    console.log('entra al build form');\n    this.form = this.formBuilder.group({\n      potential_type_id: [null, Validators.required],\n      value: [null, Validators.required],\n    });\n  }\n\n  addScheme(event) {\n    console.log('addScheme');\n    event.preventDefault();\n    if (this.form.valid) {\n      const material = this.form.value;\n\n      this.analisisService\n        .addMaterialSchemeData({\n          ...material,\n          material_id: this.material_id,\n          standard_id: this.standard_id,\n          unit_id: this.unit_id,\n        })\n        .subscribe((newScheme) => {\n          this.onNoClick();\n        });\n    }\n  }\n\n  potentialSelected(potentialId) {\n    console.log('entra al potentialSelected');\n    const potentialData = this.ListPotential.filter(\n      (data) => data.id === potentialId\n    );\n\n    const unitData = this.units.filter(\n      (data) => data.name_unit == potentialData[0].unit_potential_type\n    );\n\n    try {\n      this.unit_id = unitData[0].id;\n      this.unit_name = unitData[0].name_unit;\n    } catch (e) {\n      this.unit_id = null;\n      this.unit_name = 'No se encontró coincidencia con unidades';\n    }\n  }\n}\n","<div class=\"header-modal\">\n  <h1 mat-dialog-title class=\"title-standard-second-light\">\n    Eliminar Material\n  </h1>\n  <a (click)=\"onNoClick()\" class=\"close-modal\">\n    X\n  </a>\n</div>\n\n<div mat-dialog-content>\n  <h1>¿Desea eliminar el material {{data.name_material}}?</h1>\n</div>\n\n<div mat-dialog-actions class=\"center\">\n  <button mat-raised-button color=\"primary\" (click)=\"deleteMaterial($event, data.id)\">Eliminar</button>\n</div>","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MaterialsService } from './../../../core/services/materials/materials.service';\n\nexport interface DialogData {\n  id: number;\n  name_material: string;\n}\n\n@Component({\n  selector: 'app-delete-transport',\n  templateUrl: './delete-material.component.html',\n  styleUrls: ['./delete-material.component.scss'],\n})\nexport class DeleteMaterialComponent implements OnInit {\n  constructor(\n    private materialsService: MaterialsService,\n    public dialogRef: MatDialogRef<DeleteMaterialComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData\n  ) {}\n\n  ngOnInit(): void {\n    console.log('On Init');\n    console.log(this.data);\n  }\n\n  onNoClick() {\n    this.dialogRef.close(this.data);\n  }\n\n  deleteMaterial(event: Event, id: number) {\n    event.preventDefault();\n    this.materialsService.deleteMaterial(id).subscribe(() => {\n      this.onNoClick();\n    });\n  }\n}\n","<form [formGroup]=\"form\" (ngSubmit)=\"saveMaterial($event)\">\n  <mat-card  class=\"custom-card\">\n    <mat-card-header>\n      <mat-card-title>Actualizar datos del material</mat-card-title>\n    </mat-card-header>\n    <mat-card-content>\n      <div class=\"Row\">\n        <div class=\"Col\">\n          <mat-form-field  appearance=\"outline\" >\n            <input matInput placeholder=\"Nombre\" formControlName=\"name_material\">\n            <mat-error *ngIf=\"form.controls['name_material'].hasError('required')\">\n              El nombre es <strong>requerido</strong>\n            </mat-error>\n          </mat-form-field>\n        </div>\n      </div>\n    </mat-card-content>\n    <mat-card-content>\n      <div class=\"Row\">\n        <div class=\"Col\">\n          <mat-form-field appearance=\"outline\">\n            <mat-select placeholder=\"Base de datos\" formControlName=\"database_from\">\n              <mat-option *ngFor=\"let data of ListDatabases\" [value]=\"data.name\">\n                {{ data.name }}\n              </mat-option>\n            </mat-select>\n            <mat-error *ngIf=\"form.controls['database_from'].hasError('required')\">\n              Base de datos es <strong>requiredo</strong>\n            </mat-error>\n          </mat-form-field>\n        </div>\n      </div>\n    </mat-card-content>\n    <mat-card-content>\n      <div class=\"Row\">\n        <div class=\"Col\">\n          <mat-form-field  appearance=\"outline\" >\n            <textarea matInput placeholder=\"Descripción\" formControlName=\"description\"></textarea>\n          </mat-form-field>\n        </div>\n      </div>\n    </mat-card-content>\n    <mat-card-content>\n      <div class=\"Row\">\n        <div class=\"Col\">\n          <mat-form-field appearance=\"outline\">\n            <mat-select placeholder=\"Unidad\" formControlName=\"unit_id\">\n              <mat-option *ngFor=\"let data of units\" [value]=\"data.id\">\n                {{ data.name_unit }}\n              </mat-option>\n            </mat-select>\n            <mat-error *ngIf=\"form.controls['unit_id'].hasError('required')\">\n              Unidad es un campo <strong>requerido</strong>\n            </mat-error>\n          </mat-form-field>\n        </div>\n      </div>\n    </mat-card-content> \n    <mat-card-actions>\n      <button mat-raised-button color=\"primary\" type=\"submit\">Editar Material</button>\n      <button\n      mat-raised-button\n        color=\"primary\"\n        (click)=\"goToAddScheme($event)\"\n      >\n        Agregar impactos ambientales\n      </button>\n      <button\n        mat-button\n        class=\"yellow-button\"\n        (click)=\"goToMaterialList()\"\n      >\n        Lista de materiales\n      </button>\n    </mat-card-actions>\n    <mat-card-content>\n\n      <table mat-table [dataSource]=\"ListSchemeData\" class=\"mat-elevation-z8\">\n\n        <ng-container matColumnDef=\"id\">\n          <th mat-header-cell *matHeaderCellDef> Id. </th>\n          <td mat-cell *matCellDef=\"let element\"> {{element.id}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"potential_type_id\">\n          <th mat-header-cell *matHeaderCellDef> Potencial </th>\n          <td mat-cell *matCellDef=\"let element\"> {{getPotential(element.potential_type_id)}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"standard_id\">\n          <th mat-header-cell *matHeaderCellDef> Estandar </th>\n          <td mat-cell *matCellDef=\"let element\"> {{getStandard(element.standard_id)}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"unit_id\">\n          <th mat-header-cell *matHeaderCellDef> Unidad </th>\n          <td mat-cell *matCellDef=\"let element\"> {{getUnit(element.unit_id)}} </td>\n        </ng-container>\n        \n        <ng-container matColumnDef=\"value\">\n          <th mat-header-cell *matHeaderCellDef> Valor </th>\n          <td mat-cell *matCellDef=\"let element\"> {{element.value}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"actions\">\n          <th mat-header-cell *matHeaderCellDef> Acciones </th>\n          <td mat-cell *matCellDef=\"let element\"> \n            <a \n              mat-raised-button \n              (click)=\"openModalSchema($event, element)\"\n            >Editar\n          </a>\n            <button mat-raised-button color=\"warn\" (click)=\"deleteSchema($event, element.id)\">Eliminar</button>\n          </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n      </table>\n\n    </mat-card-content>\n  </mat-card>\n</form>","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { MaterialsService } from './../../../core/services/materials/materials.service';\nimport { DeleteMaterialComponent } from '../delete-material/delete-material.component';\n\nexport interface Material {\n  id: number;\n  database_from: string;\n  description: string;\n  name_material: string;\n  unit_id: number;\n}\n\n@Component({\n  selector: 'app-materials-admin',\n  templateUrl: './materials-admin.component.html',\n  styleUrls: ['./materials-admin.component.scss'],\n})\nexport class MaterialsAdminComponent implements OnInit {\n  materialList: Material[];\n  displayedColumns: string[] = [\n    'id',\n    'database_from',\n    'name_material',\n    'description',\n    'unit_id',\n    'actions',\n  ];\n\n  filterSelected: any;\n\n  filters: any = [\n    {\n      id: 'a',\n      name: 'orden alfabético',\n    },\n    {\n      id: 'b',\n      name: 'más antiguo',\n    },\n    {\n      id: 'c',\n      name: 'más reciente',\n    },\n  ];\n\n  alpha: any;\n\n  orderMayorId: any;\n\n  orderMinorId: any;\n\n  inmutableList: any;\n\n  constructor(\n    private router: Router,\n    public dialog: MatDialog,\n    private materialsService: MaterialsService\n  ) {}\n\n  ngOnInit(): void {\n    this.materialsService.getMaterials().subscribe((data) => {\n      this.materialList = data;\n      this.inmutableList = data;\n    });\n    this.materialsService.getDbMaterials().subscribe((data) => {\n      data.map((db) => {\n        this.filters.push(db);\n      });\n    });\n  }\n\n  goToAddMaterial() {\n    this.router.navigateByUrl('admin-materials/add');\n  }\n\n  goToAdmin() {\n    this.router.navigateByUrl('admin');\n  }\n\n  deleteMaterial(event: Event, id, name_material) {\n    event.preventDefault();\n\n    const dialogRef = this.dialog.open(DeleteMaterialComponent, {\n      width: '680px',\n      data: { id, name_material },\n    });\n\n    dialogRef.afterClosed().subscribe((result) => {\n      this.ngOnInit();\n    });\n  }\n\n  SortArray(x, y) {\n    return x.name_material.localeCompare(y.name_material, 'fr', {\n      ignorePunctuation: true,\n    });\n  }\n\n  filterAlpha(materialList) {\n    return materialList.slice().sort(this.SortArray);\n  }\n\n  filterOrderMinorId(materialList) {\n    return materialList.slice().sort((a, b) => (a.id > b.id ? 1 : -1));\n  }\n\n  filterOrderMayorId(materialList) {\n    return materialList.slice().sort((a, b) => (a.id < b.id ? 1 : -1));\n  }\n\n  filterByDataBase(filter) {\n    return this.inmutableList.filter((res) => res.database_from === filter);\n  }\n\n  selectFilter(filter) {\n    let filterSelected = [];\n\n    if (filter === 'orden alfabético') {\n      filterSelected = this.filterAlpha(this.inmutableList);\n    } else if (filter === 'más antiguo') {\n      filterSelected = this.filterOrderMinorId(this.inmutableList);\n    } else if (filter === 'más reciente') {\n      filterSelected = this.filterOrderMayorId(this.inmutableList);\n    } else {\n      filterSelected = this.filterByDataBase(filter);\n    }\n\n    this.materialList = filterSelected;\n\n    console.log(filterSelected);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { MaterialsService } from './../../../core/services/materials/materials.service';\r\nimport { AnalisisService } from './../../../core/services/analisis/analisis.service';\r\nimport { UpdateDataSchemeComponent } from '../update-data-scheme/update-data-scheme.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { AddDataSchemeComponent } from '../add-data-scheme/add-data-scheme.component';\r\nimport { DeleteDataSchemeComponent } from '../delete-data-scheme/delete-data-scheme.component';\r\n\r\n@Component({\r\n  selector: 'app-update-material',\r\n  templateUrl: './update-material.component.html',\r\n  styleUrls: ['./update-material.component.scss'],\r\n})\r\nexport class UpdateMaterialComponent implements OnInit {\r\n  form: FormGroup;\r\n\r\n  id: string;\r\n\r\n  units: any;\r\n\r\n  ListSchemeData: any;\r\n\r\n  ListPotential: any;\r\n\r\n  ListStandards: any;\r\n\r\n  potential: any;\r\n\r\n  ListDatabases: any;\r\n\r\n  displayedColumns: string[] = [\r\n    'id',\r\n    'potential_type_id',\r\n    'standard_id',\r\n    'unit_id',\r\n    'value',\r\n    'actions',\r\n  ];\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private formBuilder: FormBuilder,\r\n    private activatedRoute: ActivatedRoute,\r\n    private materialsService: MaterialsService,\r\n    private analisisService: AnalisisService,\r\n    public dialog: MatDialog\r\n  ) {\r\n    this.buildForm();\r\n    this.materialsService.getUnits().subscribe((data) => {\r\n      this.units = data;\r\n    });\r\n    this.materialsService.getStandards().subscribe((data) => {\r\n      this.ListStandards = data;\r\n    });\r\n    this.materialsService.getPotentialTypes().subscribe((data) => {\r\n      this.ListPotential = data;\r\n    });\r\n\r\n    this.materialsService.getDbMaterials().subscribe((data) => {\r\n      this.ListDatabases = data;\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.activatedRoute.params.subscribe((params: Params) => {\r\n      this.materialsService.getMaterials().subscribe((data) => {\r\n        const materialFiltered = data.filter(\r\n          (material) => material.id === parseInt(params.id)\r\n        );\r\n\r\n        // Filtrado de Esquema de material\r\n        materialFiltered.map((material) => {\r\n          this.id = material.id;\r\n          this.form.patchValue(material);\r\n          this.ListSchemeData = [];\r\n          this.analisisService.getMaterialSchemeData().subscribe((msds) => {\r\n            const ListSchemeData = msds.filter(\r\n              (msd) => msd.material_id === material.id\r\n            );\r\n\r\n            this.ListSchemeData = ListSchemeData.sort((a, b) => {\r\n              if (a.potential_type_id === b.potential_type_id) {\r\n                return a.standard_id - b.standard_id;\r\n              }\r\n\r\n              return a.potential_type_id - b.potential_type_id;\r\n            });\r\n          });\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  private buildForm() {\r\n    this.form = this.formBuilder.group({\r\n      name_material: [null, Validators.required],\r\n      database_from: [null, Validators.required],\r\n      description: [null],\r\n      unit_id: [null, Validators.required],\r\n    });\r\n  }\r\n\r\n  saveMaterial(event: Event) {\r\n    event.preventDefault();\r\n    if (this.form.valid) {\r\n      const material = this.form.value;\r\n      this.materialsService\r\n        .updateMaterial(this.id, material)\r\n        .subscribe((newProduct) => {\r\n          this.ngOnInit();\r\n          this.router.navigate(['./admin-materials']);\r\n        });\r\n    }\r\n  }\r\n\r\n  goToMaterialList() {\r\n    this.router.navigateByUrl('admin-materials');\r\n  }\r\n\r\n  deleteSchema(event: Event, id: number) {\r\n    event.preventDefault();\r\n    const potentialSelected = this.ListSchemeData.filter(\r\n      (data) => data.id === id\r\n    );\r\n    const dialogRef = this.dialog.open(DeleteDataSchemeComponent, {\r\n      width: '680px',\r\n      data: potentialSelected,\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      this.ngOnInit();\r\n    });\r\n  }\r\n\r\n  getPotential(id: number) {\r\n    const potencial = this.ListPotential.filter(\r\n      (potencial) => potencial.id === id\r\n    );\r\n\r\n    return potencial[0].name_complete_potential_type;\r\n  }\r\n\r\n  getStandard(id: number) {\r\n    const standard = this.ListStandards.filter(\r\n      (standard) => standard.id === id\r\n    );\r\n\r\n    return standard[0].name_standard;\r\n  }\r\n\r\n  getUnit(id: number) {\r\n    const unit = this.units.filter((unit) => unit.id === id);\r\n\r\n    return unit[0].name_unit;\r\n  }\r\n\r\n  openModalSchema(event: Event, elem) {\r\n    event.preventDefault();\r\n    const dialogRef = this.dialog.open(UpdateDataSchemeComponent, {\r\n      width: '680px',\r\n      data: { ...elem },\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      this.ngOnInit();\r\n    });\r\n  }\r\n\r\n  goToAddScheme(event: Event) {\r\n    event.preventDefault();\r\n    console.log('entra a goToAddScheme');\r\n    const dialogRef = this.dialog.open(AddDataSchemeComponent, {\r\n      width: '680px',\r\n      data: { material_id: this.id },\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      console.log('entra a este proceso');\r\n      this.ngOnInit();\r\n    });\r\n  }\r\n}\r\n","<h1>Administrador de Materiales</h1>\n\n<div class=\"custom-container\">\n  <button mat-button class=\"yellow-button\" (click)=\"goToAddMaterial()\">\n    Agregar material\n  </button>\n  <button  mat-raised-button color=\"primary\" (click)=\"goToAdmin()\">\n    Regresar a Administrador\n  </button>\n  <mat-form-field appearance=\"outline\" class=\"select-general\">\n    <mat-label>Seleccione una opción</mat-label>\n    <mat-select [(ngModel)]=\"filterSelected\" (selectionChange)=\"selectFilter(filterSelected)\">\n      <mat-option *ngFor=\"let filter of filters\" [value]=\"filter.name\">\n        {{filter.name}}\n      </mat-option>\n    </mat-select>\n  </mat-form-field>\n\n</div>\n\n<table mat-table [dataSource]=\"materialList\" class=\"mat-elevation-z8\">\n\n  <ng-container matColumnDef=\"id\">\n    <th mat-header-cell *matHeaderCellDef> Id. </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.id}} </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"name_material\">\n    <th mat-header-cell *matHeaderCellDef> Nombre </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.name_material}} </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"database_from\">\n    <th mat-header-cell *matHeaderCellDef> Base de datos </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.database_from}} </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"description\">\n    <th mat-header-cell *matHeaderCellDef> Descripción </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.description}} </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"unit_id\">\n    <th mat-header-cell *matHeaderCellDef> Unidad </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.unit_id}} </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"actions\">\n    <th mat-header-cell *matHeaderCellDef> Acciones </th>\n    <td mat-cell *matCellDef=\"let element\"> \n      <a \n        mat-raised-button \n        [routerLink]=\"['update', element.id]\"\n      >Editar\n    </a>\n      <button mat-raised-button color=\"warn\" (click)=\"deleteMaterial($event, element.id, element.name_material)\">Eliminar</button>\n    </td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n</table>\n\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MaterialsService } from './../../../core/services/materials/materials.service';\n\nexport interface DialogData {\n  id: number;\n}\n@Component({\n  selector: 'app-delete-data-scheme',\n  templateUrl: './delete-data-scheme.component.html',\n  styleUrls: ['./delete-data-scheme.component.scss'],\n})\nexport class DeleteDataSchemeComponent implements OnInit {\n  constructor(\n    private materialsService: MaterialsService,\n    public dialogRef: MatDialogRef<DeleteDataSchemeComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData\n  ) {}\n\n  ngOnInit(): void {}\n\n  onNoClick() {\n    this.dialogRef.close(this.data);\n  }\n\n  deletePotential(event: Event, id: number) {\n    event.preventDefault();\n    this.materialsService.deleteMaterialSchemeData(id).subscribe((data) => {\n      this.onNoClick();\n    });\n  }\n}\n","<ng-content></ng-content>\n<ng-content select=\"mat-card-footer\"></ng-content>\n","<ng-content select=\"[mat-card-avatar], [matCardAvatar]\"></ng-content>\n<div class=\"mat-card-header-text\">\n  <ng-content\n      select=\"mat-card-title, mat-card-subtitle,\n      [mat-card-title], [mat-card-subtitle],\n      [matCardTitle], [matCardSubtitle]\"></ng-content>\n</div>\n<ng-content></ng-content>\n","<div>\n  <ng-content\n      select=\"mat-card-title, mat-card-subtitle,\n      [mat-card-title], [mat-card-subtitle],\n      [matCardTitle], [matCardSubtitle]\"></ng-content>\n</div>\n<ng-content select=\"img\"></ng-content>\n<ng-content></ng-content>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MaterialsService } from './../../../core/services/materials/materials.service';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { AnalisisService } from '../../../core/services/analisis/analisis.service';\n\nexport interface DialogData {\n  id: number;\n  material_id: number;\n  potential_type_id: number;\n  standard_id: number;\n  unit_id: number;\n  value: string;\n}\n\n@Component({\n  selector: 'app-update-data-scheme',\n  templateUrl: './update-data-scheme.component.html',\n  styleUrls: ['./update-data-scheme.component.scss'],\n})\nexport class UpdateDataSchemeComponent implements OnInit {\n  form: FormGroup;\n\n  id: string;\n\n  units: any;\n\n  ListSchemeData: any;\n\n  ListPotential: any;\n\n  ListStandards: any;\n\n  potential: any;\n\n  standard_id: number;\n\n  unit_id: number;\n\n  unit_name: string = 'Seleccione potencial de impacto ambiental';\n\n  loading: boolean = true;\n\n  constructor(\n    private materialsService: MaterialsService,\n    private analisisService: AnalisisService,\n    private formBuilder: FormBuilder,\n    public dialogRef: MatDialogRef<UpdateDataSchemeComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData\n  ) {\n    this.buildForm();\n    this.materialsService.getUnits().subscribe((data) => {\n      this.units = data;\n    });\n    this.materialsService.getStandards().subscribe((data) => {\n      this.ListStandards = data;\n    });\n    this.materialsService.getPotentialTypes().subscribe((data) => {\n      this.ListPotential = data;\n    });\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close(this.data);\n  }\n\n  ngOnInit(): void {\n    this.analisisService.getMaterialSchemeData().subscribe((data) => {\n      const schema = data.filter(\n        (schemaSelected) => schemaSelected.id === this.data.id\n      );\n      this.id = schema[0].id;\n      this.standard_id = schema[0].standard_id;\n      this.form.patchValue(schema[0]);\n      this.potentialSelected(schema[0].potential_type_id);\n\n      if (this.id) {\n        this.loading = false;\n      }\n    });\n  }\n\n  private buildForm() {\n    this.form = this.formBuilder.group({\n      potential_type_id: [null, Validators.required],\n      value: [null, Validators.required],\n    });\n  }\n\n  updateScheme(event) {\n    event.preventDefault();\n    if (this.form.valid) {\n      const scheme = this.form.value;\n      this.analisisService\n        .updateMaterialSchemeData(this.id, {\n          ...scheme,\n          standard_id: this.standard_id,\n          unit_id: this.unit_id,\n        })\n        .subscribe((newScheme) => {\n          console.log(newScheme);\n          this.onNoClick();\n        });\n    }\n  }\n\n  potentialSelected(potentialId) {\n    const potentialData = this.ListPotential.filter(\n      (data) => data.id === potentialId\n    );\n\n    const unitData = this.units.filter(\n      (data) => data.name_unit == potentialData[0].unit_potential_type\n    );\n\n    try {\n      this.unit_id = unitData[0].id;\n      this.unit_name = unitData[0].name_unit;\n    } catch (e) {\n      this.unit_id = null;\n      this.unit_name = 'No se encontró coincidencia con unidades';\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { tap } from 'rxjs/operators';\nimport { environment } from './../../../../environments/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MaterialsService {\n  constructor(private http: HttpClient) {}\n\n  getMaterialSchemeProyects() {\n    return this.http.get<any>(environment.api_scheme_project).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  getConstructionStage() {\n    return this.http.get<any>(environment.api_construction_stage).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  getACR() {\n    return this.http.get<any>(environment.api_annual_consumption_required).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  getEDCP() {\n    return this.http\n      .get<any>(environment.api_electricity_consumption_deconstructive_process)\n      .pipe(\n        tap((data) => {\n          return data;\n        })\n      );\n  }\n\n  getMaterials() {\n    return this.http.get<any>(environment.api_materials).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  searchMaterial(material) {\n    return this.http\n      .get<any>(environment.api_materials + '?search=' + material)\n      .pipe(\n        tap((data) => {\n          return data;\n        })\n      );\n  }\n\n  addMaterial(data: object) {\n    return this.http.post<any>(environment.api_materials, data).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  deleteMaterial(id: number) {\n    return this.http.delete(`${environment.api_materials}${id}/`).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  deleteMaterialSchemeData(id: number) {\n    return this.http\n      .delete(`${environment.api_material_scheme_data}${id}/`)\n      .pipe(\n        tap((data) => {\n          return data;\n        })\n      );\n  }\n\n  updateMaterial(id: string, changes) {\n    return this.http.put(`${environment.api_materials}${id}/`, changes).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  getfake() {\n    return this.http\n      .get<any>(\n        'http://127.0.0.1:8000/api-projects/material-scheme-data/'\n        //'https://evamed-rest-api.herokuapp.com/api-projects/material-scheme-data/',\n      )\n      .pipe(\n        tap((data) => {\n          return data;\n        })\n      );\n  }\n\n  deleteFake(id: number) {\n    return this.http\n      .delete(\n        `https://evamed-rest-api.herokuapp.com/api-projects/material-scheme-data/${id}/`\n      )\n      .pipe(\n        tap((data) => {\n          return data;\n        })\n      );\n  }\n\n  addFake(schemeData: object) {\n    return this.http\n      .post<any>(\n        'https://evamed-rest-api.herokuapp.com/api-projects/material-scheme-data/',\n        schemeData\n      )\n      .pipe(\n        tap((data) => {\n          return data;\n        })\n      );\n  }\n\n  getUnits() {\n    return this.http.get<any>(environment.api_units).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  addUnit(data: object) {\n    return this.http.post<any>(environment.api_units, data).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  updateUnit(id: string, changes) {\n    return this.http.put(`${environment.api_units}${id}/`, changes).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  deleteUnit(id: number) {\n    return this.http.delete(`${environment.api_units}${id}/`).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  getPotentialTypes() {\n    return this.http.get<any>(environment.api_potetnial_types).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  addPotentialTypes(data: object) {\n    return this.http.post<any>(environment.api_potetnial_types, data).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  updatePotentialTypes(id: string, changes) {\n    return this.http\n      .put(`${environment.api_potetnial_types}${id}/`, changes)\n      .pipe(\n        tap((data) => {\n          return data;\n        })\n      );\n  }\n\n  deletePotentialType(id: number) {\n    return this.http.delete(`${environment.api_potetnial_types}${id}/`).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  getStandards() {\n    return this.http.get<any>(environment.api_standards).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  getDbMaterials() {\n    return this.http.get<any>(environment.api_db_material).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  addDbMaterial(data: object) {\n    return this.http.post<any>(environment.api_db_material, data).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  updateDbMaterial(id: string, changes) {\n    return this.http.put(`${environment.api_db_material}${id}/`, changes).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  deleteDbMaterial(id: number) {\n    return this.http.delete(`${environment.api_db_material}${id}/`).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  getTransports() {\n    return this.http.get<any>(environment.api_transports).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  addTransport(data: object) {\n    return this.http.post<any>(environment.api_transports, data).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  updateTransport(id: string, changes) {\n    return this.http.put(`${environment.api_transports}${id}/`, changes).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  deleteTransport(id: number) {\n    return this.http.delete(`${environment.api_transports}${id}/`).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  getPotentialTransport() {\n    return this.http.get<any>(environment.api_potential_transport).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  addPotentialTransport(data: object) {\n    return this.http.post<any>(environment.api_potential_transport, data).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  updatePotentialTransport(id: string, changes) {\n    return this.http\n      .put(`${environment.api_potential_transport}${id}/`, changes)\n      .pipe(\n        tap((data) => {\n          return data;\n        })\n      );\n  }\n\n  deletePotentialTransport(id: number) {\n    return this.http\n      .delete(`${environment.api_potential_transport}${id}/`)\n      .pipe(\n        tap((data) => {\n          return data;\n        })\n      );\n  }\n\n  getMachinery() {\n    return this.http.get<any>(environment.api_source_information).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  addMachinery(data: object) {\n    return this.http.post<any>(environment.api_source_information, data).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  updateMachinery(id: string, changes) {\n    return this.http\n      .put(`${environment.api_source_information}${id}/`, changes)\n      .pipe(\n        tap((data) => {\n          return data;\n        })\n      );\n  }\n\n  deleteMachinery(id: number) {\n    return this.http.delete(`${environment.api_source_information}${id}/`).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  getMachineryPotential() {\n    return this.http.get<any>(environment.api_source_information_data).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  addMachineryPotential(data: object) {\n    return this.http\n      .post<any>(environment.api_source_information_data, data)\n      .pipe(\n        tap((data) => {\n          return data;\n        })\n      );\n  }\n\n  updateMachineryPotential(id: string, changes) {\n    return this.http\n      .put(`${environment.api_source_information_data}${id}/`, changes)\n      .pipe(\n        tap((data) => {\n          return data;\n        })\n      );\n  }\n\n  deleteMachineryPotential(id: number) {\n    return this.http\n      .delete(`${environment.api_source_information_data}${id}/`)\n      .pipe(\n        tap((data) => {\n          return data;\n        })\n      );\n  }\n\n  getTypeEnergy() {\n    return this.http.get<any>(environment.api_type_energy).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  addTypeEnergy(data: object) {\n    return this.http.post<any>(environment.api_type_energy, data).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  updateTypeEnergy(id: string, changes) {\n    return this.http.put(`${environment.api_type_energy}${id}/`, changes).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  deleteTypeEnergy(id: number) {\n    return this.http.delete(`${environment.api_type_energy}${id}/`).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  getTypeEnergyData() {\n    return this.http.get<any>(environment.api_type_energy_data).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  addTypeEnergyData(data: object) {\n    return this.http.post<any>(environment.api_type_energy_data, data).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  updateTypeEnergyData(id: string, changes) {\n    return this.http\n      .put(`${environment.api_type_energy_data}${id}/`, changes)\n      .pipe(\n        tap((data) => {\n          return data;\n        })\n      );\n  }\n\n  deleteTypeEnergyData(id: number) {\n    return this.http.delete(`${environment.api_type_energy_data}${id}/`).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MaterialsAdminRoutingModule } from './materials-admin-routing.module';\nimport { MaterialsAdminComponent } from './components/materials-admin/materials-admin.component';\nimport { SharedModule } from '../shared/shared.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MaterialModule } from '../material/material.module';\nimport { AddMaterialComponent } from './components/add-material/add-material.component';\nimport { UpdateMaterialComponent } from './components/update-material/update-material.component';\nimport { ChartsModule } from 'ng2-charts';\nimport { UpdateDataSchemeComponent } from './components/update-data-scheme/update-data-scheme.component';\nimport { AddDataSchemeComponent } from './components/add-data-scheme/add-data-scheme.component';\nimport { DeleteMaterialComponent } from './components/delete-material/delete-material.component';\nimport { DeleteDataSchemeComponent } from './components/delete-data-scheme/delete-data-scheme.component';\n\n@NgModule({\n  declarations: [\n    MaterialsAdminComponent,\n    AddMaterialComponent,\n    UpdateMaterialComponent,\n    UpdateDataSchemeComponent,\n    AddDataSchemeComponent,\n    DeleteMaterialComponent,\n    DeleteDataSchemeComponent,\n  ],\n  imports: [\n    CommonModule,\n    MaterialsAdminRoutingModule,\n    SharedModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MaterialModule,\n    ChartsModule,\n  ],\n  exports: [\n    MaterialsAdminComponent,\n    AddMaterialComponent,\n    UpdateMaterialComponent,\n    UpdateDataSchemeComponent,\n    AddDataSchemeComponent,\n    DeleteMaterialComponent,\n    DeleteDataSchemeComponent,\n  ],\n  entryComponents: [\n    UpdateDataSchemeComponent,\n    AddDataSchemeComponent,\n    DeleteMaterialComponent,\n    DeleteDataSchemeComponent,\n  ],\n})\nexport class MaterialsAdminModule {}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { tap } from 'rxjs/operators';\r\nimport { environment } from './../../../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AnalisisService {\r\n  proyectos = [];\r\n  constructor(private http: HttpClient) {\r\n    // this._getProjects().subscribe( data => {\r\n    //   this.proyectos = data;\r\n    // });\r\n  }\r\n\r\n  getECDP() {\r\n    return this.http\r\n      .get<any>(environment.api_electricity_consumption_deconstructive_process)\r\n      .pipe(\r\n        tap((data) => {\r\n          return data;\r\n        })\r\n      );\r\n  }\r\n\r\n  getUsefulLife() {\r\n    return this.http.get<any>(environment.api_useful_life).pipe(\r\n      tap((data) => {\r\n        return data;\r\n      })\r\n    );\r\n  }\r\n\r\n  //api_type_energy\r\n\r\n  getTypeEnergy() {\r\n    return this.http.get<any>(environment.api_type_energy).pipe(\r\n      tap((data) => {\r\n        return data;\r\n      })\r\n    );\r\n  }\r\n\r\n  getTypeEnergyData() {\r\n    return this.http.get<any>(environment.api_type_energy_data).pipe(\r\n      tap((data) => {\r\n        return data;\r\n      })\r\n    );\r\n  }\r\n\r\n  getElectricityConsumptionData() {\r\n    return this.http\r\n      .get<any>(environment.api_electricity_consumption_data)\r\n      .pipe(\r\n        tap((data) => {\r\n          return data;\r\n        })\r\n      );\r\n  }\r\n\r\n  getAnnualConsumptionRequired() {\r\n    return this.http.get<any>(environment.api_annual_consumption_required).pipe(\r\n      tap((data) => {\r\n        return data;\r\n      })\r\n    );\r\n  }\r\n\r\n  getSourceInformation() {\r\n    return this.http.get<any>(environment.api_source_information).pipe(\r\n      tap((data) => {\r\n        return data;\r\n      })\r\n    );\r\n  }\r\n\r\n  getSourceInformationData() {\r\n    return this.http.get<any>(environment.api_source_information_data).pipe(\r\n      tap((data) => {\r\n        return data;\r\n      })\r\n    );\r\n  }\r\n\r\n  getConstructiveSystemElement() {\r\n    return this.http.get<any>(environment.api_construction_stage).pipe(\r\n      tap((data) => {\r\n        return data;\r\n      })\r\n    );\r\n  }\r\n\r\n  getPotentialTypes() {\r\n    return this.http.get<any>(environment.api_potetnial_types).pipe(\r\n      tap((data) => {\r\n        return data;\r\n      })\r\n    );\r\n  }\r\n\r\n  getStandars() {\r\n    return this.http.get<any>(environment.api_standards).pipe(\r\n      tap((data) => {\r\n        return data;\r\n      })\r\n    );\r\n  }\r\n\r\n  getMaterialSchemeProyect() {\r\n    return this.http.get<any>(environment.api_scheme_project).pipe(\r\n      tap((data) => {\r\n        return data;\r\n      })\r\n    );\r\n  }\r\n\r\n  getMaterialSchemeData() {\r\n    return this.http.get<any>(environment.api_material_scheme_data).pipe(\r\n      tap((data) => {\r\n        return data;\r\n      })\r\n    );\r\n  }\r\n\r\n  updateMaterialSchemeData(id: string, changes) {\r\n    return this.http\r\n      .put(`${environment.api_material_scheme_data}${id}/`, changes)\r\n      .pipe(\r\n        tap((data) => {\r\n          return data;\r\n        })\r\n      );\r\n  }\r\n\r\n  addMaterialSchemeData(data: object) {\r\n    return this.http.post<any>(environment.api_material_scheme_data, data).pipe(\r\n      tap((data) => {\r\n        return data;\r\n      })\r\n    );\r\n  }\r\n\r\n  getSectionsList() {\r\n    return this.http.get<any>(environment.api_sections).pipe(\r\n      tap((data) => {\r\n        return data;\r\n      })\r\n    );\r\n  }\r\n\r\n  getMaterials() {\r\n    return this.http.get<any>(environment.api_materials).pipe(\r\n      tap((data) => {\r\n        return data;\r\n      })\r\n    );\r\n  }\r\n\r\n  getPotentialTransport() {\r\n    return this.http.get<any>(environment.api_potential_transport).pipe(\r\n      tap((data) => {\r\n        return data;\r\n      })\r\n    );\r\n  }\r\n\r\n  getConversion() {\r\n    return this.http.get<any>(environment.api_conversions).pipe(\r\n      tap((data) => {\r\n        return data;\r\n      })\r\n    );\r\n  }\r\n\r\n  getDB() {\r\n    return this.http.get<any>(environment.api_db_material).pipe(\r\n      tap((data) => {\r\n        return data;\r\n      })\r\n    );\r\n  }\r\n}\r\n","<form [formGroup]=\"addMaterialForm\" novalidate (ngSubmit)=\"onSubmit()\">\n  <mat-card  class=\"custom-card\">\n    <mat-card-header>\n      <mat-card-title>Ingresar datos del material</mat-card-title>\n    </mat-card-header>\n    <mat-card-content>\n      <div class=\"Row\">\n        <div class=\"Col\">\n          <mat-form-field  appearance=\"outline\" >\n            <input matInput placeholder=\"Nombre\" formControlName=\"name_material\">\n            <mat-error *ngIf=\"addMaterialForm.controls['name_material'].hasError('required')\">\n              El nombre es <strong>requerido</strong>\n            </mat-error>\n          </mat-form-field>\n        </div>\n      </div>\n    </mat-card-content>\n    <mat-card-content>\n      <div class=\"Row\">\n        <div class=\"Col\">\n          <mat-form-field appearance=\"outline\">\n            <mat-select placeholder=\"Base de datos\" formControlName=\"database_from\">\n              <mat-option *ngFor=\"let data of ListDatabases\" [value]=\"data.name\">\n                {{ data.name }}\n              </mat-option>\n            </mat-select>\n            <mat-error *ngIf=\"addMaterialForm.controls['database_from'].hasError('required')\">\n              Base de datos es <strong>requiredo</strong>\n            </mat-error>\n          </mat-form-field>\n        </div>\n      </div>\n    </mat-card-content>\n    <mat-card-content>\n      <div class=\"Row\">\n        <div class=\"Col\">\n          <mat-form-field  appearance=\"outline\" >\n            <textarea matInput placeholder=\"Descripción\" formControlName=\"description\"></textarea>\n          </mat-form-field>\n        </div>\n      </div>\n    </mat-card-content>\n    <mat-card-content>\n      <div class=\"Row\">\n        <div class=\"Col\">\n          <mat-form-field appearance=\"outline\">\n            <mat-select placeholder=\"Unidad\" formControlName=\"unit_id\">\n              <mat-option *ngFor=\"let data of units\" [value]=\"data.id\">\n                {{ data.name_unit }}\n              </mat-option>\n            </mat-select>\n            <mat-error *ngIf=\"addMaterialForm.controls['unit_id'].hasError('required')\">\n              Unidad es un campo <strong>requerido</strong>\n            </mat-error>\n          </mat-form-field>\n        </div>\n      </div>\n    </mat-card-content> \n    <mat-card-actions>\n      <button mat-raised-button color=\"primary\" type=\"submit\">Agregar material</button>\n      <button\n        mat-button\n        class=\"yellow-button\"\n        (click)=\"goToMaterialList()\"\n      >\n        Lista de materiales\n      </button>\n    </mat-card-actions>\n  </mat-card>\n</form>\n","\n<form [formGroup]=\"form\" (ngSubmit)=\"addScheme($event)\">\n  <div class=\"header-modal\">\n    <h1 mat-dialog-title class=\"title-standard-second-light\">\n      Agregar impactos ambientales\n    </h1>\n    <a (click)=\"onNoClick()\" class=\"close-modal\">\n      X\n    </a>\n  </div>\n\n  <div mat-dialog-content>\n    <mat-card  class=\"custom-card\">\n  \n      <mat-card-content>\n        <div class=\"Row\">\n          <div class=\"Col\">\n            <mat-form-field appearance=\"outline\">\n              <mat-select \n                placeholder=\"Potencial de impacto ambiental\" \n                formControlName=\"potential_type_id\" \n                (selectionChange)=\"potentialSelected($event.value)\" \n              >\n                <mat-option *ngFor=\"let potential of ListPotential\" [value]=\"potential.id\">\n                  {{ potential.name_complete_potential_type }}\n                </mat-option>\n              </mat-select>\n              <mat-error *ngIf=\"form.controls['potential_type_id'].hasError('required')\">\n                Potencial es un campo <strong>requerido</strong>\n              </mat-error>\n            </mat-form-field>\n          </div>\n        </div>\n      </mat-card-content>\n\n      <mat-card-content>\n        <div class=\"Row\">\n          <div class=\"Col\">\n            <h2>Unidad: {{ unit_name }}</h2>\n          </div>\n        </div>\n      </mat-card-content>\n  \n      <mat-card-content>\n        <div class=\"Row\">\n          <div class=\"Col\">\n            <mat-radio-group [(ngModel)]=\"standard_id\" [ngModelOptions]=\"{standalone: true}\" class=\"margin-left\" >\n              <mat-radio-button *ngFor=\"let data of ListStandards\" name=\"opciones\" [value]=\"data.id\"  style=\"margin: 10px\">\n                {{ data.name_standard }}\n              </mat-radio-button>\n            </mat-radio-group>\n          </div>\n        </div>\n      </mat-card-content>\n  \n      <mat-card-content>\n        <div class=\"Row\">\n          <div class=\"Col\">\n            <mat-form-field  appearance=\"outline\" >\n              <input matInput placeholder=\"Valor\" formControlName=\"value\">\n              <mat-error *ngIf=\"form.controls['value'].hasError('required')\">\n                El valor es <strong>requerido</strong>\n              </mat-error>\n            </mat-form-field>\n          </div>\n        </div>\n      </mat-card-content>\n  \n    </mat-card>\n  </div>\n\n  <div mat-dialog-actions class=\"center\">\n    <button mat-raised-button color=\"primary\" type=\"submit\">Agregar impacto ambiental</button>\n  </div>\n\n</form>","<div class=\"header-modal\">\n  <h1 mat-dialog-title class=\"title-standard-second-light\">\n    Eliminar potencial de impacto ambiental\n  </h1>\n  <a (click)=\"onNoClick()\" class=\"close-modal\">\n    X\n  </a>\n</div>\n\n<div mat-dialog-content>\n  <h1>¿Desea eliminar el potencial de impacto ambiental?</h1>\n</div>\n\n<div mat-dialog-actions class=\"center\">\n  <button mat-raised-button color=\"primary\" (click)=\"deletePotential($event, data[0].id)\">Eliminar</button>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MaterialsService } from './../../../core/services/materials/materials.service';\n\n@Component({\n  selector: 'app-add-material',\n  templateUrl: './add-material.component.html',\n  styleUrls: ['./add-material.component.scss'],\n})\nexport class AddMaterialComponent implements OnInit {\n  addMaterialForm: FormGroup;\n\n  units: any;\n\n  ListDatabases: any;\n\n  constructor(\n    private router: Router,\n    private fb: FormBuilder,\n    private materialsService: MaterialsService\n  ) {\n    this.buildForm();\n    this.materialsService.getUnits().subscribe((data) => {\n      this.units = data;\n    });\n    this.materialsService.getDbMaterials().subscribe((data) => {\n      this.ListDatabases = data;\n    });\n  }\n\n  ngOnInit(): void {}\n\n  private buildForm() {\n    this.addMaterialForm = this.fb.group({\n      name_material: [null, Validators.required],\n      database_from: [null, Validators.required],\n      description: [null],\n      unit_id: [null, Validators.required],\n    });\n  }\n\n  onSubmit() {\n    if (this.addMaterialForm.valid) {\n      const material = this.addMaterialForm.value;\n      this.materialsService.addMaterial(material).subscribe((data) => {\n        this.goToMaterialList();\n      });\n    }\n  }\n\n  goToMaterialList() {\n    this.router.navigateByUrl('admin-materials');\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MaterialsAdminComponent } from './components/materials-admin/materials-admin.component';\nimport { AddMaterialComponent } from './components/add-material/add-material.component';\nimport { UpdateMaterialComponent } from './components/update-material/update-material.component';\nconst routes: Routes = [\n  {\n    path: '',\n    component: MaterialsAdminComponent,\n  },\n  {\n    path: 'add',\n    component: AddMaterialComponent,\n  },\n  {\n    path: 'update/:id',\n    component: UpdateMaterialComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class MaterialsAdminRoutingModule {}\n","\n<form [formGroup]=\"form\" (ngSubmit)=\"updateScheme($event)\">\n  <div class=\"header-modal\">\n    <h1 mat-dialog-title class=\"title-standard-second-light\">\n      Actualizar impacto ambiental\n    </h1>\n    <a (click)=\"onNoClick()\" class=\"close-modal\">\n      X\n    </a>\n  </div>\n\n  <div mat-dialog-content *ngIf=\"loading === false\">\n    <mat-card  class=\"custom-card\">\n      <mat-card-content>\n        <div class=\"Row\">\n          <div class=\"Col\">\n            <mat-form-field appearance=\"outline\">\n              <mat-select \n                placeholder=\"Potencial de impacto ambiental\" \n                formControlName=\"potential_type_id\"\n                (selectionChange)=\"potentialSelected($event.value)\" \n              >\n                <mat-option *ngFor=\"let data of ListPotential\" [value]=\"data.id\">\n                  {{ data.name_complete_potential_type }}\n                </mat-option>\n              </mat-select>\n              <mat-error *ngIf=\"form.controls['potential_type_id'].hasError('required')\">\n                Potencial es un campo <strong>requerido</strong>\n              </mat-error>\n            </mat-form-field>\n          </div>\n        </div>\n      </mat-card-content>\n  \n      <mat-card-content>\n        <div class=\"Row\">\n          <div class=\"Col\">\n            <h2>Unidad: {{ unit_name }}</h2>\n          </div>\n        </div>\n      </mat-card-content>\n\n      <mat-card-content>\n        <div class=\"Row\">\n          <div class=\"Col\">\n            <mat-radio-group [(ngModel)]=\"standard_id\" [ngModelOptions]=\"{standalone: true}\" class=\"margin-left\" >\n              <mat-radio-button *ngFor=\"let data of ListStandards\" name=\"opciones\" [value]=\"data.id\"  style=\"margin: 10px\">\n                {{ data.name_standard }}\n              </mat-radio-button>\n            </mat-radio-group>\n          </div>\n        </div>\n      </mat-card-content>\n  \n      <mat-card-content>\n        <div class=\"Row\">\n          <div class=\"Col\">\n            <mat-form-field  appearance=\"outline\" >\n              <input matInput placeholder=\"Valor\" formControlName=\"value\">\n              <mat-error *ngIf=\"form.controls['value'].hasError('required')\">\n                El valor es <strong>requerido</strong>\n              </mat-error>\n            </mat-form-field>\n          </div>\n        </div>\n      </mat-card-content>\n  \n    </mat-card>\n  </div>\n\n  <div mat-dialog-content *ngIf=\"loading === true\">\n    <mat-card-header>\n      <mat-card-title>Cargando...</mat-card-title>\n    </mat-card-header>\n  </div>\n\n  <div mat-dialog-actions class=\"center\">\n    <button mat-raised-button color=\"primary\" type=\"submit\">Editar impacto ambiental</button>\n  </div>\n\n</form>"]}