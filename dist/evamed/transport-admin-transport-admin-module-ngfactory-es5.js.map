{"version":3,"sources":["webpack:///src/app/transport-admin/transport-admin-routing.module.ts","webpack:///src/app/transport-admin/components/potential/delete-potential-transport/delete-potential-transport.component.html","webpack:///src/app/transport-admin/components/add-transport/add-transport.component.html","webpack:///src/app/transport-admin/components/delete-transport/delete-transport.component.html","webpack:///src/app/transport-admin/components/add-transport/add-transport.component.ts","webpack:///src/app/transport-admin/components/potential/add-potential-transport/add-potential-transport.component.ts","webpack:///src/app/transport-admin/components/delete-transport/delete-transport.component.ts","webpack:///src/app/transport-admin/components/transport-admin/transport-admin.component.html","webpack:///src/app/transport-admin/components/potential/delete-potential-transport/delete-potential-transport.component.ts","webpack:///node_modules/@angular/material/card/index.d.ts.MatCard.html","webpack:///node_modules/@angular/material/card/index.d.ts.MatCardHeader.html","webpack:///node_modules/@angular/material/card/index.d.ts.MatCardTitleGroup.html","webpack:///src/app/transport-admin/components/update-transport/update-transport.component.ts","webpack:///src/app/core/services/materials/materials.service.ts","webpack:///src/app/transport-admin/components/transport-admin/transport-admin.component.ts","webpack:///src/app/transport-admin/components/potential/update-potential-transport/update-potential-transport.component.ts","webpack:///src/app/transport-admin/components/potential/update-potential-transport/update-potential-transport.component.html","webpack:///src/app/transport-admin/components/potential/add-potential-transport/add-potential-transport.component.html","webpack:///src/app/transport-admin/components/update-transport/update-transport.component.html","webpack:///src/app/transport-admin/transport-admin.module.ts"],"names":["routes","path","component","TransportAdminRoutingModule","AddTransportComponent","materialsService","formBuilder","dialogRef","data","buildForm","close","form","group","name_transport","required","event","preventDefault","valid","transport","value","addTransport","subscribe","onNoClick","AddPotentialTransportComponent","transport_id","getPotentialTypes","ListPotential","potential_type_id","potential","addPotentialTransport","newScheme","DeleteTransportComponent","id","deleteTransport","DeletePotentialTransportComponent","deletePotentialTransport","UpdateTransportComponent","router","activatedRoute","dialog","displayedColumns","potentialTypeList","params","getTransports","transportFiltered","filter","transporte","parseInt","map","patchValue","potentialList","getPotentialTransport","updateTransport","newProduct","ngOnInit","navigate","navigateByUrl","open","width","afterClosed","result","potentialId","potentialSelected","potencial","name_complete_potential_type","MaterialsService","http","get","api_scheme_project","pipe","api_construction_stage","api_annual_consumption_required","api_electricity_consumption_deconstructive_process","api_materials","material","post","api_material_scheme_data","changes","put","schemeData","api_units","api_potetnial_types","api_standards","api_db_material","api_transports","api_potential_transport","api_source_information","api_source_information_data","api_type_energy","api_type_energy_data","TransportAdminComponent","transportList","unitId","transportSelected","UpdatePotentialTransportComponent","scheme","updatePotentialTransport","standard_id","console","log","TransportAdminModule"],"mappings":"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","file":"transport-admin-transport-admin-module-ngfactory-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { TransportAdminComponent } from './components/transport-admin/transport-admin.component';\nimport { UpdateTransportComponent } from './components/update-transport/update-transport.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TransportAdminComponent,\n  },\n  {\n    path: 'update/:id',\n    component: UpdateTransportComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class TransportAdminRoutingModule {}\n","<div class=\"header-modal\">\n  <h1 mat-dialog-title class=\"title-standard-second-light\">\n    Eliminar potencial de impacto ambiental\n  </h1>\n  <a (click)=\"onNoClick()\" class=\"close-modal\">\n    X\n  </a>\n</div>\n\n<div mat-dialog-content>\n  <h1>¿Desea eliminar el potencial de impacto ambiental?</h1>\n</div>\n\n<div mat-dialog-actions class=\"center\">\n  <button mat-raised-button color=\"primary\" (click)=\"deletePotential($event, data[0].id)\">Eliminar</button>\n</div>","<form [formGroup]=\"form\" (ngSubmit)=\"addTransport($event)\">\n  <div class=\"header-modal\">\n    <h1 mat-dialog-title class=\"title-standard-second-light\">\n      Agregar transporte\n    </h1>\n    <a (click)=\"onNoClick()\" class=\"close-modal\">\n      X\n    </a>\n  </div>\n\n  <div mat-dialog-content>\n    <mat-card  class=\"custom-card\">\n      <mat-card-content>\n        <div class=\"Row\">\n          <div class=\"Col\">\n            <mat-form-field  appearance=\"outline\" >\n              <input matInput placeholder=\"Nombre de transporte\" formControlName=\"name_transport\">\n              <mat-error *ngIf=\"form.controls['name_transport'].hasError('required')\">\n                Transporte es <strong>requerido</strong>\n              </mat-error>\n            </mat-form-field>\n          </div>\n        </div>\n      </mat-card-content>\n    </mat-card>\n  </div>\n\n  <div mat-dialog-actions class=\"center\">\n    <button mat-raised-button color=\"primary\" type=\"submit\">Agregar</button>\n  </div>\n</form>","<div class=\"header-modal\">\n  <h1 mat-dialog-title class=\"title-standard-second-light\">\n    Eliminar transporte\n  </h1>\n  <a (click)=\"onNoClick()\" class=\"close-modal\">\n    X\n  </a>\n</div>\n\n<div mat-dialog-content>\n  <h1>¿Desea eliminar el transporte {{data[0].name_transport}}?</h1>\n</div>\n\n<div mat-dialog-actions class=\"center\">\n  <button mat-raised-button color=\"primary\" (click)=\"deleteTransport($event, data[0].id)\">Eliminar</button>\n</div>","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MaterialsService } from './../../../core/services/materials/materials.service';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\nexport interface DialogData {\n  name_transport: string;\n}\n\n@Component({\n  selector: 'app-add-transport',\n  templateUrl: './add-transport.component.html',\n  styleUrls: ['./add-transport.component.scss'],\n})\nexport class AddTransportComponent implements OnInit {\n  form: FormGroup;\n\n  constructor(\n    private materialsService: MaterialsService,\n    private formBuilder: FormBuilder,\n    public dialogRef: MatDialogRef<AddTransportComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData\n  ) {\n    this.buildForm();\n  }\n\n  ngOnInit(): void {}\n\n  onNoClick(): void {\n    this.dialogRef.close(this.data);\n  }\n\n  private buildForm() {\n    this.form = this.formBuilder.group({\n      name_transport: [null, Validators.required],\n    });\n  }\n\n  addTransport(event: Event) {\n    event.preventDefault();\n    if (this.form.valid) {\n      const transport = this.form.value;\n      this.materialsService.addTransport(transport).subscribe((data) => {\n        this.onNoClick();\n      });\n    }\n  }\n}\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MaterialsService } from './../../../../core/services/materials/materials.service';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\nexport interface DialogData {\n  potential_type_id: number;\n  transport_id: number;\n  value: string;\n}\n\n@Component({\n  selector: 'app-add-potential-transport',\n  templateUrl: './add-potential-transport.component.html',\n  styleUrls: ['./add-potential-transport.component.scss'],\n})\nexport class AddPotentialTransportComponent implements OnInit {\n  form: FormGroup;\n\n  transport_id: number;\n\n  ListPotential: any;\n\n  constructor(\n    private materialsService: MaterialsService,\n    private formBuilder: FormBuilder,\n    public dialogRef: MatDialogRef<AddPotentialTransportComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData\n  ) {\n    this.buildForm();\n    this.transport_id = data.transport_id;\n    this.materialsService.getPotentialTypes().subscribe((data) => {\n      this.ListPotential = data;\n    });\n  }\n\n  ngOnInit(): void {}\n\n  private buildForm() {\n    this.form = this.formBuilder.group({\n      potential_type_id: [null, Validators.required],\n      value: [null, Validators.required],\n    });\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close(this.data);\n  }\n\n  addPotential(event: Event) {\n    event.preventDefault();\n    if (this.form.valid) {\n      const potential = this.form.value;\n      this.materialsService\n        .addPotentialTransport({\n          ...potential,\n          transport_id: this.transport_id,\n        })\n        .subscribe((newScheme) => {\n          this.onNoClick();\n        });\n    }\n  }\n}\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MaterialsService } from './../../../core/services/materials/materials.service';\n\nexport interface DialogData {\n  id: number;\n  name_transport: string;\n}\n\n@Component({\n  selector: 'app-delete-transport',\n  templateUrl: './delete-transport.component.html',\n  styleUrls: ['./delete-transport.component.scss'],\n})\nexport class DeleteTransportComponent implements OnInit {\n  constructor(\n    private materialsService: MaterialsService,\n    public dialogRef: MatDialogRef<DeleteTransportComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData\n  ) {}\n\n  ngOnInit(): void {}\n\n  onNoClick(): void {\n    this.dialogRef.close(this.data);\n  }\n\n  deleteTransport(event: Event, id: number) {\n    event.preventDefault();\n    this.materialsService.deleteTransport(id).subscribe((data) => {\n      this.onNoClick();\n    });\n  }\n}\n","<h1>Administrador de Transportes</h1>\n\n<div>\n  <button mat-button class=\"yellow-button\" (click)=\"addTransport($event)\">\n    Agregar transporte\n  </button>\n  <button  mat-raised-button color=\"primary\" (click)=\"goToAdmin()\">\n    Regresar a Administrador\n  </button>\n</div>\n\n<table mat-table [dataSource]=\"transportList\" class=\"mat-elevation-z8\">\n\n  <ng-container matColumnDef=\"id\">\n    <th mat-header-cell *matHeaderCellDef> Id. </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.id}} </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"name_transport\">\n    <th mat-header-cell *matHeaderCellDef> Nombre de transporte </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.name_transport}} </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"actions\">\n    <th mat-header-cell *matHeaderCellDef> Acciones </th>\n    <td mat-cell *matCellDef=\"let element\"> \n      <a \n        mat-raised-button \n        [routerLink]=\"['update', element.id]\"\n      >Editar </a>\n      <button mat-raised-button color=\"warn\" (click)=\"deleteTransport($event, element.id)\">Eliminar</button>\n    </td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n</table>\n\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MaterialsService } from './../../../../core/services/materials/materials.service';\n\nexport interface DialogData {\n  id: number;\n}\n\n@Component({\n  selector: 'app-delete-potential-transport',\n  templateUrl: './delete-potential-transport.component.html',\n  styleUrls: ['./delete-potential-transport.component.scss'],\n})\nexport class DeletePotentialTransportComponent implements OnInit {\n  constructor(\n    private materialsService: MaterialsService,\n    public dialogRef: MatDialogRef<DeletePotentialTransportComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData\n  ) {}\n\n  ngOnInit(): void {}\n\n  onNoClick() {\n    this.dialogRef.close(this.data);\n  }\n\n  deletePotential(event: Event, id: number) {\n    event.preventDefault();\n    this.materialsService.deletePotentialTransport(id).subscribe((data) => {\n      this.onNoClick();\n    });\n  }\n}\n","<ng-content></ng-content>\n<ng-content select=\"mat-card-footer\"></ng-content>\n","<ng-content select=\"[mat-card-avatar], [matCardAvatar]\"></ng-content>\n<div class=\"mat-card-header-text\">\n  <ng-content\n      select=\"mat-card-title, mat-card-subtitle,\n      [mat-card-title], [mat-card-subtitle],\n      [matCardTitle], [matCardSubtitle]\"></ng-content>\n</div>\n<ng-content></ng-content>\n","<div>\n  <ng-content\n      select=\"mat-card-title, mat-card-subtitle,\n      [mat-card-title], [mat-card-subtitle],\n      [matCardTitle], [matCardSubtitle]\"></ng-content>\n</div>\n<ng-content select=\"img\"></ng-content>\n<ng-content></ng-content>\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MaterialsService } from './../../../core/services/materials/materials.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { AddPotentialTransportComponent } from '../potential/add-potential-transport/add-potential-transport.component';\nimport { UpdatePotentialTransportComponent } from '../potential/update-potential-transport/update-potential-transport.component';\nimport { DeletePotentialTransportComponent } from '../potential/delete-potential-transport/delete-potential-transport.component';\n\n@Component({\n  selector: 'app-update-transport',\n  templateUrl: './update-transport.component.html',\n  styleUrls: ['./update-transport.component.scss'],\n})\nexport class UpdateTransportComponent implements OnInit {\n  form: FormGroup;\n\n  id: string;\n\n  potentialList: any;\n\n  potentialTypeList: any;\n\n  displayedColumns: string[] = ['id', 'potential_type_id', 'value', 'actions'];\n\n  constructor(\n    private router: Router,\n    private formBuilder: FormBuilder,\n    private activatedRoute: ActivatedRoute,\n    private materialsService: MaterialsService,\n    public dialog: MatDialog\n  ) {\n    this.buildForm();\n    this.materialsService.getPotentialTypes().subscribe((data) => {\n      this.potentialTypeList = data;\n    });\n  }\n\n  ngOnInit(): void {\n    this.activatedRoute.params.subscribe((params: Params) => {\n      this.materialsService.getTransports().subscribe((data) => {\n        const transportFiltered = data.filter(\n          (transporte) => transporte.id === parseInt(params.id)\n        );\n\n        transportFiltered.map((transport) => {\n          this.id = transport.id;\n          this.form.patchValue(transport);\n          this.potentialList = [];\n          this.materialsService.getPotentialTransport().subscribe((data) => {\n            const potentialList = data.filter(\n              (potential) => potential.transport_id === transport.id\n            );\n            this.potentialList = potentialList;\n          });\n        });\n      });\n    });\n  }\n\n  private buildForm() {\n    this.form = this.formBuilder.group({\n      name_transport: [null, Validators.required],\n    });\n  }\n\n  updateMaterial(event: Event) {\n    event.preventDefault();\n    if (this.form.valid) {\n      const transport = this.form.value;\n      this.materialsService\n        .updateTransport(this.id, transport)\n        .subscribe((newProduct) => {\n          this.ngOnInit();\n          this.router.navigate(['./admin-transports/']);\n        });\n    }\n  }\n\n  goToTransportList() {\n    this.router.navigateByUrl('admin-transports');\n  }\n\n  addPotential(event: Event) {\n    event.preventDefault();\n    const dialogRef = this.dialog.open(AddPotentialTransportComponent, {\n      width: '680px',\n      data: { transport_id: this.id },\n    });\n\n    dialogRef.afterClosed().subscribe((result) => {\n      this.ngOnInit();\n    });\n  }\n\n  updatePotential(event: Event, potentialId) {\n    event.preventDefault();\n    const potentialSelected = this.potentialList.filter(\n      (data) => data.id === potentialId\n    );\n    const dialogRef = this.dialog.open(UpdatePotentialTransportComponent, {\n      width: '680px',\n      data: potentialSelected,\n    });\n\n    dialogRef.afterClosed().subscribe((result) => {\n      this.ngOnInit();\n    });\n  }\n\n  deletePotential(event: Event, potentialId) {\n    event.preventDefault();\n    const potentialSelected = this.potentialList.filter(\n      (data) => data.id === potentialId\n    );\n    const dialogRef = this.dialog.open(DeletePotentialTransportComponent, {\n      width: '680px',\n      data: potentialSelected,\n    });\n\n    dialogRef.afterClosed().subscribe((result) => {\n      this.ngOnInit();\n    });\n  }\n\n  getPotential(id: number) {\n    const potencial = this.potentialTypeList.filter(\n      (potencial) => potencial.id === id\n    );\n\n    return potencial[0].name_complete_potential_type;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { tap } from 'rxjs/operators';\nimport { environment } from './../../../../environments/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MaterialsService {\n  constructor(private http: HttpClient) {}\n\n  getMaterialSchemeProyects() {\n    return this.http.get<any>(environment.api_scheme_project).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  getConstructionStage() {\n    return this.http.get<any>(environment.api_construction_stage).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  getACR() {\n    return this.http.get<any>(environment.api_annual_consumption_required).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  getEDCP() {\n    return this.http\n      .get<any>(environment.api_electricity_consumption_deconstructive_process)\n      .pipe(\n        tap((data) => {\n          return data;\n        })\n      );\n  }\n\n  getMaterials() {\n    return this.http.get<any>(environment.api_materials).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  searchMaterial(material) {\n    return this.http\n      .get<any>(environment.api_materials + '?search=' + material)\n      .pipe(\n        tap((data) => {\n          return data;\n        })\n      );\n  }\n\n  addMaterial(data: object) {\n    return this.http.post<any>(environment.api_materials, data).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  deleteMaterial(id: number) {\n    return this.http.delete(`${environment.api_materials}${id}/`).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  deleteMaterialSchemeData(id: number) {\n    return this.http\n      .delete(`${environment.api_material_scheme_data}${id}/`)\n      .pipe(\n        tap((data) => {\n          return data;\n        })\n      );\n  }\n\n  updateMaterial(id: string, changes) {\n    return this.http.put(`${environment.api_materials}${id}/`, changes).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  getfake() {\n    return this.http\n      .get<any>(\n        'http://127.0.0.1:8000/api-projects/material-scheme-data/'\n        //'https://evamed-rest-api.herokuapp.com/api-projects/material-scheme-data/',\n      )\n      .pipe(\n        tap((data) => {\n          return data;\n        })\n      );\n  }\n\n  deleteFake(id: number) {\n    return this.http\n      .delete(\n        `https://evamed-rest-api.herokuapp.com/api-projects/material-scheme-data/${id}/`\n      )\n      .pipe(\n        tap((data) => {\n          return data;\n        })\n      );\n  }\n\n  addFake(schemeData: object) {\n    return this.http\n      .post<any>(\n        'https://evamed-rest-api.herokuapp.com/api-projects/material-scheme-data/',\n        schemeData\n      )\n      .pipe(\n        tap((data) => {\n          return data;\n        })\n      );\n  }\n\n  getUnits() {\n    return this.http.get<any>(environment.api_units).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  addUnit(data: object) {\n    return this.http.post<any>(environment.api_units, data).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  updateUnit(id: string, changes) {\n    return this.http.put(`${environment.api_units}${id}/`, changes).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  deleteUnit(id: number) {\n    return this.http.delete(`${environment.api_units}${id}/`).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  getPotentialTypes() {\n    return this.http.get<any>(environment.api_potetnial_types).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  addPotentialTypes(data: object) {\n    return this.http.post<any>(environment.api_potetnial_types, data).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  updatePotentialTypes(id: string, changes) {\n    return this.http\n      .put(`${environment.api_potetnial_types}${id}/`, changes)\n      .pipe(\n        tap((data) => {\n          return data;\n        })\n      );\n  }\n\n  deletePotentialType(id: number) {\n    return this.http.delete(`${environment.api_potetnial_types}${id}/`).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  getStandards() {\n    return this.http.get<any>(environment.api_standards).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  getDbMaterials() {\n    return this.http.get<any>(environment.api_db_material).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  addDbMaterial(data: object) {\n    return this.http.post<any>(environment.api_db_material, data).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  updateDbMaterial(id: string, changes) {\n    return this.http.put(`${environment.api_db_material}${id}/`, changes).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  deleteDbMaterial(id: number) {\n    return this.http.delete(`${environment.api_db_material}${id}/`).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  getTransports() {\n    return this.http.get<any>(environment.api_transports).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  addTransport(data: object) {\n    return this.http.post<any>(environment.api_transports, data).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  updateTransport(id: string, changes) {\n    return this.http.put(`${environment.api_transports}${id}/`, changes).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  deleteTransport(id: number) {\n    return this.http.delete(`${environment.api_transports}${id}/`).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  getPotentialTransport() {\n    return this.http.get<any>(environment.api_potential_transport).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  addPotentialTransport(data: object) {\n    return this.http.post<any>(environment.api_potential_transport, data).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  updatePotentialTransport(id: string, changes) {\n    return this.http\n      .put(`${environment.api_potential_transport}${id}/`, changes)\n      .pipe(\n        tap((data) => {\n          return data;\n        })\n      );\n  }\n\n  deletePotentialTransport(id: number) {\n    return this.http\n      .delete(`${environment.api_potential_transport}${id}/`)\n      .pipe(\n        tap((data) => {\n          return data;\n        })\n      );\n  }\n\n  getMachinery() {\n    return this.http.get<any>(environment.api_source_information).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  addMachinery(data: object) {\n    return this.http.post<any>(environment.api_source_information, data).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  updateMachinery(id: string, changes) {\n    return this.http\n      .put(`${environment.api_source_information}${id}/`, changes)\n      .pipe(\n        tap((data) => {\n          return data;\n        })\n      );\n  }\n\n  deleteMachinery(id: number) {\n    return this.http.delete(`${environment.api_source_information}${id}/`).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  getMachineryPotential() {\n    return this.http.get<any>(environment.api_source_information_data).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  addMachineryPotential(data: object) {\n    return this.http\n      .post<any>(environment.api_source_information_data, data)\n      .pipe(\n        tap((data) => {\n          return data;\n        })\n      );\n  }\n\n  updateMachineryPotential(id: string, changes) {\n    return this.http\n      .put(`${environment.api_source_information_data}${id}/`, changes)\n      .pipe(\n        tap((data) => {\n          return data;\n        })\n      );\n  }\n\n  deleteMachineryPotential(id: number) {\n    return this.http\n      .delete(`${environment.api_source_information_data}${id}/`)\n      .pipe(\n        tap((data) => {\n          return data;\n        })\n      );\n  }\n\n  getTypeEnergy() {\n    return this.http.get<any>(environment.api_type_energy).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  addTypeEnergy(data: object) {\n    return this.http.post<any>(environment.api_type_energy, data).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  updateTypeEnergy(id: string, changes) {\n    return this.http.put(`${environment.api_type_energy}${id}/`, changes).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  deleteTypeEnergy(id: number) {\n    return this.http.delete(`${environment.api_type_energy}${id}/`).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  getTypeEnergyData() {\n    return this.http.get<any>(environment.api_type_energy_data).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  addTypeEnergyData(data: object) {\n    return this.http.post<any>(environment.api_type_energy_data, data).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n\n  updateTypeEnergyData(id: string, changes) {\n    return this.http\n      .put(`${environment.api_type_energy_data}${id}/`, changes)\n      .pipe(\n        tap((data) => {\n          return data;\n        })\n      );\n  }\n\n  deleteTypeEnergyData(id: number) {\n    return this.http.delete(`${environment.api_type_energy_data}${id}/`).pipe(\n      tap((data) => {\n        return data;\n      })\n    );\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { MaterialsService } from 'src/app/core/services/materials/materials.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { AddTransportComponent } from '../add-transport/add-transport.component';\nimport { DeleteTransportComponent } from '../delete-transport/delete-transport.component';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-transport-admin',\n  templateUrl: './transport-admin.component.html',\n  styleUrls: ['./transport-admin.component.scss'],\n})\nexport class TransportAdminComponent implements OnInit {\n  transportList: any;\n\n  displayedColumns: string[] = ['id', 'name_transport', 'actions'];\n\n  constructor(\n    private materialsService: MaterialsService,\n    public dialog: MatDialog,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.materialsService.getTransports().subscribe((data) => {\n      this.transportList = data;\n    });\n  }\n\n  goToAdmin() {\n    this.router.navigateByUrl('admin');\n  }\n\n  addTransport(event: Event) {\n    event.preventDefault();\n    const dialogRef = this.dialog.open(AddTransportComponent, {\n      width: '680px',\n      data: {},\n    });\n\n    dialogRef.afterClosed().subscribe((result) => {\n      this.ngOnInit();\n    });\n  }\n\n  deleteTransport(event: Event, unitId) {\n    event.preventDefault();\n    const transportSelected = this.transportList.filter(\n      (data) => data.id === unitId\n    );\n    const dialogRef = this.dialog.open(DeleteTransportComponent, {\n      width: '680px',\n      data: transportSelected,\n    });\n\n    dialogRef.afterClosed().subscribe((result) => {\n      this.ngOnInit();\n    });\n  }\n}\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MaterialsService } from './../../../../core/services/materials/materials.service';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\nexport interface DialogData {\n  id: number;\n  potential_type_id: number;\n  transport_id: number;\n  value: string;\n}\n\n@Component({\n  selector: 'app-update-potential-transport',\n  templateUrl: './update-potential-transport.component.html',\n  styleUrls: ['./update-potential-transport.component.scss'],\n})\nexport class UpdatePotentialTransportComponent implements OnInit {\n  form: FormGroup;\n\n  transport_id: number;\n\n  ListPotential: any;\n\n  constructor(\n    private materialsService: MaterialsService,\n    private formBuilder: FormBuilder,\n    public dialogRef: MatDialogRef<UpdatePotentialTransportComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData\n  ) {\n    this.buildForm();\n    this.materialsService.getPotentialTypes().subscribe((data) => {\n      this.ListPotential = data;\n    });\n  }\n\n  ngOnInit(): void {\n    this.form.patchValue(this.data[0]);\n  }\n\n  private buildForm() {\n    this.form = this.formBuilder.group({\n      potential_type_id: [null, Validators.required],\n      value: [null, Validators.required],\n    });\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close(this.data);\n  }\n\n  updatePotential(event: Event) {\n    event.preventDefault();\n    if (this.form.valid) {\n      const scheme = this.form.value;\n      this.materialsService\n        .updatePotentialTransport(this.data[0].id, {\n          ...scheme,\n          transport_id: this.data[0].standard_id,\n        })\n        .subscribe((newScheme) => {\n          console.log(newScheme);\n          this.onNoClick();\n        });\n    }\n  }\n}\n","<form [formGroup]=\"form\" (ngSubmit)=\"updatePotential($event)\">\n  <div class=\"header-modal\">\n    <h1 mat-dialog-title class=\"title-standard-second-light\">\n      Editar potencial de impacto ambiental\n    </h1>\n    <a (click)=\"onNoClick()\" class=\"close-modal\">\n      X\n    </a>\n  </div>\n\n  <div mat-dialog-content>\n    <mat-card  class=\"custom-card\">\n\n      <mat-card-content>\n        <div class=\"Row\">\n          <div class=\"Col\">\n            <mat-form-field appearance=\"outline\">\n              <mat-select placeholder=\"Potencial de impacto ambiental\" formControlName=\"potential_type_id\" >\n                <mat-option *ngFor=\"let potential of ListPotential\" [value]=\"potential.id\">\n                  {{ potential.name_complete_potential_type }}\n                </mat-option>\n              </mat-select>\n              <mat-error *ngIf=\"form.controls['potential_type_id'].hasError('required')\">\n                Potencial es un campo <strong>requerido</strong>\n              </mat-error>\n            </mat-form-field>\n          </div>\n        </div>\n      </mat-card-content>\n      \n      <mat-card-content>\n        <div class=\"Row\">\n          <div class=\"Col\">\n            <mat-form-field  appearance=\"outline\" >\n              <input matInput placeholder=\"Valor\" formControlName=\"value\">\n              <mat-error *ngIf=\"form.controls['value'].hasError('required')\">\n                El valor es <strong>requerido</strong>\n              </mat-error>\n            </mat-form-field>\n          </div>\n        </div>\n      </mat-card-content>\n      \n    </mat-card>\n  </div>\n\n  <div mat-dialog-actions class=\"center\">\n    <button mat-raised-button color=\"primary\" type=\"submit\">Editar</button>\n  </div>\n</form>","<form [formGroup]=\"form\" (ngSubmit)=\"addPotential($event)\">\n  <div class=\"header-modal\">\n    <h1 mat-dialog-title class=\"title-standard-second-light\">\n      Agregar potencial de impacto ambiental\n    </h1>\n    <a (click)=\"onNoClick()\" class=\"close-modal\">\n      X\n    </a>\n  </div>\n\n  <div mat-dialog-content>\n    <mat-card  class=\"custom-card\">\n\n      <mat-card-content>\n        <div class=\"Row\">\n          <div class=\"Col\">\n            <mat-form-field appearance=\"outline\">\n              <mat-select placeholder=\"Potencial de impacto ambiental\" formControlName=\"potential_type_id\" >\n                <mat-option *ngFor=\"let potential of ListPotential\" [value]=\"potential.id\">\n                  {{ potential.name_complete_potential_type }}\n                </mat-option>\n              </mat-select>\n              <mat-error *ngIf=\"form.controls['potential_type_id'].hasError('required')\">\n                Potencial es un campo <strong>requerido</strong>\n              </mat-error>\n            </mat-form-field>\n          </div>\n        </div>\n      </mat-card-content>\n      \n      <mat-card-content>\n        <div class=\"Row\">\n          <div class=\"Col\">\n            <mat-form-field  appearance=\"outline\" >\n              <input matInput placeholder=\"Valor\" formControlName=\"value\">\n              <mat-error *ngIf=\"form.controls['value'].hasError('required')\">\n                El valor es <strong>requerido</strong>\n              </mat-error>\n            </mat-form-field>\n          </div>\n        </div>\n      </mat-card-content>\n      \n    </mat-card>\n  </div>\n\n  <div mat-dialog-actions class=\"center\">\n    <button mat-raised-button color=\"primary\" type=\"submit\">Agregar</button>\n  </div>\n</form>","<form [formGroup]=\"form\" (ngSubmit)=\"updateMaterial($event)\">\n  <mat-card  class=\"custom-card\">\n    <mat-card-header>\n      <mat-card-title>Actualizar datos de transporte</mat-card-title>\n    </mat-card-header>\n\n    <mat-card-content>\n      <div class=\"Row\">\n        <div class=\"Col\">\n          <mat-form-field  appearance=\"outline\" >\n            <input matInput placeholder=\"Nombre del transporte\" formControlName=\"name_transport\">\n            <mat-error *ngIf=\"form.controls['name_transport'].hasError('required')\">\n              Nombre del transporte es <strong>requerido</strong>\n            </mat-error>\n          </mat-form-field>\n        </div>\n      </div>\n    </mat-card-content>\n\n    <mat-card-actions>\n      <button mat-raised-button color=\"primary\" type=\"submit\">Editar Transporte</button>\n      <button\n        mat-button\n        class=\"yellow-button\"\n        (click)=\"goToTransportList()\"\n      >\n        Lista de transportes\n      </button>\n    </mat-card-actions>\n\n    <h1>Administrador de potenciales de impacto ambiental</h1>\n\n    <div>\n      <button mat-button class=\"yellow-button\" (click)=\"addPotential($event)\">\n        Agregar potencial\n      </button>\n    </div>\n\n    <table mat-table [dataSource]=\"potentialList\" class=\"mat-elevation-z8\">\n\n      <ng-container matColumnDef=\"id\">\n        <th mat-header-cell *matHeaderCellDef> Id. </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.id}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"potential_type_id\">\n        <th mat-header-cell *matHeaderCellDef> Potencial de impacto ambiental </th>\n        <td mat-cell *matCellDef=\"let element\"> {{getPotential(element.potential_type_id)}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"value\">\n        <th mat-header-cell *matHeaderCellDef> Valor </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.value}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"actions\">\n        <th mat-header-cell *matHeaderCellDef> Acciones </th>\n        <td mat-cell *matCellDef=\"let element\"> \n          <button mat-raised-button (click)=\"updatePotential($event, element.id)\">Editar</button>\n          <button mat-raised-button color=\"warn\" (click)=\"deletePotential($event, element.id)\">Eliminar</button>\n        </td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n\n  </mat-card>\n</form>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { TransportAdminRoutingModule } from './transport-admin-routing.module';\nimport { TransportAdminComponent } from './components/transport-admin/transport-admin.component';\nimport { AddTransportComponent } from './components/add-transport/add-transport.component';\nimport { UpdateTransportComponent } from './components/update-transport/update-transport.component';\nimport { DeleteTransportComponent } from './components/delete-transport/delete-transport.component';\nimport { SharedModule } from '../shared/shared.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MaterialModule } from '../material/material.module';\nimport { ChartsModule } from 'ng2-charts';\nimport { AddPotentialTransportComponent } from './components/potential/add-potential-transport/add-potential-transport.component';\nimport { DeletePotentialTransportComponent } from './components/potential/delete-potential-transport/delete-potential-transport.component';\nimport { UpdatePotentialTransportComponent } from './components/potential/update-potential-transport/update-potential-transport.component';\n\n@NgModule({\n  declarations: [\n    TransportAdminComponent,\n    AddTransportComponent,\n    UpdateTransportComponent,\n    DeleteTransportComponent,\n    AddPotentialTransportComponent,\n    DeletePotentialTransportComponent,\n    UpdatePotentialTransportComponent,\n  ],\n  imports: [\n    CommonModule,\n    TransportAdminRoutingModule,\n    SharedModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MaterialModule,\n    ChartsModule,\n  ],\n  exports: [\n    TransportAdminComponent,\n    AddTransportComponent,\n    UpdateTransportComponent,\n    DeleteTransportComponent,\n    AddPotentialTransportComponent,\n    DeletePotentialTransportComponent,\n    UpdatePotentialTransportComponent,\n  ],\n  entryComponents: [\n    AddTransportComponent,\n    DeleteTransportComponent,\n    AddPotentialTransportComponent,\n    DeletePotentialTransportComponent,\n    UpdatePotentialTransportComponent,\n  ],\n})\nexport class TransportAdminModule {}\n"]}